%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%DocumentNeedsFonts: (atend)
%%DocumentSuppliedFonts: (atend)
%%Creator: Frame 7.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 7.0, for use with Adobe Unix Frame 7.0 products
%
% This ps_prolog file is Copyright (c) 1986-2002 Adobe Systems, Incoporated.
% All rights reserved.  This ps_prolog file may be freely copied and 
% distributed in conjunction with documents created using Adobe FrameMaker
% as long as this copyright notice is preserved.
/FMDocSave save def
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Adobe FrameMaker normally prints colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Adobe FrameMaker can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Adobe FrameMaker will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Adobe FrameMaker has two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (7.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	2 copy exch = = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsetsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fmConvertCMYK
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orghalftone
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
	/tintGray
] { 0 def } forall
/FmBD {bind def} bind def
/fmXD {
	exch def
} FmBD
/FmPD4U true def 
/FmCB {/fmConvertCMYK fmXD} FmBD
/fmCMYKtoRGB {fmConvertCMYK fMAcrobat and} FmBD
/IsDistiller5050 
{ 
  mark systemdict 
  dup currentdistillerparams /CoreDistVersion get dup 5050 ge
  {cleartomark true} 
  {5000 lt 
    {cleartomark false} 
    { 
      dup dup /product known exch /buildtime known and not
      {cleartomark false} 
      {dup dup /product get (Distiller) eq                      
	{/buildtime get 985000000 gt 
	  {cleartomark true}
	  {cleartomark false} ifelse
	}
	{dup dup /product get (Mac Distiller) eq                  
	  {/buildtime get 985000000 gt 
	    {cleartomark true}
	    {cleartomark false} ifelse
	  }
	  {dup dup /product get (Acrobat Distiller Server) eq       
	    {cleartomark true } 
	    { 
	      1183615869 internaldict /makeoperator known 
	      {cleartomark true}
	      {cleartomark false} ifelse 
	    } ifelse
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  } ifelse
} bind def
/fmConvertCMYK true def 
systemdict /pdfmark known systemdict /currentdistillerparams known and {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge 
	{
	
		
		/FmPD2 /pdfmark load def
		
		IsDistiller5050
		{
		  /FmPD4 /pdfmark load def
		}
		{
		  /FmPD4
		  { FmPD4U 
	 	    {(%%[Acrobat Distiller 5.05 and higher is required to generate Tagged PDF]%%) = 
	  	     (%%[Tagged PDF is not generated.]%%) = flush
		    } if
		    /FmPD4U false def
		    cleartomark
		  } FmBD
		} ifelse
		
		
		
		
	  /fmCG true def 
	  /FmND
	  { mark exch /Dest exch 5 3 roll /View [ /XYZ 5 -2 roll FmDC null ] /DEST FmPD 
	  }FmBD
	  /FmPA 
	  { fmCG
	    { pop pop pop }
	    { FmND } ifelse
	  } FmBD
	} 
	{
		
		/FmPD4 /cleartomark load def
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
		/FmND {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD4 /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
	/FmND {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix defaultmatrix itransform round cvi exch round cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FmBz {3 -1 roll sub 3 1 roll exch sub exch 0 0 4 1 roll 4 1 roll}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 1] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/tintCMYK {
	1 tintGray sub FrameCurColors 0 4 getinterval aload pop 	
	4 index mul 5 1 roll										
	3 index mul 5 1 roll										
	2 index mul 5 1 roll										
	mul 4 1 roll												
}bind def
/tintRGB {
	1 tintGray sub FrameCurColors 4 3 getinterval aload pop 	
	1 exch sub 3 index mul 1 exch sub 4 1 roll					
	1 exch sub 2 index mul 1 exch sub 4 1 roll					
	1 exch sub mul 1 exch sub 3 1 roll							
}bind def
/combineColor {
	/tintGray 1 1 FrameCurGray sub FrameCurColors 7 get mul sub def
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			tintCMYK FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				tintGray RealSetgray
			} {
				fmCMYKtoRGB not FMPColor graymode and and {
					tintCMYK
					RealSetcmykcolor
				} {
					tintRGB
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ tintGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{tintGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop tintGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop tintGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop tintGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix defaultmatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix defaultmatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	fMLevel1 {
		FMPColor {
			orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
		}
		{
			orgxfer cvx settransfer
		} ifelse
		orgfreq organgle orgproc cvx setscreen
	} {
		orghalftone sethalftone
	}ifelse
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	dup 1 gt {/#copies exch def} {pop} ifelse
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	fMLevel1 not {
		/orghalftone currenthalftone def
	}if 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMENDDOCUMENT {
	FMDocSave restore	
} def
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	/FmPD4U FmPD4U
	pagesave restore
	def
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature: *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	
	mark
	statusdict begin 
		/setpageparams where {
			pop
			paperwidth paperheight 0 1 
			{setpageparams} stopped 
		} { 
			true 
		} ifelse
		
		{
			
			/setpagedevice where {
				pop 
				1 dict dup begin
					/PageSize [ paperwidth paperheight ] def
				end 
				{setpagedevice} stopped
			} {
				true	
			} ifelse
		} {
			false		
		} ifelse 
	end
	{cleartomark true}{cleartomark false}ifelse
} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		8 1 roll
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
		8 -1 roll
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add dup 0 ne {div} {pop pop .5} ifelse fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	[FMsetsize 0 0 FMpointsize 0 0] makefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	/FMsetsize FMpointsize def
	F 
	} bind def
/QQ { 
	/FMsetsize exch def
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	2 copy 0.0 0.0 1.0 5 3 roll arc 
	round cvi 360 mod exch round cvi 360 mod eq {closepath} if 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(7.0) FMVERSION
1 1 0 0 612 792 0 1 29 FMDOCUMENT
%%IncludeFont: Helvetica
0 0 /Helvetica FMFONTDEFINE
%%IncludeFont: Times-Roman
1 0 /Times-Roman FMFONTDEFINE
%%IncludeFont: Courier
2 0 /Courier FMFONTDEFINE
%%IncludeFont: Times-Italic
3 0 /Times-Italic FMFONTDEFINE
%%IncludeFont: Times-Bold
4 0 /Times-Bold FMFONTDEFINE
%%BeginFont: MinionPro-Regular
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%ADOBeginSubsetFont: MinionPro-Regular Initial
ct_CffDict begin
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MinionPro-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2002, 2004 Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D371,799.Minion is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-290 -360 1684 989} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 650 670 437 459 623 640 700 716 464 486] def
/OtherBlues [-261 -239] def
/FamilyBlues [-22 0 650 670 437 459 623 640 700 716 464 486] def
/FamilyOtherBlues [-261 -239] def
/BlueScale 0.0437917 def
/BlueShift 5.1 def
/StdHW [32] def
/StdVW [79] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/space <1C60D8A8C9B889970A> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B88622A20BEE6FE758C6EA81AC58F948B82FF4AEDF6FD
AEAA11545D5FED21207885C98E179> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 46 /period put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B75BE5919947CB2EEB8E5EDD3554F80D5A5EB8D43768FA2
A854FCF45893A2BBAFAEE48B2C21203AE0000703CEE538C576248CDE18537E00
DE47F854177267191134F662B60469E53F49963606D1D3D7DA6B498F5156CEE4
0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B75BE5651F5D13227D5CE5949D94867FDF67E0D40D50D9D4
7D355440E5CA52302664629A3BCAB48342E2F13A2F08209F3DA2DB1341BF9362
FAC2CC2DAAF9113781BB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 49 /one put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B75BE5656D406C6ABC516BEA8DD92DEB8A665E8A0A461A79
263E9A5D057D20D9378DEF6E9CD588C90910A245BEC6093AB1D96F8D42B02624
B3D55A0F374AE925839846C9A3E31828B71EF9E2DB190BF22FDEAC8851C9C600
88371C9368FD2E078473B3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B75BE5918BFD7A3723E4D7BC5AA79B284D74FAD091E22D
6505E7130A2C48253744D2479479CD8948E4305177A16FB824245BD09CD45B4C
97629CFFC39769BBA2670D6A059F123BD0CD3DCBD96F163C6A086E749E1B0863
CC01DF90B71C9293913F20A64A4BFFD638658A363B37E8A0637CFBBAA9708F52
1FB44E7566D70799E101F6143552878CCAE7F7EC0C6FDC45C1C8814F669D83E3
475218D037B112928C70738A2B57E7381938> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 51 /three put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B75BE5651F5D1C65E8307EA378AB7070081E67782E03888
63678DE0DF92A363BCE5CF05EC518F84D15448D92D0CFD2802DBBA29BA0E90B7
707CF7FD32E9CDE006AF3C8CD3DB11516403582E6AED65DF7BE09F659D03363B
8BDCF04> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 52 /four put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B75BE5918A2C96CD6820A113A1BFF3149D48DB16839110F
BF3518398549258DDAD2686A1332B56801975F605CBEF075CE6F2DA66C5611CC
7B46D38AC89240822738CDD6685CEC732B50E8CAE56C8B5F242BC79DC9378A03
21302EC60BB8A27FC6E79947E2B3EF33D6C8727659A52C4365AD4B705BBF69F5
C94AE5A6FAC01045AA6A35CE4B440723B996AAE7A7448C4D0194F0ADE979B7BE
9B554FD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 53 /five put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B75BE5919947C4FE04164B96DAD0D84C79BA3D86E22F463F
5911CB25181AB20AECD31289ADD6F6A74D3EC07CCDC7F007876BAF1B9FE3227C
AEE76B0439E47D65C6753A8FF6135A6B9B31B107A4F1F700CE019AEE7366DD78
E32B8E31F74F226039C316C45249DF4DBFA7464682F224A2826DE023598F0C28
61E76B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 54 /six put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B75BE571108146A43A1BE967C88B55DC5E612102179BA6
6A883370A6592B44F8D2EE79A206CB7D245E867D242BF14AD12E81DEA393D2BB
9906CE4309B0933812577CEC40FF3EF2EAB442B1674542C3586977C7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 55 /seven put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B75BE5919F1D0BEABEFD1A841AFD0D7F0E6C8DD9F2F0A7
B7BEC39E2FDB5ECA059CEA447C95C4F8FA2C65429CB552FFAABF82B2B7800BD8
94118C0074973915F948A0A4DAE2EF9F6913BBBA408521D78BF2AEB0828A41C4
0D8B68022165F87DC5BF185F2A2453DA92B2A054F30FB7AC8B6D7DB43155FBC5
526D051105FA372F05543D367DCE74F05FA4766D0F7A2DF66D68FF3E6F240FCC
65CE7C881484685E36DC9846F3D81A96A7277B36331D4471DFA1FAA856156ECB
6224C5C7BBD47E04C3C1535C0A8120FAA551F1075AF3241D50AF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 56 /eight put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6269C57F1D89E5CFEE7012EE5E3CA3F909077AFE6986232F8
3A9819B50FA5D8AE43861D269C4941B97D88482536DB293AF769EFD59764A172
647FD088E79AB9A2CB4A5491EF861CEC0AC8A649F3595FCF4EB4036688E98780
47898C5E00715BEAEA2584517A0DFAC632E3109164B3D951050420ACEE03> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 65 /A put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B7CF7CB0CD959A615CFC1CB62D66A24ACD56A85D1F32F96F36
E221BC90E6ACBEF0196A474BD184F254B76F77B98F41C533D747CDF2C770CD10
89B9E8673AC3B93AE480596F54301CD44C0532E406ACCFF95D6B23020B72CE5B
F5E5466A70505DE1D3E19CF2A3CB222EF467F5AD230A147CC30A3BFD234F6581
168E1B9F034889CA78B94D37F5F847D7CC3172A3D8855EA43ED5C329C3F36789
268608A41C99D350B8237CFC176308E6139886B7858B7DA350F37B9E85D32E1A
A3B79D8056D1000197A3350A6794A449B305755794A117F9B30571C651A8BC4A
79A031940B8D8E77870617F156588DF7D881985882CF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 66 /B put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B64C38590AEE9853D22E0618C5A39680094009F26599973925
6D281C2EBB6C34F33E1215A2B41DE5C1CF4793C142DA06DE8CA982CA97BBF9B4
2E769F527429F124F08DFF55CDBE733F56E56E4E558AFF4485BE7A36463EDE41
85C22C3F4C197A45119F76A8787F1F14844FEC179377FF3A00335DE5AEF003EC
F296887E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 67 /C put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6127D469F332F2A12430BAFEA710EF8224848CAC9176D0C0F
264001F9FF2F6F554884D14965D43C6917E827C1502DDB561D6A7CF0958492DF
DF11445CEFEC6C38196B2AD6144D720B361635FAF7DC23CAFCD0DBBDBFFD6051
8165C9E68AB1D9E0EFE1B9D2636202BA5507F1B0E439919FF0CEE3FF12774424
BC201C17> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 68 /D put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B78AC356E39E16DFA81B9F85A1A8768333AEE6F0963E164BD4
E4271E20B8A009EA16BFFB98B524624F90F32F78C7B937068E92817615C0A398
98E30C8508960E1C40D740F229A9C24505DE5964909594ED522ECFD2F026D151
30CDDCD145C653ABC903D688A53A14CD785EE74E79EAE5D0A8EDF25A03A61283
E78FD625457708B098C7C12A788CC20F71ACF634158A3FD3248065777ADF79B3
139A9F661765B47B998C266716> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 70 /F put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/G <1C60D8A8C9B63EE67EB209C8CA0AC03E61A8F2466B2FA81B0E2565B7E147
5BE6C9D5E1FBBA00D74E23CF40DC9B477271F49881E3538343F258F06AEF0218
0284D920BC2DA66552C9B3178FC3FE1255843AA524133BE4624E7BDC20160416
60DFA5BC99EBF716123C1FC607037B51D54B76EC14A29F769B2ED41D31DF0A31
F669B70F55D50EB9BC9CF68BC0AFAF1F64D5EF3988A7FE680655CCF5A0B63C86
4A8B22F3F3729E7C44ADB560A440434C4301B7CDE9E868A478D3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 71 /G put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6F3D357872DCB809E1B38E8D32C3A0D59806500845DF49546
890D50B8ED82786E2D4D6CBB468B4449B9211E68D0C559DD4F8A85C6DB01DD16
85DBB9780E3850E08299C50FE58BA896CC2BD862CF1AC9E0E42FDF27AF6EE735
29EB30208BCD61A9BC5C9A9ADDB6D98509CE0BE4A9702CA80C4BDA83324BE98E
64F831B1A7BE411B6438EF1F84E9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 72 /H put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B817A008DB86C36D400071C0B293538D6245304B22017C078C
CDAFC1121E4DEA5C466158CE0BD3172ECAC7FECA5892D40E7664006F48B78BB7
DABBF8CFEBCDEA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 73 /I put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/L <1C60D8A8C9B78181BC3FC8CED30134A259C227984CB1EEDE8BF4BA2BC232
C5431D165E745784BC93BD978C860476A6ACFCDF824FB732F67D24DE68EBB8CC
239E1E8BF4822A801AE8A7AF6EE4F95B5A84721259760386F14ADCEC3301AB02
0B7A6C40A0C3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 76 /L put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B61AE93D5FBF22628D7625079C2F2B8BC356DA1A7736DDF1A7
C5FC48A50316B7A74F0207520AB57587360E4A69606C7EDF3D9F41463D96CE4F
B7398713C6384713A5580C5A9969E7999D080C35F16D017ADC0A2116408A74CF
7794600165208A630F1CC28396AD99969ABDA2FF5D16EA1874BBDE2CC152450A
3966A9416BA019D4C86F423499C5568570A50EC3C86C105E77839E07C37B4ED0
088B64D9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 78 /N put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B61E13ED6D6CFCCA9B81193C8C24D5ECD93E33B45EBF805B91
C29D40C362789C8880EF71B4ECFB75F37D53A6217C03951AFBD24042E31FF96C
2EE34EFADECDFEF89C1361734B94C5DF35F9FAC2C57AB5D4AA132FECCB07332C
4BD4B87D67D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 79 /O put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7E8979EB461EDBF6E6021C6AC1BAC67970A442FCD383DF344
FAC6FBB54A51CE4D89B6D0ADCBA15D85384E586424D2925D70EB42D4CA6152E4
821964B64276AC32F3D26580FC5FC11285E26913711108EE8E3E279ACDFDBFAF
94077801CBD04CA24D969F70FFBDC926AE348412CB12F07892F5A049771147B3
0454B8B79CB84B4A18B26917> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 80 /P put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B6605BECAD4216162CA02DE0A082F7E24FF59C4C8C690A4632
26A45216E5E0174E2C231612A545046973701918C400C0E1EB46013CEBA43019
EF6D1E23692296E41E8F3FBBDCA707082ADE8053D1B9A067751729AB9563FF43
D5FEF55E8A09E75917D02FB10795C41CD5D4A07452C0FCF9A4D968988D63BC67
B0BE26E7D2FDF2B1F30C17CC51A0C61BBD6C9A3C5C4424B92BA1ABEF2B4EEA30
05F4D2DDBADA728CCD352B64891945D791705248EC1C60CFEE0D573AF498B106
208CDA4B941E74B17C6F25E7463CE13756092E41F1E910B529EEE7F539738C10
43AED10DB023CE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 82 /R put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B741FCB722C871A47085610C333DBA0BEE7319C3CFB7BC6AC5
0101C166D3E56989D2E98F399027AC003FB8F3FD1C162C42288C6B710EADFE5D
6D44920F947CDDCB69F9E4E563C59D3A6743111BBC70B13E5466EC9013376EA9
4ADDC45502D3614C5DC079586082C896B40216B860131EE3BA7BC40844F1FDD6
4D3688B8DF0C54> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 83 /S put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D2D04D4B72A35D9643C76978157B3C5476B3EA8FF82CAF48
B8D5C792548EFDF500D66DF2042240255DD3793CBFE1A6B4B558F5A04AD735BC
02C89898CDE82E0ABC282CF11168082101A5232A237014A899F0799E46ADDBEE
9946CA33E8788749E56EEC1CCF3CF574A8A3D4B42D43BCDBC2451965DB6AD9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 84 /T put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/V <1C60D8A8C9B63233FA3FB04EEE9E6D2EC4AE91E78117E7693B28B0CCBD4E
228D9378CF740CF4902F98652FD2F3C720C8757B9FCCDD6F340873A69BBDA9C7
46023DAD2A674C3677AFC7F84CEDA5C2C0EA3BC14CDD0D35AE881A60A8B58C9F
5828395B572F5A5589F025372C1F9D9486FB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 86 /V put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5CDAD9ACFFDA1AA4CEEE677F3E4A0A2605DA8C23C87427D37
6F8805B455F9475B7E40F309FBE1CD050B3C12B550D89F760CBC84E0D6E866C5
6DD3138757263676ADE4452394A5E4DF4965F79908DB54619F998A29553243D6
78598E5B3E722FE568EB177E8DD3F75294E0B1A53995455CF3EFFC2BF3106ADE
4131E94B2B25078C2CFB895F2FE4A6BE3FD5C80469A447195B10ECDE168B099F
F041CEE4609D4B49EC12A71CC6370357F495D61F7876601CEE813228509EAF74
1581115E15F733> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 87 /W put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B764275801BCEB6D8EFACB04143AA8CEDEF08CE2EB1EE786C6
78971510D57469CEDE8A1566929BFAEA4A7D1484DFB1DBD0CE73C0815ADDCE38
3B7D2B3C226FBB97C8EE6B0C173DAE08C6524A94B4EE09D2957C6F244D0551C6
AC02F4E4D46F3BBB64C6F580EDD6E8D15B74E29F75A9B8CF164799C1248EDE0B
1E34244C409F85D0B000343ED6E5808F83123A44C2384B2E0D3B6925B9EE2ADA
4D8F1B11094B4BDA68BD4F1296F3A9C62CC176> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 97 /a put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7BF86DACBBA8E0E6411C526E6911620E9FA09391111706600
8CCB1F490408B936CCBFEA4C54B46FF548F00FAB1DAE4513F1625B75EB93CE43
12F1786C0E60EE57E0607ABCD1BA660CAB66F1D306FC67BCF084937CD5F560EF
624B4793EE3099BDE7676D8B105439797DA27BF6DAAFF176AE84> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 98 /b put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B714A5FFB9038BFE168629E634E7A0FB7627C99B389D4A1D8C
B00B2AEDF7056D2525CA9A5694BD305C6F1FF06A8B7BC590C18E610CD1BFA046
747DE3BF3FDEA46517937C4C6ED6D4185458BFFC33EFDE13F330D77E1F73D5CF
40DAF421666AB70AE36A22> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 99 /c put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B78B91590948402EA99939672628944B8D93A7A717827379A4
2778359ED419CDC4CB0CF8D73C5E7728364C82E07F4CA92C67F569D7CE5A4DC7
7BF7371B47CF04D16F606F430AE1D055086C2B5C623696CF863501C5177D898D
82458361E2BB5371AAB318CBB81AC34F9109D97570D3F5070D6ACAC861573DA5
0A55AC9A84B3F38CC4ACF07524ACDB8CD030EFD46B81FE8F903859C36031E2E8
6635EBDA8B66B92071337DFF49BDD2437F29FB5432C11A3229FF26F90D8067E2
C5599B1F5B74921856F6F1D4DB4BF778A32B24602E00B1602028077ECD95BCF9
F99394FB46040E3BB5D0931EF9250C870D7A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 100 /d put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B712066A3F11A19582022B8A87343979A9EA7473DF4A4B0CB4
463BD70A45CAA1A8330DE3AA39263682FB4424478DEAE889AC6C1C3DF4D90C52
EAAC48D56FB91E23E367C5AA4A02CC5EC7FDC2BF0DB3AAF97EC09E5A2FBA6336
91E6D6E369F3F770C87CE692C907996ADAD90AE229217D21C6DEDACA8D219729
3FE0B5DB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 101 /e put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B842571D3124F4BD93B6BFEACCE802BC2CCAD9E3A91DCC945B
0D3F2D7E7B4F4F5F16624298B7DE26C09BCDB305E02A7DA30D24224EEBA8B50E
BDF7D0D1F9FEC7DEDBF61A49095C44369BDB53280921F71C230D4EA5D3209A30
A42946FBF2FDD2D14D1E062BD9385653FF44440E9E1E2D727A866211D83F59AD
80E158A6731C9CC8D1EE89523F23789241B808877111C2DC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 102 /f put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B747CAE3DEB41DC322A9BCCC24AC9D66EBBA9518FB03E4C3B8
4CA448FCF86BAA42EBA8B6687A52A863DEDA5BD94E69DFE87B5E574127630FC1
01D417EF0D0446C482534DBDCB0143501A7C76407024662298BDA48CB3476961
0AC7F9A28715A6CD136DF0402A318FEE177740F6338AAE793FC2759E0C5517F3
335E0DDD7EB3601D5DC20985375DC7A9019117B894AE06BEBDE242F1B816AFD0
E38D33FA56C4686CC9F903D1434564CC3CE33D9D0C99BCF4D621D2E702613E00
3D8DBE69D854AACCC6938932E91952D7DE5E45C2A51F6AEAB978AE0841097F96
A0FBBF1B732BD80A0FE2DACBEC6AEDC617B40499B4BA865B946DC158B2D2F901
EADC82E8BA190C1C6CBDF80639ED8F566DDAFB06F096FB0D91F2D0F47309149B
658A0CE0CCAD907C8381531AF57CCD9C3128CE7D9255D1B223D5F8EF36FD56DD
981C061EACC731AAA31325BD0868EFFAFA06AF7770EFAA10AD5124765CBF8604
E2A0886B665D219A36310F2E5E404E7442FA77035AFE9C4E8337D5C34F0CD19E
5C4BE48900C9A14917F5B38C2EC99BB2E7AC5DF94CBBD6D2AAD3E0544416B8F6
C4CBDE1C3C29795B467F8C30F36C89BA47D04CFF965BE6951A682BF6C3D515E1
2A06D5D191152F72E06FBBA51AC50CDC2DDEA4CBE6E219255BFE80C5702D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 103 /g put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B85EE3D6723FB0269D33442FB905766510BF3CCE04BDFA2B08
29BF4AD5C795D0E8285E4213AEE114696E3FFB3006A709C0152B6C1F09A2A1EA
A910648FC40804F8F1509B1117FF4752E49393D8D6723789D6C6DDA5FA86B041
77E6D25CF25622A7E071B55733740E85B1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 105 /i put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B7AB671C7217BAFBC0D77106BC67112CDB91E569B63982574C
5E62CA97E49F4DD8622294EBC72CDB848976D1B79F28B0E5B66D7DF5B3120665
8E4A522D77D5A15454299518C644700B9CAB36A840E338571103B59154BBC113
CA2358F5B4270D051E7AD597CCD6BAE09D25685790DEE640763DE930AC7A6E41
515AEC6FB2E3893D7E8A35AF6ECEEA7807C3F89CDCCDC1C7453CD1E71FDA3DBA
4CE9EB4DBB29E6D3E0AD9BF3486BF8512D36C58DF391> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 107 /k put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B86FAE6A7701562D165E9AEEA0A09AB52BF3642785128A6112
A02B02C3490CB56DFBDD20682D29B1218A5528AE032EB201D5E43F3316B059F0
3B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 108 /l put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6A6CAA24FE77FABAC100E91EF7E492129FB82CFDEAC2AF571
1774944FD9AFD64A9557239D8562903589AC15D3513867CEFA8DE7F2AE8616DB
731730872C35EB0AE333DA24AF3EC8A7EE7EAD2AD52CB818487606ACEF29877B
5BCD3789B9D0D0C345567ED40CF450127E87E73EDCE3FCD0B76B5329CE58778C
83DF763DA21277ECD2401F6F74BC4989A8B17F0F0AFE57254EF062EE5EC87BE1
DCFFD93F6F7DAD1295D1179515F31CF5DC666C82A79D007D86BEEF026BA63AFA
4D032DAC5F4ED30E441585976D54C2D76B48FD8000B0345B92D4F61E1F5C5C11
CE020AA72F4652F57ECEB5873304C7B8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 109 /m put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B798158BFAD22E53651C00E4A90425BC98081301A019A5EE0D
A7BD3D180E7A24BE0A4FDB1C08ED9144791E74FC2E473E7C6801062BEBA15493
1FF55F702AD9D9D8FF5193CF2989104A0AB9E48BB734AF0436C91C3FFD7DE47D
53AFAAF3BECF0E8C66D910422DB38F37D1EBB61DD736CECA424B28171327851A
90A51E0B9073012384F566D1B6CA6BA6294191AFCAD8384A8A85A8E68F023E82
16> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 110 /n put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7BDE312783AA3D3D31AB631A85197B8B649DFE0E27476820B
80A06B3B1B5FE7EFF13A460340E8BC0969698E613AB693E66276882FBC766005
9F9F7E1C1398A9FF77338C7801E0587BA39149646FD1E4C2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 111 /o put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B78FDBC0E24B4E71F4E68FD04DF7DBCD6E9E0F2D8317A8CBC5
F4017FC4A5641995852913954F1D21711EED69F166CEC30131BD59E350563BCA
B0B5F73711C21B0D0981C121367D2A8CB434D478B7F150B7DDE9E33FE703C615
157D028F2D49DB992FBE217580D1D03977D6EA30BA51767F1AE9DBEF0D486C23
C6C97BBD7B2B6BB2A9F18BDAC9B2B3FD042D01DF4465D1910E8FEE72FDA285> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 112 /p put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B728C5D6D7FD070F1F9B1210EEDA0FABBF6FF8676FA4C4BF9B
CE1778631245FFE52826B0E18C8531FA5AAE6A5A126C66A16893F3883DC60098
DAACC5490D66C0B0FFD85A623B5D011A430D9C8EC79AE865B8BD91B57AFF0E65
03B70C7A5BDB784CF08D515EA335433D69390041791D9A2DB915271A07020203
551B94CC6BA1F372C12B39575C78BF6F7DDAFB553B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 114 /r put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B72C0F790C06E9EF26137E27FA84111809342473A5EEBFD884
C9F188C1026277D65B5178C07476415B2CC7F2CBD293598D4CB5F29B8FDAA6F7
408C0C761B78A076390424D626DC34FCC0615138D5E144C727278D8D9458DA49
0EFA5797A1A50C20E01922F62C39820505C8AF46B80D7E6867DF79CE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 115 /s put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B83BB8EB4E4E15991681C9ADDF0E9EDF0C47207F127795C7D1
BF177639301FC20B0E2F381C890EA461382A9D6560A6AF62CF4B1B4028552BCB
FBF4B8507422504BD5F9B8BC1DC15A66E0A8DE06D2324DC7509FDA06> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 116 /t put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B7883CB391968B5C5251638906A7E21F35D01BACC60F0393AF
D487816EB12418B876BB96213AABE078FC7280C382FA6D569737962D7D461C3A
7984CB2E1DC16676865CF08FAE294D4F85C687EDCB3BD67530761A8249C061F5
9ACB241825FD3A32372E21786DE2B9A666F7AD657C1A0EB29114DC4BD85488B4
1AFB44C4DCBC4064361DCF1B2B98E15C56C4E84367C8012670E74086A3385B41
5EB52B042D9F9048DE2CF5F711F03109E72D178418837071703EBE97CBCAFAB5
1F07A67A95D247C20A08D2850273DA402C12FC0E4400C80E8FF154CAC283BC06
307C6C80712DC8A5470E4DCE44216464671966CDD4221AA359FAF2B8A91E9EFF
955D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 117 /u put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B620B7918E6F86BD0B2C1F11ADC95F76ABCE66DEC30E68940F
E5E693573E18630DC089ABC6176472093085533E3DB221F4DE98E332F22856F7
F8370E1A29FB4116E92900FCC7BC4A047698DBEDBFEF57F5D46C03609CD3553F
2C936BFEAC0F065F6A72A385661252B594C78E810B4043467F1ACE5CE96AF342
8EA1AE6BB233A658D51BF108D2EF0B4A04465F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 119 /w put
pop
end
%ADOEndSubsetFont
%ADOBeginSubsetFont: MinionPro-Regular AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.24)
systemdict begin
/MinionPro-Regular findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B770DA418ACB94A5D0AA731D38049C6DF560637D02EEEEA8EA
64FAC7680E5208B8068F75F068062132761048ED4691D6CBCD3A76D3F4E6E6E5
A98773689AE5A86BDE87DDBF40A761DF83044BEDD52FD1C87467DAA5F1AA8E4E
086F67CE75769724E521522AA16948495EEC16F5220C15CE8B5B97CF1688525E
6F643E30055E19A94F79B7F387C7CB3916D24FB41D9B4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MinionPro-Regular findfont /Encoding get
dup 121 /y put
pop
end
%ADOEndSubsetFont
%%EndFont
5 0 /MinionPro-Regular FMFONTDEFINE
%%IncludeFont: Courier-Oblique
6 0 /Courier-Oblique FMFONTDEFINE
%%IncludeFont: Courier-Bold
7 0 /Courier-Bold FMFONTDEFINE
%%IncludeFont: Symbol
8 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 1 K
J
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
71.86 70.14 541.43 774 C
0 0 0 1 0 0 0 1 K
71.86 70.14 541.43 774 R
7 X
V
0 12 Q
0 X
(Paradyn Project) 71.86 262 T
(www.paradyn.org) 71.86 248 T
1 F
(Computer Sciences Department) 71.86 218 T
(Uni) 71.86 202 T
(v) 89.56 202 T
(ersity of W) 95.38 202 T
(isconsin) 148.88 202 T
(Madison, WI) 71.86 186 T
(53706-1685) 141.18 186 T
(Computer Sciences Department) 71.86 158 T
(Uni) 71.86 142 T
(v) 89.56 142 T
(ersity of Maryland) 95.38 142 T
(Colle) 71.86 126 T
(ge P) 97.68 126 T
(ark, MD 20742) 118.5 126 T
2 10 Q
(bugs@dyninst.org) 71.86 97.33 T
0 210 210 550 450 232.99 165.6 307.94 87 FMBEGINEPSF
%%BeginDocument: /afs/cs.wisc.edu/p/paradyn/doc/visi/logo-lite.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: hollings
%%DocumentFonts: Helvetica-Oblique
%%Pages: 1
%%BoundingBox: 210 210 550 450
%%EndComments

%
% rectfill is level 2, but the color printer it level 1.
%
/myrectfill {
/height exch def
/width exch def
/y exch def
/x exch def
gsave
newpath
x y moveto
width 0 rlineto
0 height rlineto
width neg 0 rlineto
closepath
fill
grestore
} def

/ParaDynLogo {
gsave
/width 70 def
/height 50 def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
x1 y1 translate
x2 x1 sub width div y2 y1 sub height div scale
/Helvetica-Oblique findfont 34 scalefont setfont
18.3 24 moveto
(P) false charpath
/Helvetica-Oblique findfont 22 scalefont setfont
36 23 moveto
(ara) false charpath
29.2 32 moveto
/Helvetica-Oblique findfont 34 scalefont setfont
-180 rotate
(P) false charpath
-180 rotate
/Helvetica-Oblique findfont 22 scalefont setfont
23 7.6 moveto
(yn) false charpath
/Helvetica-Oblique findfont 3 scalefont setfont
47 18 moveto
(TM) false charpath
clip
%
% shaded box black to grey
%0 2 600 {dup 100 div 0.2 add setgray 0 2 600 myrectfill} for
% red 
% 0 2 600 {dup 100 div 0.4 add 0 0 setrgbcolor  0 2 600 myrectfill} for
% lighter red   --rbi
0 2 600 {dup 60 add 100 div 0.4 add dup 1.9 div dup setrgbcolor 0 2 600 myrectfill} for
grestore
} def

200 200 550 450 ParaDynLogo

showpage

%%EndDocument
FMENDEPSF
72 397 534 461 R
7 X
V
0 24 Q
0 X
2.4 (Paradyn Parallel Performance Tools) 71.86 704 S
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
3 10 Q
0 X
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(12/7/09) 509.44 36 T
J
0 18 Q
(Release 1.1) 73 445 T
(December 2009) 73 423 T
J
0 42 Q
(StackwalkerAPI) 157.46 575 T
(Programmer\325s Guide) 110.8 525 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "1" 2
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
4 18 Q
0 X
(T) 235.83 744 T
(able Of Contents) 246.18 744 T
3 10 Q
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2007) 274.2 36 T
(Release 1.1) 493.9 36 T
5 12 Q
(1) 72 712 T
(Introduction) 90 712 T
(................................................................................................................................) 153.22 712 T
(2) 504 712 T
(2) 72 698 T
(Abstractions) 90 698 T
(................................................................................................................................) 153.22 698 T
(3) 504 698 T
(2.1) 99 684 T
(Stackwalking Interface) 126 684 T
(.................................................................................................) 238.03 684 T
(4) 504 684 T
(2.2) 99 670 T
(Callback Interface) 126 670 T
(.........................................................................................................) 216.14 670 T
(4) 504 670 T
(3) 72 656 T
(API Reference) 90 656 T
(.............................................................................................................................) 161.42 656 T
(5) 504 656 T
(3.1) 99 642 T
(Definitions and Basic Types) 126 642 T
(.......................................................................................) 265.39 642 T
(5) 504 642 T
(3.1.1) 135 628 T
(Definitions) 171 628 T
(....................................................................................................) 229.82 628 T
(5) 504 628 T
(3.1.2) 135 614 T
(Basic Types) 171 614 T
(...................................................................................................) 232.56 614 T
(7) 504 614 T
(3.2) 99 600 T
(Namespace StackwalkerAPI) 126 600 T
(.......................................................................................) 265.39 600 T
(7) 504 600 T
(3.3) 99 586 T
(Stackwalking Interface) 126 586 T
(.................................................................................................) 238.03 586 T
(7) 504 586 T
(3.3.1) 135 572 T
(Class Walker) 171 572 T
(.................................................................................................) 238.03 572 T
(8) 504 572 T
(3.3.2) 135 558 T
(Class Frame) 171 558 T
(...................................................................................................) 232.56 558 T
(11) 504 558 T
(3.4) 99 544 T
(Accessing Local Variables) 126 544 T
(...........................................................................................) 254.45 544 T
(13) 504 544 T
(3.5) 99 530 T
(Callback Interface) 126 530 T
(.........................................................................................................) 216.14 530 T
(15) 504 530 T
(3.5.1) 135 516 T
(Default Implementations) 171 516 T
(............................................................................) 295.49 516 T
(15) 504 516 T
(3.5.2) 135 502 T
(Class FrameStepper) 171 502 T
(.....................................................................................) 270.86 502 T
(16) 504 502 T
(3.5.3) 135 488 T
(Class StepperGroup) 171 488 T
(.....................................................................................) 270.86 488 T
(17) 504 488 T
(3.5.4) 135 474 T
(Class ProcessState) 171 474 T
(........................................................................................) 262.65 474 T
(20) 504 474 T
(3.5.4.1) 171 460 T
(Class LibraryState) 207 460 T
(...........................................................................) 298.22 460 T
(21) 504 460 T
(3.5.5) 135 446 T
(Class SymbolLookup) 171 446 T
(...................................................................................) 276.33 446 T
(22) 504 446 T
(4) 72 432 T
(Callback Interface Default Implementations) 90 432 T
(.........................................................................) 303.7 432 T
(22) 504 432 T
(4.1) 99 418 T
(Debugger Interface) 126 418 T
(.......................................................................................................) 221.62 418 T
(23) 504 418 T
(4.1.1) 135 404 T
(Class ProcDebug) 171 404 T
(..........................................................................................) 257.18 404 T
(24) 504 404 T
(4.2) 99 390 T
(FrameSteppers) 126 390 T
(..............................................................................................................) 202.46 390 T
(26) 504 390 T
(4.2.1) 135 376 T
(Class FrameFuncStepper) 171 376 T
(............................................................................) 295.49 376 T
(27) 504 376 T
(4.2.1.1) 171 362 T
(Class FrameFuncHelper) 207 362 T
(................................................................) 328.32 362 T
(27) 504 362 T
(4.2.2) 135 348 T
(Class DebugStepper) 171 348 T
(.....................................................................................) 270.86 348 T
(28) 504 348 T
(4.2.3) 135 334 T
(Class SigHandlerStepper) 171 334 T
(.............................................................................) 292.75 334 T
(28) 504 334 T
(4.2.4) 135 320 T
(Class BottomOfStackStepper) 171 320 T
(.....................................................................) 314.64 320 T
(28) 504 320 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 3
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 2) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 16 Q
(1) 72 709.33 T
(I) 84 709.33 T
4 12.8 Q
(NTR) 90.22 709.33 T
(ODUCTION) 116.86 709.33 T
1 12 Q
(This) 90 686 T
(document) 115.47 686 T
(describes) 166.94 686 T
(Stackw) 215.73 686 T
(alk) 250.94 686 T
(erAPI,) 265.48 686 T
(an) 301.27 686 T
(API) 316.74 686 T
(and) 340.21 686 T
(library) 361.67 686 T
(for) 397.8 686 T
(w) 415.93 686 T
(alking) 424.48 686 T
(a) 458.61 686 T
(call) 468.08 686 T
(stack.) 489.54 686 T
(The) 521.34 686 T
(call) 72 672 T
(stack) 93.05 672 T
(\050also) 121.44 672 T
(kno) 148.49 672 T
(wn) 166.19 672 T
(as) 184.58 672 T
(the) 198.3 672 T
(run-time) 216.69 672 T
(stack\051) 261.74 672 T
(is) 294.13 672 T
(a) 305.86 672 T
(stack) 314.91 672 T
(found) 343.29 672 T
(in) 375.02 672 T
(a) 388.08 672 T
(process) 397.13 672 T
(that) 436.84 672 T
(contains) 458.57 672 T
(the) 502.29 672 T
(cur-) 520.68 672 T
(rently) 72 658 T
(acti) 103.16 658 T
(v) 120.19 658 T
(e) 126.01 658 T
(stack) 134.49 658 T
(frames.) 162.32 658 T
(Each) 201.13 658 T
(stack) 228.28 658 T
(frame) 256.1 658 T
(is) 287.25 658 T
(a) 298.41 658 T
(record) 306.9 658 T
(of) 340.71 658 T
(an) 353.87 658 T
(e) 368.36 658 T
(x) 373.51 658 T
(ecuting) 379.33 658 T
(function) 417.82 658 T
(\050or) 460.97 658 T
(function-lik) 478.13 658 T
(e) 534.67 658 T
(object) 72 644 T
(such) 104.34 644 T
(as) 129.34 644 T
(a) 142.35 644 T
(signal) 150.68 644 T
(handler) 182.36 644 T
(or) 221.36 644 T
(system) 234.36 644 T
(call\051.) 270.71 644 T
(Stackw) 298.04 644 T
(alk) 333.25 644 T
(erAPI) 347.79 644 T
(pro) 379.46 644 T
(vides) 395.27 644 T
(an) 423.61 644 T
(API) 437.95 644 T
(that) 460.29 644 T
(allo) 481.3 644 T
(ws) 499 644 T
(users) 515.34 644 T
(to) 72 630 T
(collect) 85.53 630 T
(a) 121.71 630 T
(call) 131.23 630 T
(stack) 152.74 630 T
(\050kno) 181.6 630 T
(wn) 203.29 630 T
(as) 222.15 630 T
3 F
(walking) 236.33 630 T
1 F
(the) 278.53 630 T
(call) 297.38 630 T
(stack\051) 318.9 630 T
(and) 351.74 630 T
(access) 373.26 630 T
(information) 408.1 630 T
(about) 468.95 630 T
(its) 499.81 630 T
(stack) 515.34 630 T
(frames.) 72 616 T
(The) 112.67 616 T
(current) 136.35 616 T
(implementation) 175.35 616 T
(supports) 255.71 616 T
(Linux/x86,) 301.39 616 T
(Linux/AMD-64,) 359.42 616 T
(Linux/Po) 443.43 616 T
(wer) 487.81 616 T
(,) 505.32 616 T
(Blue-) 513.34 616 T
(Gene/L, and BlueGene/P) 72 602 T
(.) 190.98 602 T
(Stackw) 90 586 T
(alk) 125.21 586 T
(erAPI) 139.75 586 T
(is) 172.2 586 T
(designed) 184 586 T
(to) 230.45 586 T
(be) 243.58 586 T
(both) 258.7 586 T
(easy-to-use) 283.83 586 T
(and) 342.27 586 T
(easy-to-e) 363.39 586 T
(xtend.) 407.19 586 T
(Users) 440.65 586 T
(can) 471.77 586 T
(easily) 492.21 586 T
(use) 524 586 T
(Stackw) 72 572 T
(alk) 107.21 572 T
(erAPI) 121.75 572 T
(to) 153.29 572 T
(w) 165.5 572 T
(alk) 174.05 572 T
(a) 191.59 572 T
(call) 199.8 572 T
(stack) 220 572 T
(without) 247.54 572 T
(needing) 287.09 572 T
(to) 327.97 572 T
(understand) 340.18 572 T
(ho) 395.72 572 T
(w) 407.42 572 T
(call) 418.96 572 T
(stacks) 439.17 572 T
(are) 471.37 572 T
(laid) 488.9 572 T
(out) 509.78 572 T
(on) 528 572 T
(their) 72 558 T
(platform.) 97.28 558 T
(Users) 144.88 558 T
(can) 175.49 558 T
(easily) 195.43 558 T
(e) 226.7 558 T
(xtend) 231.85 558 T
(Stackw) 261.79 558 T
(alk) 297 558 T
(erAPI) 311.55 558 T
(to) 343.48 558 T
(w) 356.1 558 T
(ork) 364.64 558 T
(with) 383.92 558 T
(ne) 408.54 558 T
(w) 419.56 558 T
(platforms) 431.51 558 T
(and) 480.78 558 T
(types) 501.39 558 T
(of) 530 558 T
(stack frames by implementing a set of callbacks that can be plugged into Stackw) 72 544 T
(alk) 458.82 544 T
(erAPI.) 473.36 544 T
(Stackw) 90 528 T
(alk) 125.21 528 T
(erAPI\325) 139.75 528 T
(s) 171.74 528 T
(ease-of-use) 180.08 528 T
(comes) 238.38 528 T
(from) 272.7 528 T
(it) 299.69 528 T
(pro) 310.03 528 T
(viding) 325.84 528 T
(a) 360.18 528 T
(platform) 369.17 528 T
(independent) 414.16 528 T
(interf) 476.48 528 T
(ace) 502.35 528 T
(that) 522 528 T
(allo) 72 514 T
(ws) 89.7 514 T
(users) 106.52 514 T
(to) 134.67 514 T
(access) 147.49 514 T
(detailed) 181.62 514 T
(information) 223.1 514 T
(about) 283.25 514 T
(the) 313.4 514 T
(call) 331.55 514 T
(stack.) 352.37 514 T
(F) 383.52 514 T
(or) 390.01 514 T
(e) 403.49 514 T
(xample,) 408.64 514 T
(the) 450.45 514 T
(follo) 468.61 514 T
(wing) 490.97 514 T
(C++) 518.46 514 T
(code-snippet is all that is needed to w) 72 500 T
(alk and print the call stack of the currently running thread.) 252.19 500 T
2 10 Q
(std::vector<Frame> stackwalk;) 108 482.33 T
(string s;) 108 470.33 T
(Walker *walker = Walker::newWalker\050\051;) 108 446.33 T
(walker->walkStack\050stackwalk\051;) 108 434.33 T
(for \050unsigned i=0; i<stackwalk.size\050\051; i++\051 {) 108 422.33 T
(stackwalk[i].getName\050s\051;) 144 410.33 T
(cout << \322Found function \322 << s << endl;) 144 398.33 T
(}) 108 386.33 T
1 12 Q
(Stackw) 90 368 T
(alk) 125.21 368 T
(erAPI) 139.75 368 T
(can) 171.32 368 T
(w) 190.88 368 T
(alk) 199.43 368 T
(a) 217 368 T
(call) 225.24 368 T
(stack) 245.47 368 T
(in) 273.04 368 T
(the) 285.29 368 T
(same) 302.86 368 T
(address) 330.43 368 T
(space) 369.33 368 T
(as) 398.89 368 T
(where) 411.79 368 T
(the) 444.02 368 T
(Stackw) 461.59 368 T
(alk) 496.8 368 T
(erAPI) 511.34 368 T
(library) 72 354 T
(li) 108.59 354 T
(v) 114.97 354 T
(es) 120.79 354 T
(\050kno) 135.38 354 T
(wn) 157.08 354 T
(as) 176.35 354 T
(a) 190.94 354 T
3 F
(\336r) 200.87 354 T
(st) 211.42 354 T
(party) 224.03 354 T
1 F
(stackw) 253.96 354 T
(alk\051,) 287.16 354 T
(or) 313.42 354 T
(it) 328.02 354 T
(can) 339.3 354 T
(w) 360.55 354 T
(alk) 369.1 354 T
(a) 388.36 354 T
(call) 398.29 354 T
(stack) 420.22 354 T
(in) 449.48 354 T
(another) 463.42 354 T
(process) 504.01 354 T
(\050kno) 72 340 T
(wn) 93.7 340 T
(as) 111.74 340 T
(a) 125.12 340 T
3 F
(thir) 133.83 340 T
(d) 150.73 340 T
(party) 160.11 340 T
1 F
(stackw) 188.83 340 T
(alk\051.) 222.03 340 T
(T) 247.07 340 T
(o) 253.45 340 T
(change) 262.83 340 T
(the) 300.2 340 T
(abo) 318.24 340 T
(v) 335.39 340 T
(e) 341.21 340 T
(e) 349.92 340 T
(xample) 355.07 340 T
(to) 393.78 340 T
(perform) 406.5 340 T
(a) 448.54 340 T
(third) 457.25 340 T
(party) 483.3 340 T
(stack-) 511.34 340 T
(w) 72 326 T
(alk, we w) 80.54 326 T
(ould only need to pass a process identi\336er to) 126.74 326 T
2 10 Q
(newWalker) 343.06 326 T
1 12 Q
(, e.g:) 396.58 326 T
2 10 Q
(Walker *walker = Walker::newWalker\050pid\051;) 108 308.33 T
1 12 Q
(Our) 90 290 T
(other) 112.68 290 T
(design) 141.36 290 T
(goal) 176.72 290 T
(with) 201.4 290 T
(Stackw) 226.76 290 T
(alk) 261.97 290 T
(erAPI) 276.51 290 T
(is) 309.19 290 T
(to) 321.22 290 T
(mak) 334.58 290 T
(e) 355.12 290 T
(it) 364.47 290 T
(easy-to-e) 375.16 290 T
(xtend.) 418.96 290 T
(The) 452.65 290 T
(mechanics) 475.33 290 T
(of) 530 290 T
(ho) 72 276 T
(w) 83.7 276 T
(to) 95.18 276 T
(w) 107.34 276 T
(alk) 115.88 276 T
(through) 133.36 276 T
(a) 173.51 276 T
(stack) 181.66 276 T
(frame) 209.14 276 T
(can) 239.94 276 T
(v) 259.42 276 T
(ary) 265.11 276 T
(between) 283.26 276 T
(dif) 326.06 276 T
(ferent) 339.09 276 T
(platforms,) 369.89 276 T
(and) 421.71 276 T
(e) 441.86 276 T
(v) 446.88 276 T
(en) 452.7 276 T
(between) 466.85 276 T
(dif) 509.65 276 T
(fer-) 522.68 276 T
(ent) 72 262 T
(types) 89.45 262 T
(of) 117.57 262 T
(stack) 130.35 262 T
(frames) 157.79 262 T
(on) 193.23 262 T
(the) 208.02 262 T
(same) 225.47 262 T
(platform.) 252.91 262 T
(In) 300.03 262 T
(addition,) 312.81 262 T
(dif) 357.93 262 T
(ferent) 370.96 262 T
(platforms) 401.73 262 T
(may) 450.51 262 T
(ha) 473.96 262 T
(v) 485.05 262 T
(e) 490.87 262 T
(dif) 498.98 262 T
(ferent) 512.02 262 T
(mechanisms) 72 248 T
(for) 134.26 248 T
(reading) 151.18 248 T
(the) 190.1 248 T
(data) 207.69 248 T
(in) 230.61 248 T
(a) 242.88 248 T
(call) 251.13 248 T
(stack) 271.39 248 T
(or) 298.98 248 T
(looking) 311.9 248 T
(up) 351.51 248 T
(symbolic) 366.44 248 T
(names) 413.37 248 T
(that) 446.96 248 T
(go) 467.89 248 T
(with) 482.82 248 T
(a) 507.08 248 T
(stack) 515.34 248 T
(frame.) 72 234 T
(Stackw) 107.44 234 T
(alk) 142.64 234 T
(erAPI) 157.19 234 T
(pro) 190.3 234 T
(vides) 206.11 234 T
(a) 235.9 234 T
(callback) 245.68 234 T
(interf) 290.11 234 T
(ace) 315.98 234 T
(for) 336.42 234 T
(plugging) 354.86 234 T
(in) 401.99 234 T
(mechanisms) 415.78 234 T
(for) 479.56 234 T
(handling) 498 234 T
(ne) 72 220 T
(w) 83.03 220 T
(systems) 95.37 220 T
(and) 137.04 220 T
(types) 158.05 220 T
(of) 187.05 220 T
(stack) 200.72 220 T
(frames.) 229.06 220 T
(The) 268.39 220 T
(callback) 290.72 220 T
(interf) 334.38 220 T
(ace) 360.25 220 T
(can) 379.91 220 T
(be) 400.24 220 T
(used) 415.24 220 T
(to) 440.91 220 T
(port) 453.92 220 T
(Stackw) 476.93 220 T
(alk) 512.14 220 T
(er-) 526.68 220 T
(API) 72 206 T
(to) 95.1 206 T
(ne) 108.2 206 T
(w) 119.23 206 T
(platforms,) 131.66 206 T
(e) 184.42 206 T
(xtend) 189.57 206 T
(Stackw) 219.99 206 T
(alk) 255.2 206 T
(erAPI) 269.75 206 T
(support) 302.17 206 T
(on) 341.93 206 T
(e) 357.7 206 T
(xisting) 362.85 206 T
(systems,) 399.29 206 T
(or) 444.06 206 T
(more) 457.82 206 T
(easily) 486.24 206 T
(inte-) 518 206 T
(grate) 72 192 T
(Stackw) 99.81 192 T
(alk) 135.02 192 T
(erAPI) 149.56 192 T
(into) 182.04 192 T
(e) 204.54 192 T
(xisting) 209.68 192 T
(tools.) 246.18 192 T
(There) 276.35 192 T
(are) 308.15 192 T
(callbacks) 326.63 192 T
(for) 375.1 192 T
(the) 392.92 192 T
(follo) 411.4 192 T
(wing) 433.77 192 T
(Stackw) 461.59 192 T
(alk) 496.8 192 T
(erAPI) 511.34 192 T
(operations:) 72 178 T
(\245) 72 159 T
3 F
(W) 90 159 T
(alk) 98.89 159 T
(thr) 116.76 159 T
(ough) 130.22 159 T
(a) 157.42 159 T
(stac) 166.62 159 T
(k) 185.71 159 T
(fr) 194.24 159 T
(ame) 202.07 159 T
1 F
(-) 225.26 159 T
(Stackw) 232.46 159 T
(alk) 267.67 159 T
(erAPI) 282.21 159 T
(will) 314.07 159 T
(\336nd) 335.94 159 T
(dif) 357.81 159 T
(ferent) 370.84 159 T
(types) 402.03 159 T
(of) 430.56 159 T
(stack) 443.76 159 T
(frames) 471.62 159 T
(on) 507.47 159 T
(dif-) 522.67 159 T
(ferent) 90 145 T
(platforms) 122.67 145 T
(and) 173.35 145 T
(e) 195.36 145 T
(v) 200.39 145 T
(en) 206.21 145 T
(within) 222.22 145 T
(the) 257.58 145 T
(same) 276.93 145 T
(platform.) 306.27 145 T
(F) 355.29 145 T
(or) 361.78 145 T
(e) 376.46 145 T
(xample,) 381.61 145 T
(on) 424.62 145 T
(Linux/x86) 441.3 145 T
(the) 495.99 145 T
(stack) 515.34 145 T
(frame) 90 131 T
(generated) 121.03 131 T
(by) 170.73 131 T
(a) 185.78 131 T
(typical) 194.16 131 T
(function) 229.87 131 T
(looks) 272.92 131 T
(dif) 301.97 131 T
(ferent) 315.01 131 T
(from) 346.04 131 T
(the) 372.42 131 T
(stack) 390.13 131 T
(frame) 417.84 131 T
(generated) 448.88 131 T
(by) 498.57 131 T
(a) 513.62 131 T
(sig-) 522 131 T
(nal) 90 117 T
(handler) 107.69 117 T
(.) 143.01 117 T
(The) 149.04 117 T
(callback) 170.72 117 T
(interf) 213.73 117 T
(ace) 239.6 117 T
(can) 258.61 117 T
(be) 278.29 117 T
(used) 292.64 117 T
(to) 317.66 117 T
(re) 330.02 117 T
(gister) 339.16 117 T
(a) 368.85 117 T
(handler) 377.2 117 T
(with) 416.21 117 T
(Stackw) 440.57 117 T
(alk) 475.78 117 T
(erAPI) 490.32 117 T
(that) 522 117 T
(kno) 90 103 T
(ws) 107.7 103 T
(ho) 124.01 103 T
(w) 135.71 103 T
(to) 147.35 103 T
(w) 159.66 103 T
(alk) 168.21 103 T
(through) 185.85 103 T
(a) 226.16 103 T
(ne) 234.46 103 T
(w) 245.49 103 T
(type) 257.13 103 T
(of) 280.77 103 T
(stack) 293.74 103 T
(frame.) 321.38 103 T
(F) 355.34 103 T
(or) 361.83 103 T
(e) 374.8 103 T
(xample,) 379.95 103 T
(the) 421.26 103 T
(DyninstAPI) 438.9 103 T
(tool) 499.21 103 T
(re) 520.86 103 T
(g-) 530 103 T
(isters) 90 89 T
(an) 118.05 89 T
(object) 132.1 89 T
(with) 164.15 89 T
(Stackw) 188.2 89 T
(alk) 223.41 89 T
(erAPI) 237.96 89 T
(that) 269.33 89 T
(describes) 290.05 89 T
(ho) 337.42 89 T
(w) 349.12 89 T
(to) 360.51 89 T
(w) 372.56 89 T
(alk) 381.11 89 T
(through) 398.49 89 T
(the) 438.54 89 T
(stack) 455.92 89 T
(frames) 483.3 89 T
(gen-) 518.68 89 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 4
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 3) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(erated by its instrumentation.) 90 712 T
(\245) 72 693 T
3 F
(Access) 90 693 T
(pr) 125.49 693 T
(ocess) 135.62 693 T
(data) 164.46 693 T
1 F
(-) 188.63 693 T
(T) 195.47 693 T
(o) 201.84 693 T
(w) 210.68 693 T
(alk) 219.23 693 T
(a) 236.74 693 T
(call) 244.9 693 T
(stack,) 265.08 693 T
(Stackw) 295.58 693 T
(alk) 330.79 693 T
(erAPI) 345.33 693 T
(needs) 376.83 693 T
(to) 406.99 693 T
(be) 419.17 693 T
(able) 433.34 693 T
(to) 456.17 693 T
(read) 468.35 693 T
(a) 491.85 693 T
(process\325) 500.02 693 T
(memory) 90 679 T
(and) 134.31 679 T
(re) 155.95 679 T
(gisters.) 165.09 679 T
(When) 203.73 679 T
(doing) 236.7 679 T
(a) 268.35 679 T
(\336rst) 277.99 679 T
(party) 300.97 679 T
(stackw) 329.94 679 T
(alk,) 363.15 679 T
(this) 385.12 679 T
(is) 406.77 679 T
(done) 419.09 679 T
(by) 446.73 679 T
(directly) 463.04 679 T
(reading) 504.01 679 T
(them) 90 665 T
(from) 116.72 665 T
(the) 142.77 665 T
(current) 160.16 665 T
(address) 196.86 665 T
(space.) 235.57 665 T
(When) 267.95 665 T
(doing) 299.32 665 T
(a) 329.38 665 T
(third) 337.43 665 T
(party) 362.82 665 T
(stackw) 390.2 665 T
(alk,) 423.41 665 T
(this) 443.79 665 T
(is) 463.86 665 T
(done) 474.58 665 T
(by) 500.63 665 T
(read-) 515.35 665 T
(ing) 90 651 T
(them) 108.05 651 T
(using) 134.77 651 T
(a) 163.49 651 T
(deb) 171.54 651 T
(ugger) 188.62 651 T
(interf) 218.66 651 T
(ace.) 244.54 651 T
(The) 266.24 651 T
(callback) 287.61 651 T
(interf) 330.31 651 T
(ace) 356.19 651 T
(can) 374.89 651 T
(be) 394.26 651 T
(used) 408.3 651 T
(to) 433.02 651 T
(re) 445.07 651 T
(gister) 454.21 651 T
(ne) 483.6 651 T
(w) 494.62 651 T
(objects) 506 651 T
(for) 90 637 T
(accessing) 107.85 637 T
(process) 157.69 637 T
(data.) 197.53 637 T
(This) 224.38 637 T
(can) 249.57 637 T
(be) 270.08 637 T
(used,) 285.26 637 T
(for) 314.11 637 T
(e) 331.96 637 T
(xample,) 337.11 637 T
(to) 379.29 637 T
(port) 392.48 637 T
(Stackw) 415.67 637 T
(alk) 450.88 637 T
(erAPI) 465.42 637 T
(to) 497.93 637 T
(a) 511.12 637 T
(ne) 520.31 637 T
(w) 531.34 637 T
(operating system or mak) 90 623 T
(e it w) 208.2 623 T
(ork with a ne) 234.74 623 T
(w deb) 297.43 623 T
(ugger interf) 326.18 623 T
(ace.) 382.38 623 T
(\245) 72 604 T
3 F
(Look) 90 604 T
(up) 117.6 604 T
(symbolic) 133.2 604 T
(names) 179.46 604 T
1 F
(-) 213.72 604 T
(When) 221.31 604 T
(Stackw) 253.57 604 T
(alk) 288.77 604 T
(erAPI) 303.32 604 T
(\336nds) 335.57 604 T
(a) 362.51 604 T
(stack) 371.44 604 T
(frame,) 399.7 604 T
(it) 434.28 604 T
(gets) 444.55 604 T
(an) 467.48 604 T
(address) 482.41 604 T
(that) 522 604 T
(points) 90 590 T
(into) 123.95 590 T
(the) 147.22 590 T
(piece) 166.49 590 T
(of) 196.42 590 T
(code) 211.02 590 T
(that) 238.28 590 T
(created) 260.89 590 T
(that) 300.14 590 T
(stack) 322.74 590 T
(frame.) 352.01 590 T
(This) 387.6 590 T
(address) 413.54 590 T
(is) 454.13 590 T
(not) 466.74 590 T
(necessarily) 486.68 590 T
(meaningful) 90 576 T
(to) 148.85 576 T
(a) 162.37 576 T
(user) 171.89 576 T
(,) 191.4 576 T
(so) 198.59 576 T
(Stackw) 213.44 576 T
(alk) 248.65 576 T
(erAPI) 263.2 576 T
(attempts) 296.04 576 T
(to) 340.9 576 T
(associate) 354.42 576 T
(the) 401.93 576 T
(address) 420.78 576 T
(with) 460.96 576 T
(a) 486.48 576 T
(symbolic) 495.99 576 T
(name.) 90 562 T
(The) 122.4 562 T
(callback) 144.46 562 T
(interf) 187.85 562 T
(ace) 213.72 562 T
(can) 233.11 562 T
(be) 253.17 562 T
(used) 267.9 562 T
(to) 293.3 562 T
(re) 306.04 562 T
(gister) 315.19 562 T
(an) 345.26 562 T
(object) 359.99 562 T
(with) 392.72 562 T
(Stackw) 417.46 562 T
(alk) 452.67 562 T
(erAPI) 467.21 562 T
(that) 499.27 562 T
(per-) 520.68 562 T
(forms) 90 548 T
(an) 121.74 548 T
(address) 136.81 548 T
(to) 176.55 548 T
(name) 189.63 548 T
(mapping,) 219.37 548 T
(allo) 268.11 548 T
(wing) 285.81 548 T
(Stackw) 313.55 548 T
(alk) 348.76 548 T
(erAPI) 363.31 548 T
(to) 395.71 548 T
(associate) 408.79 548 T
(names) 455.85 548 T
(with) 490.26 548 T
(stack) 515.34 548 T
(frames.) 90 534 T
4 16 Q
(2) 72 501.33 T
(A) 84 501.33 T
4 12.8 Q
(BSTRA) 95.55 501.33 T
(CTIONS) 137.52 501.33 T
1 12 Q
(Stackw) 90 478 T
(alk) 125.21 478 T
(erAPI) 139.75 478 T
(contains) 172.42 478 T
(tw) 216.44 478 T
(o) 228.32 478 T
(interf) 238.33 478 T
(aces:) 264.2 478 T
(the) 292.21 478 T
(Stackw) 310.89 478 T
(alking) 346.1 478 T
(Interf) 380.11 478 T
(ace) 406.65 478 T
(and) 426.65 478 T
(the) 447.99 478 T
(Call) 466.67 478 T
(back) 486.67 478 T
(Inter-) 513.35 478 T
(f) 72 464 T
(ace.) 75.88 464 T
(The) 99.43 464 T
(stackw) 122.65 464 T
(alking) 155.85 464 T
(interf) 190.42 464 T
(ace) 216.29 464 T
(is) 236.84 464 T
(used) 249.41 464 T
(to) 275.97 464 T
(w) 289.87 464 T
(alk) 298.42 464 T
(the) 317.64 464 T
(call) 336.87 464 T
(stack,) 358.77 464 T
(query) 390.99 464 T
(information) 422.88 464 T
(about) 484.11 464 T
(stack) 515.34 464 T
(frames,) 72 450 T
(and) 112.09 450 T
(collect) 133.86 450 T
(basic) 170.29 450 T
(information) 199.4 450 T
(about) 260.5 450 T
(threads.) 291.61 450 T
(The) 333.7 450 T
(Callback) 356.8 450 T
(Interf) 403.9 450 T
(ace) 430.44 450 T
(is) 450.86 450 T
(used) 463.31 450 T
(to) 489.74 450 T
(pro) 503.52 450 T
(vide) 519.34 450 T
(custom) 72 436 T
(mechanisms) 109.63 436 T
(for) 171.92 436 T
(w) 188.87 436 T
(alking) 197.41 436 T
(a) 230.37 436 T
(call) 238.66 436 T
(stack.) 258.95 436 T
(Users) 289.57 436 T
(who) 319.86 436 T
(operate) 343.48 436 T
(in) 381.76 436 T
(one) 394.05 436 T
(of) 414.34 436 T
(Stackw) 427.3 436 T
(alk) 462.51 436 T
(erAPI\325) 477.05 436 T
(s) 509.04 436 T
(stan-) 516.67 436 T
(dard con\336gurations do not need to use the Callback Interf) 72 422 T
(ace.) 348.17 422 T
(Figure) 90 406 T
(1) 124.33 406 T
(sho) 134.06 406 T
(ws) 150.43 406 T
(the) 167.49 406 T
(o) 185.88 406 T
(wnership) 191.58 406 T
(hierarch) 239.29 406 T
(y) 278.55 406 T
(for) 288.27 406 T
(Stackw) 305.99 406 T
(alk) 341.2 406 T
(erAPI\325) 355.74 406 T
(s) 387.73 406 T
(classes.) 396.13 406 T
(Ownership) 436.18 406 T
(is) 492.56 406 T
(a) 504.29 406 T
(\322con-) 513.35 406 T
(tains\323) 72 392 T
(relationship;) 102.86 392 T
(if) 165.73 392 T
(one) 175.93 392 T
(class) 196.12 392 T
(o) 222.32 392 T
(wns) 228.02 392 T
(another) 250.22 392 T
(,) 285.73 392 T
(then) 291.59 392 T
(instances) 315.12 392 T
(of) 361.98 392 T
(the) 374.85 392 T
(o) 392.38 392 T
(wner) 398.08 392 T
(class) 424.93 392 T
(maintain) 451.13 392 T
(an) 496 392 T
(e) 510.19 392 T
(xclu-) 515.34 392 T
(si) 72 378 T
(v) 79.7 378 T
(e) 85.52 378 T
(instance) 93.84 378 T
(of) 136.14 378 T
(the) 149.12 378 T
(other) 166.77 378 T
(.) 190.77 378 T
(F) 196.76 378 T
(or) 203.25 378 T
(e) 216.23 378 T
(xample,) 221.38 378 T
(in) 262.69 378 T
(Figure) 275.01 378 T
(1) 309.34 378 T
(the) 318.32 378 T
(each) 335.97 378 T
2 10 Q
(Walker) 360.94 378 T
1 12 Q
(instance) 399.92 378 T
(contains) 442.23 378 T
(e) 485.21 378 T
(xactly) 490.36 378 T
(one) 522.67 378 T
(instance) 72 364 T
(of) 116.5 364 T
(a) 131.66 364 T
2 10 Q
(ProcessState) 142.16 364 T
1 12 Q
(object.) 219.33 364 T
(No) 256.83 364 T
(other) 276.67 364 T
(instance) 306.5 364 T
(of) 350.99 364 T
2 10 Q
(Walker) 366.16 364 T
1 12 Q
(uses) 407.33 364 T
(that) 433.17 364 T
(instance) 456.34 364 T
(of) 500.83 364 T
2 10 Q
(Pro-) 516 364 T
(cessState) 72 350 T
1 12 Q
(.) 126 350 T
(This) 90 334 T
(remainder) 114.29 334 T
(of) 165.9 334 T
(this) 178.85 334 T
(section) 199.14 334 T
(brie\337y) 236.09 334 T
(describes) 270.38 334 T
(the) 317.99 334 T
(six) 335.61 334 T
(classes) 352.57 334 T
(that) 388.85 334 T
(mak) 409.8 334 T
(e) 430.35 334 T
(up) 438.63 334 T
(Stackw) 453.59 334 T
(alk) 488.8 334 T
(erAPI\325) 503.34 334 T
(s) 535.33 334 T
(tw) 72 320 T
(o interf) 83.88 320 T
(aces. F) 118.75 320 T
(or more details, see the class descriptions in Section) 151.9 320 T
(3.) 404.53 320 T
4 F
(Figur) 233.95 77 T
(e) 262.4 77 T
(1: Object Ownership) 270.73 77 T
72 91 540 309 C
0 0 0 1 0 0 0 1 K
244.8 280.2 331.2 303.6 11.7 RR
0.5 H
0 Z
0 X
N
4 12 Q
(W) 266.4 288.29 T
(alk) 277.62 288.29 T
(er) 293.51 288.29 T
289.8 220.8 376.2 244.2 11.7 RR
N
(StepperGr) 297.01 228.89 T
(oup) 351.45 228.89 T
198 220.8 284.4 244.2 11.7 RR
N
(Pr) 210.97 228.89 T
(ocessState) 223.41 228.89 T
(Frame) 405.91 229.44 T
379.8 220.8 466.2 244.2 11.7 RR
N
(SymbolLookup) 112.12 228.89 T
289.8 161.4 376.2 184.8 11.7 RR
N
(FrameStepper) 294.9 169.49 T
162.08 248.02 152.05 244.5 2 L
N
162.83 245.13 152.05 244.5 160.86 250.74 3 L
N
253.8 280.2 162.08 248.02 2 L
V
2 Z
N
246.6 253.21 239.97 244.91 2 L
0 Z
N
248.77 251.15 239.97 244.91 244.12 254.87 3 L
N
268.2 280.2 246.6 253.21 2 L
2 Z
N
323.73 252.99 330.61 244.89 2 L
0 Z
N
326.16 254.72 330.61 244.89 321.62 250.87 3 L
N
300.6 280.2 323.73 252.99 2 L
2 Z
N
415.67 247.9 425.74 244.49 2 L
0 Z
N
416.87 250.64 425.74 244.49 414.96 245 3 L
N
320.4 280.2 415.67 247.9 2 L
2 Z
N
329.4 196.34 329.4 185.71 2 L
0 Z
N
332.38 196.09 329.4 185.71 326.42 196.09 3 L
N
329.4 220.8 329.4 196.34 2 L
2 Z
N
1 F
(1:1) 0 24 186.51 259.05 TF
(1:1) 0 50 247.35 256.67 TF
(1:1) 0 310 316.86 266.62 TF
(1:N) 0 338 364.58 269 TF
(1:N) 0 270 332 215.4 TF
167.57 131.3 215.7 140.3 4.5 RR
0 Z
N
4 8.17 10.37 QQ
(A) 188.7 132.97 T
(A is a class) 269.28 134.22 T
204.15 117.9 208.84 117.9 2 L
N
204.4 120.47 208.84 117.9 204.4 115.33 3 L
N
185.94 117.9 204.15 117.9 2 L
2 Z
N
(1:1) 188.57 119.47 T
(Each instance of class A o) 269.01 121.24 T
(wns one instance) 382.73 121.24 T
(of class B) 269.01 113.07 T
(1:N) 187.23 102.33 T
4 7.71 10.37 QQ
(Each instance of class A o) 268.84 102.03 T
(wns multiple) 382.56 102.03 T
4 8.17 10.37 QQ
(instances of class B) 270.16 94.68 T
137.59 113.3 185.73 122.3 4.5 RR
0 Z
N
(A) 158.73 114.97 T
209.59 113.3 257.73 122.3 4.5 RR
N
(B) 230.73 114.97 T
204.18 101.15 208.88 101.15 2 L
N
204.43 103.72 208.88 101.15 204.43 98.58 3 L
N
185.98 101.15 204.18 101.15 2 L
2 Z
N
137.63 96.55 185.76 105.55 4.5 RR
0 Z
N
(A) 158.76 98.22 T
209.63 96.55 257.76 105.55 4.5 RR
N
(B) 230.76 98.22 T
4 11.72 10.66 QQ
(LEGEND) 0 90 120.67 94.8 TF
137.48 141.6 128.48 141.6 2 L
1 H
2 Z
N
128.48 141.6 128.48 93 2 L
N
137.48 93 128.48 93 2 L
N
452.47 141.6 461.47 141.6 2 L
N
461.47 141.6 461.47 93 2 L
N
452.47 93 461.47 93 2 L
N
107.67 220.58 194.07 243.98 11.7 RR
0.5 H
0 Z
N
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 5
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 4) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 14 Q
(2.1 Stackwalking Interface) 72 710.67 T
1 12 Q
(\245) 72 690 T
6 10 Q
(Walker) 90 690 T
1 12 Q
(-) 129.41 690 T
(The) 136.82 690 T
2 10 Q
(Walker) 158.89 690 T
1 12 Q
(class) 198.3 690 T
(is) 225.04 690 T
(the) 236.46 690 T
(top-le) 254.54 690 T
(v) 282.23 690 T
(el) 288.05 690 T
(class) 300.13 690 T
(used) 326.87 690 T
(for) 352.28 690 T
(collecting) 369.68 690 T
(stackw) 420.42 690 T
(alks.) 453.62 690 T
(It) 479.37 690 T
(pro) 490.11 690 T
(vides) 505.93 690 T
(a) 534.67 690 T
(simple) 90 676 T
(interf) 125.9 676 T
(ace) 151.77 676 T
(for) 171.65 676 T
(requesting) 189.54 676 T
(a) 243.43 676 T
(stackw) 252.66 676 T
(alk.) 285.86 676 T
(Each) 307.42 676 T
2 10 Q
(Walker) 335.31 676 T
1 12 Q
(object) 375.2 676 T
(is) 408.43 676 T
(associated) 420.33 676 T
(with) 473.55 676 T
(one) 498.78 676 T
(pro-) 520.01 676 T
(cess, b) 90 662 T
(ut may w) 121.75 662 T
(alk the call stacks of multiple threads within that process.) 166.3 662 T
(\245) 72 643 T
6 10 Q
(Frame) 90 643 T
1 12 Q
(-) 123.29 643 T
(A) 130.58 643 T
(call) 142.54 643 T
(stack) 163.16 643 T
(is) 191.11 643 T
(returned) 202.4 643 T
(as) 245.68 643 T
(a) 258.97 643 T
(v) 267.59 643 T
(ector) 273.41 643 T
(of) 300.69 643 T
2 10 Q
(Frame) 313.98 643 T
1 12 Q
(objects,) 347.27 643 T
(where) 387.56 643 T
(each) 420.17 643 T
2 10 Q
(Frame) 445.44 643 T
1 12 Q
(object) 478.73 643 T
(repre-) 511.36 643 T
(sents) 90 629 T
(a) 117.95 629 T
(stack) 127.22 629 T
(frame.) 155.83 629 T
(It) 190.76 629 T
(can) 202.04 629 T
(pro) 222.65 629 T
(vide) 238.46 629 T
(information) 263.08 629 T
(about) 323.69 629 T
(the) 354.3 629 T
(stack) 372.91 629 T
(frame) 401.52 629 T
(and) 433.45 629 T
(basic) 454.73 629 T
(information) 483.34 629 T
(about) 90 615 T
(the) 119.77 615 T
(function,) 137.53 615 T
(signal) 183.63 615 T
(handler) 215.4 615 T
(or) 254.49 615 T
(other) 267.59 615 T
(mechanism) 295.35 615 T
(that) 353.11 615 T
(created) 374.21 615 T
(it.) 411.96 615 T
(Users) 424.73 615 T
(can) 455.16 615 T
(request) 474.92 615 T
(infor-) 512.67 615 T
(mation) 90 601 T
(such) 127.1 601 T
(as) 152.86 601 T
(the) 166.62 601 T
(symbolic) 185.04 601 T
(name) 232.81 601 T
(associated) 262.56 601 T
(with) 315.64 601 T
(the) 340.74 601 T
2 10 Q
(Frame) 359.17 601 T
1 12 Q
(object,) 392.93 601 T
(and) 429.02 601 T
(v) 450.11 601 T
(alues) 455.81 601 T
(of) 484.23 601 T
(its) 497.99 601 T
(sa) 513.1 601 T
(v) 522.85 601 T
(ed) 528.67 601 T
(re) 90 587 T
(gisters.) 99.14 587 T
4 14 Q
(2.2 Callback Interface) 72 557.67 T
1 12 Q
(Stackw) 90 537 T
(alk) 125.21 537 T
(erAPI) 139.75 537 T
(includes) 171.12 537 T
(def) 213.83 537 T
(ault) 229.04 537 T
(implementations) 249.75 537 T
(of) 332.47 537 T
(the) 345.18 537 T
(Callback) 362.56 537 T
(Interf) 407.93 537 T
(ace) 434.46 537 T
(on) 453.16 537 T
(each) 467.87 537 T
(of) 492.57 537 T
(its) 505.28 537 T
(sup-) 519.34 537 T
(ported) 72 523 T
(platforms.) 105.93 523 T
(These) 158.19 523 T
(def) 190.11 523 T
(ault) 205.31 523 T
(implementations) 226.58 523 T
(allo) 309.85 523 T
(w) 327.55 523 T
(Stackw) 339.47 523 T
(alk) 374.68 523 T
(erAPI) 389.23 523 T
(to) 421.15 523 T
(w) 433.75 523 T
(ork) 442.29 523 T
(\322out) 461.55 523 T
(of) 485.48 523 T
(the) 498.74 523 T
(box\323) 516.67 523 T
(in) 72 509 T
(a) 84.45 509 T
(standard) 92.9 509 T
(con\336guration) 136.67 509 T
(on) 203.78 509 T
(each) 218.9 509 T
(platform.) 244 509 T
(Users) 291.44 509 T
(can) 321.89 509 T
(port) 341.66 509 T
(Stackw) 364.11 509 T
(alk) 399.31 509 T
(erAPI) 413.86 509 T
(to) 445.63 509 T
(ne) 458.08 509 T
(w) 469.11 509 T
(platforms) 480.89 509 T
(or) 530 509 T
(customize) 72 495 T
(its) 123.52 495 T
(call) 137.72 495 T
(stack) 157.91 495 T
(w) 185.43 495 T
(alking) 193.97 495 T
(beha) 226.83 495 T
(vior) 249.24 495 T
(by) 271.43 495 T
(implementing) 286.29 495 T
(their) 355.83 495 T
(o) 380.68 495 T
(wn) 386.38 495 T
(v) 403.9 495 T
(ersions) 409.72 495 T
(of) 446.58 495 T
(the) 459.43 495 T
(classes) 476.96 495 T
(in) 513.14 495 T
(the) 525.34 495 T
(Callback Interf) 72 481 T
(ace.) 144.19 481 T
(\245) 72 462 T
6 10 Q
(FrameStepper) 90 462 T
1 12 Q
(-) 164.84 462 T
(A) 171.68 462 T
2 10 Q
(FrameStepper) 183.19 462 T
1 12 Q
(object) 258.03 462 T
(describes) 290.2 462 T
(ho) 337.7 462 T
(w) 349.4 462 T
(to) 360.91 462 T
(w) 373.08 462 T
(alk) 381.63 462 T
(through) 399.14 462 T
(a) 439.31 462 T
(single) 447.48 462 T
(type) 478.99 462 T
(of) 502.5 462 T
(stack) 515.34 462 T
(frame.) 90 448 T
(Users) 124.81 448 T
(can) 155.96 448 T
(pro) 176.45 448 T
(vide) 192.26 448 T
(an) 216.75 448 T
(implementation) 231.91 448 T
(of) 311.07 448 T
(this) 324.89 448 T
(interf) 346.06 448 T
(ace) 371.93 448 T
(that) 391.74 448 T
(allo) 413.57 448 T
(ws) 431.27 448 T
(Stackw) 448.43 448 T
(alk) 483.64 448 T
(erAPI) 498.18 448 T
(to) 530.66 448 T
(w) 90 434 T
(alk) 98.54 434 T
(through) 116.99 434 T
(ne) 158.11 434 T
(w) 169.13 434 T
(types) 181.58 434 T
(of) 210.7 434 T
(stack) 224.48 434 T
(frames.) 252.92 434 T
(F) 292.36 434 T
(or) 298.85 434 T
(e) 312.63 434 T
(xample,) 317.77 434 T
(the) 359.89 434 T
(DyninstAPI) 378.33 434 T
(uses) 439.45 434 T
(this) 463.9 434 T
(interf) 485.02 434 T
(ace) 510.9 434 T
(to) 530.66 434 T
(e) 90 420 T
(xtend) 95.15 420 T
(Stackw) 125.83 420 T
(alk) 161.04 420 T
(erAPI) 175.58 420 T
(to) 208.26 420 T
(allo) 221.62 420 T
(w) 239.32 420 T
(it) 252 420 T
(to) 262.69 420 T
(w) 276.05 420 T
(alk) 284.59 420 T
(through) 303.28 420 T
(stack) 344.63 420 T
(frames) 373.31 420 T
(created) 409.98 420 T
(by) 448.64 420 T
(instrumentation) 464.66 420 T
(code.) 90 406 T
(\245) 72 387 T
6 10 Q
(StepperGroup) 90 387 T
1 12 Q
(-) 165.95 387 T
(A) 173.89 387 T
2 10 Q
(StepperGroup) 186.5 387 T
1 12 Q
(is) 262.45 387 T
(a) 274.4 387 T
(collection) 283.68 387 T
(of) 334.96 387 T
2 10 Q
(FrameStepper) 348.9 387 T
1 12 Q
(objects) 424.85 387 T
(and) 462.79 387 T
(criteria) 484.07 387 T
(that) 522 387 T
(describes) 90 373 T
(when) 137.68 373 T
(to) 166.71 373 T
(use) 179.07 373 T
(each) 198.1 373 T
(type) 223.11 373 T
(of) 246.81 373 T
2 10 Q
(FrameStepper) 259.84 373 T
1 12 Q
(.) 331.18 373 T
(These) 337.21 373 T
(criteria) 368.89 373 T
(are) 405.91 373 T
(based) 423.59 373 T
(on) 453.95 373 T
(simple) 468.98 373 T
(address) 504.01 373 T
(ranges) 90 359 T
(in) 126.18 359 T
(the) 140.37 359 T
(code) 159.89 359 T
(space) 187.4 359 T
(of) 218.91 359 T
(the) 233.76 359 T
(tar) 253.28 359 T
(get) 265.72 359 T
(process.) 285.24 359 T
(In) 329.09 359 T
(the) 343.94 359 T
(abo) 363.46 359 T
(v) 380.61 359 T
(e) 386.43 359 T
(e) 396.61 359 T
(xample) 401.76 359 T
(with) 441.94 359 T
(DyninstAPI,) 468.14 359 T
(it) 533.33 359 T
(w) 90 345 T
(ould) 98.54 345 T
(be) 123.18 345 T
(the) 137.81 345 T
(job) 155.77 345 T
(of) 174.41 345 T
(the) 187.7 345 T
2 10 Q
(StepperGroup) 205.67 345 T
1 12 Q
(to) 280.97 345 T
(identify) 293.6 345 T
(a) 334.24 345 T
(stack) 342.86 345 T
(frame) 370.82 345 T
(as) 402.11 345 T
(belonging) 415.4 345 T
(to) 466.7 345 T
(instrumenta-) 479.34 345 T
(tion code and use the instrumentation) 90 331 T
2 10 Q
(FrameStepper) 272.65 331 T
1 12 Q
( to w) 344.65 331 T
(alk through it.) 368.53 331 T
(\245) 72 312 T
6 10 Q
(ProcessState) 90 312 T
1 12 Q
(-) 164.8 312 T
(A) 171.6 312 T
2 10 Q
(ProcessState) 183.06 312 T
1 12 Q
(interf) 257.86 312 T
(ace) 283.73 312 T
(describes) 302.51 312 T
(ho) 349.97 312 T
(w) 361.67 312 T
(to) 373.13 312 T
(access) 385.27 312 T
(data) 418.71 312 T
(in) 441.51 312 T
(the) 453.64 312 T
(tar) 471.1 312 T
(get) 483.55 312 T
(process.) 501.01 312 T
(T) 90 298 T
(o) 96.37 298 T
(w) 105.58 298 T
(alk) 114.13 298 T
(a) 132 298 T
(call) 140.54 298 T
(stack,) 161.07 298 T
(Stackw) 191.94 298 T
(alk) 227.15 298 T
(erAPI) 241.7 298 T
(needs) 273.56 298 T
(to) 304.1 298 T
(access) 316.64 298 T
(both) 350.5 298 T
(re) 375.04 298 T
(gisters) 384.19 298 T
(and) 418.73 298 T
(memory) 439.27 298 T
(in) 482.47 298 T
(the) 495.02 298 T
(tar) 512.89 298 T
(get) 525.34 298 T
(process;) 90 284 T
2 10 Q
(ProcessState) 134.53 284 T
1 12 Q
(pro) 211.74 284 T
(vides) 227.56 284 T
(an) 258.1 284 T
(interf) 274.64 284 T
(ace) 300.51 284 T
(that) 321.7 284 T
(Stackw) 344.91 284 T
(alk) 380.12 284 T
(erAPI) 394.66 284 T
(can) 428.53 284 T
(use) 450.39 284 T
(to) 471.6 284 T
(access) 486.14 284 T
(that) 522 284 T
(information.) 90 270 T
(Stackw) 152.72 270 T
(alk) 187.93 270 T
(erAPI) 202.48 270 T
(includes) 234.19 270 T
(tw) 277.25 270 T
(o) 289.13 270 T
(def) 298.19 270 T
(ault) 313.39 270 T
(implementation) 334.45 270 T
(of) 412.85 270 T
2 10 Q
(ProcessState) 425.9 270 T
1 12 Q
(for) 500.96 270 T
(each) 518.02 270 T
(platform:) 90 256 T
(one) 139.32 256 T
(to) 161.31 256 T
(collect) 175.3 256 T
(a) 211.95 256 T
(\336rst) 221.94 256 T
(party) 245.27 256 T
(stackw) 274.59 256 T
(alk) 307.79 256 T
(in) 327.11 256 T
(the) 341.11 256 T
(current) 360.43 256 T
(process,) 399.07 256 T
(and) 442.72 256 T
(one) 464.7 256 T
(that) 486.69 256 T
(uses) 509.35 256 T
(a) 534.67 256 T
(deb) 90 242 T
(ugger interf) 107.09 242 T
(ace to collect a third party stackw) 163.28 242 T
(alk in another process.) 324.46 242 T
(\245) 72 223 T
6 10 Q
(SymbolLookup) 90 223 T
1 12 Q
(-) 166.37 223 T
(The) 174.74 223 T
2 10 Q
(SymbolLookup) 197.77 223 T
1 12 Q
(interf) 274.15 223 T
(ace) 300.02 223 T
(is) 320.38 223 T
(used) 332.75 223 T
(to) 359.12 223 T
(associate) 372.83 223 T
(a) 420.52 223 T
(symbolic) 430.22 223 T
(name) 478.6 223 T
(with) 508.96 223 T
(a) 534.67 223 T
(stack) 90 209 T
(frame.) 117.97 209 T
(A) 152.27 209 T
(stackw) 164.25 209 T
(alk) 197.45 209 T
(returns) 215.43 209 T
(a) 252.07 209 T
(collection) 260.71 209 T
(of) 311.35 209 T
(addresses) 324.66 209 T
(in) 373.96 209 T
(the) 386.61 209 T
(code) 404.58 209 T
(space) 430.55 209 T
(of) 460.52 209 T
(a) 473.83 209 T
(binary) 482.47 209 T
(.) 512.35 209 T
(This) 518.66 209 T
(class) 90 195 T
(uses) 117.22 195 T
(the) 141.78 195 T
(binary\325) 160.33 195 T
(s) 194.33 195 T
(symbol) 202.89 195 T
(table) 242.12 195 T
(to) 269.34 195 T
(map) 282.57 195 T
(those) 307.13 195 T
(addresses) 336.35 195 T
(into) 386.23 195 T
(symbolic) 408.79 195 T
(names.) 456.69 195 T
(A) 494.24 195 T
(def) 506.8 195 T
(ault) 522 195 T
(implementation) 90 181 T
(of) 169.85 181 T
(this) 184.37 181 T
(class,) 206.23 181 T
(which) 237.07 181 T
(uses) 270.92 181 T
(the) 296.1 181 T
(DynSymtab) 315.28 181 T
(package,) 377.14 181 T
(is) 423.97 181 T
(pro) 436.49 181 T
(vided) 452.3 181 T
(with) 483.49 181 T
(Stack-) 509.34 181 T
(w) 90 167 T
(alk) 98.54 167 T
(erAPI.) 113.09 167 T
(A) 147.57 167 T
(user) 159.05 167 T
(could,) 181.87 167 T
(for) 214.35 167 T
(e) 231.16 167 T
(xample,) 236.31 167 T
(use) 277.46 167 T
(this) 296.28 167 T
(interf) 316.44 167 T
(ace) 342.31 167 T
(to) 361.12 167 T
(allo) 373.28 167 T
(w) 390.98 167 T
(Stackw) 402.46 167 T
(alk) 437.67 167 T
(erAPI) 452.21 167 T
(to) 483.69 167 T
(use) 495.85 167 T
(libelf) 514.67 167 T
(to look up symbol names instead.) 90 153 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 6
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 5) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 16 Q
(3) 72 709.33 T
(API) 84 709.33 T
(R) 115.55 709.33 T
4 12.8 Q
(EFERENCE) 127.1 709.33 T
1 12 Q
(This) 90 686 T
(section) 117.41 686 T
(describes) 157.49 686 T
(the) 208.21 686 T
(Stackw) 228.96 686 T
(alk) 264.16 686 T
(erAPI) 278.71 686 T
(API.) 313.44 686 T
(It) 341.85 686 T
(is) 355.26 686 T
(di) 369.34 686 T
(vided) 378.38 686 T
(into) 411.12 686 T
(three) 435.87 686 T
(sub-sections:) 465.93 686 T
(a) 534.67 686 T
(description) 72 672 T
(of) 129.03 672 T
(the) 142.72 672 T
(de\336nitions) 161.09 672 T
(and) 215.46 672 T
(basic) 236.49 672 T
(types) 264.85 672 T
(used) 293.88 672 T
(by) 319.57 672 T
(this) 335.27 672 T
(API,) 356.31 672 T
(a) 382.34 672 T
(description) 391.37 672 T
(of) 448.39 672 T
(the) 462.09 672 T
(interf) 480.45 672 T
(ace) 506.33 672 T
(for) 526.01 672 T
(collecting stackw) 72 658 T
(alks, and a description of the callback interf) 155.53 658 T
(ace.) 365.36 658 T
4 14 Q
(3.1 De\336nitions and Basic T) 72 628.67 T
(ypes) 230.83 628.67 T
1 12 Q
(The follo) 90 608 T
(wing de\336nitions and basic types are referenced throughout the rest of this manual.) 134.03 608 T
4 F
(3.1.1 De\336nitions) 72 582 T
1 F
(\245) 72 564 T
3 F
(Stac) 90 564 T
(k) 110.42 564 T
(F) 120.18 564 T
(r) 126.85 564 T
(ame) 131.34 564 T
1 F
(-) 155.75 564 T
(A) 164.17 564 T
(stack) 177.26 564 T
(frame) 206.34 564 T
(is) 238.75 564 T
(a) 251.18 564 T
(record) 260.93 564 T
(of) 296 564 T
(a) 310.42 564 T
(function) 320.18 564 T
(\050or) 364.6 564 T
(function-lik) 383.01 564 T
(e) 439.56 564 T
(object\051) 449.31 564 T
(in) 487.06 564 T
(v) 495.91 564 T
(ocation.) 501.67 564 T
(When) 90 550 T
(a) 122.66 550 T
(function) 131.99 550 T
(is) 175.99 550 T
(e) 187.99 550 T
(x) 193.14 550 T
(ecuted,) 198.96 550 T
(it) 237.28 550 T
(may) 247.96 550 T
(create) 272.62 550 T
(a) 305.27 550 T
(frame) 314.6 550 T
(on) 346.59 550 T
(the) 362.59 550 T
(call) 381.26 550 T
(stack.) 402.59 550 T
(Stackw) 434.25 550 T
(alk) 469.46 550 T
(erAPI) 484 550 T
(\336nds) 516.66 550 T
(stack frames and returns a description of them when it w) 90 536 T
(alks a call stack.) 361.82 536 T
(The follo) 72 510 T
(wing three de\336nitions deal with stack frames.) 116.03 510 T
(\245) 72 490 T
3 F
(Bottom) 90 490 T
(of) 127.58 490 T
(the) 139.83 490 T
(Stac) 157.4 490 T
(k) 177.82 490 T
1 F
(-) 186.06 490 T
(The) 192.97 490 T
(bottom) 214.54 490 T
(of) 251.46 490 T
(the) 264.37 490 T
(stack) 281.94 490 T
(is) 309.51 490 T
(the) 320.43 490 T
(earliest) 338 490 T
(stack) 375.57 490 T
(frame) 403.14 490 T
(in) 434.04 490 T
(a) 446.28 490 T
(call) 454.52 490 T
(stack,) 474.76 490 T
(usually) 505.33 490 T
(a thread\325) 90 476 T
(s initial function. The stack gro) 131.65 476 T
(ws from bottom to the top.) 281.34 476 T
(\245) 72 457 T
3 F
(T) 90 457 T
(op) 95.57 457 T
(of) 110.64 457 T
(the) 123.04 457 T
(Stac) 140.77 457 T
(k) 161.2 457 T
1 F
(-) 169.59 457 T
(The) 176.66 457 T
(top) 198.38 457 T
(of) 216.79 457 T
(the) 229.85 457 T
(stack) 247.58 457 T
(is) 275.31 457 T
(the) 286.38 457 T
(most) 304.12 457 T
(recent) 330.52 457 T
(stack) 362.91 457 T
(frame) 390.64 457 T
(in) 421.69 457 T
(a) 434.09 457 T
(call) 442.49 457 T
(stack.) 462.88 457 T
(The) 493.61 457 T
(stack) 515.34 457 T
(frame at the top of the stack is for the currently e) 90 443 T
(x) 324.1 443 T
(ecuting function.) 329.92 443 T
(\245) 72 424 T
3 F
(F) 90 424 T
(r) 96.67 424 T
(ame) 101.16 424 T
(Object) 124.21 424 T
1 F
(-) 159.26 424 T
(A) 166.32 424 T
2 10 Q
(Frame) 178.04 424 T
1 12 Q
(object) 211.1 424 T
(is) 243.49 424 T
(Stackw) 254.56 424 T
(alk) 289.76 424 T
(erAPI\325) 304.31 424 T
(s) 336.3 424 T
(representation) 344.03 424 T
(of) 415.07 424 T
(a) 428.12 424 T
(stack) 436.51 424 T
(frame.) 464.23 424 T
(A) 498.28 424 T
2 10 Q
(Frame) 510 424 T
1 12 Q
(object) 90 410 T
(is) 122.48 410 T
(a) 133.64 410 T
(snapshot) 142.12 410 T
(of) 187.28 410 T
(a) 200.43 410 T
(stack) 208.91 410 T
(frame) 236.73 410 T
(at) 267.87 410 T
(a) 279.68 410 T
(speci\336c) 288.17 410 T
(point) 327.98 410 T
(in) 355.81 410 T
(time.) 368.3 410 T
(Ev) 395.79 410 T
(en) 408.94 410 T
(if) 423.42 410 T
(a) 433.91 410 T
(stack) 442.39 410 T
(frame) 470.21 410 T
(changes) 501.35 410 T
(as) 90 396 T
(a) 103.27 396 T
(process) 111.87 396 T
(e) 151.14 396 T
(x) 156.29 396 T
(ecutes,) 162.11 396 T
(a) 198.37 396 T
2 10 Q
(Frame) 206.97 396 T
1 12 Q
(object) 240.25 396 T
(will) 272.85 396 T
(remain) 294.8 396 T
(the) 331.4 396 T
(same.) 349.34 396 T
(Each) 380.27 396 T
2 10 Q
(Frame) 407.53 396 T
1 12 Q
(object) 440.81 396 T
(is) 473.41 396 T
(represented) 484.69 396 T
(by an instance of the) 90 382 T
2 10 Q
(Frame) 192.31 382 T
1 12 Q
( class.) 222.31 382 T
(The follo) 72 356 T
(wing three de\336nitions deal with \336elds in a) 116.03 356 T
2 10 Q
(Frame) 320.69 356 T
1 12 Q
( object.) 350.69 356 T
(\245) 72 336 T
3 F
(SP) 90 336 T
(\050Stac) 106.59 336 T
(k) 131.01 336 T
(P) 139.59 336 T
(ointer\051) 145.96 336 T
1 F
(-) 181.88 336 T
(A) 189.13 336 T
2 10 Q
(Frame) 201.05 336 T
1 12 Q
(object\325) 234.3 336 T
(s) 266.97 336 T
(SP) 274.89 336 T
(member) 291.49 336 T
(points) 334.07 336 T
(to) 366.66 336 T
(the) 379.25 336 T
(top) 397.17 336 T
(of) 415.76 336 T
(its) 429.01 336 T
(stack) 443.61 336 T
(frame) 471.52 336 T
(\050a) 502.76 336 T
(stack) 515.34 336 T
(frame) 90 322 T
(gro) 121.56 322 T
(ws) 137.26 322 T
(from) 154.16 322 T
(bottom) 181.07 322 T
(to) 218.65 322 T
(top,) 231.56 322 T
(similar) 253.47 322 T
(to) 290.38 322 T
(a) 303.29 322 T
(call) 312.2 322 T
(stack\051.) 333.1 322 T
(The) 368.33 322 T
2 10 Q
(Frame) 390.57 322 T
1 12 Q
(object) 424.14 322 T
(for) 457.05 322 T
(the) 474.61 322 T
(top) 492.85 322 T
(of) 511.76 322 T
(the) 525.34 322 T
(stack) 90 308 T
(has) 118.93 308 T
(a) 139.2 308 T
(SP) 148.8 308 T
(that) 166.42 308 T
(is) 188.69 308 T
(equal) 200.97 308 T
(to) 231.24 308 T
(the) 244.85 308 T
(v) 263.78 308 T
(alue) 269.48 308 T
(in) 293.75 308 T
(the) 307.36 308 T
(stack) 326.3 308 T
(pointer) 355.23 308 T
(re) 393.5 308 T
(gister) 402.64 308 T
(at) 433.58 308 T
(the) 446.52 308 T
(time) 465.45 308 T
(the) 491.06 308 T
2 10 Q
(Frame) 510 308 T
1 12 Q
(object) 90 294 T
(w) 122.07 294 T
(as) 130.61 294 T
(created.) 143.35 294 T
(The) 183.73 294 T
2 10 Q
(Frame) 205.13 294 T
1 12 Q
(object) 237.87 294 T
(for) 269.94 294 T
(an) 286.67 294 T
(y) 297.82 294 T
(other) 306.56 294 T
(stack) 333.96 294 T
(frame) 361.36 294 T
(has) 392.08 294 T
(a) 410.82 294 T
(SP) 418.89 294 T
(that) 434.97 294 T
(is) 455.71 294 T
(equal) 466.45 294 T
(to) 495.18 294 T
(the) 507.26 294 T
(top) 524.66 294 T
(address in the stack frame.) 90 280 T
(\245) 72 261 T
3 F
(FP) 90 261 T
(\050F) 108.04 261 T
(r) 118.71 261 T
(ame) 123.19 261 T
(P) 146.56 261 T
(ointer\051) 152.93 261 T
1 F
(-) 188.97 261 T
(A) 196.34 261 T
2 10 Q
(Frame) 208.38 261 T
1 12 Q
(object\325) 241.76 261 T
(s) 274.42 261 T
(FP) 282.46 261 T
(member) 299.18 261 T
(points) 341.88 261 T
(to) 374.6 261 T
(the) 387.31 261 T
(be) 405.35 261 T
(ginning) 416.5 261 T
(\050or) 456.54 261 T
(bottom\051) 473.91 261 T
(of) 515.29 261 T
(its) 528.66 261 T
(stack) 90 247 T
(frame.) 117.61 247 T
(The) 151.55 247 T
(Frame) 173.17 247 T
(object) 206.78 247 T
(for) 239.06 247 T
(the) 256.01 247 T
(top) 273.63 247 T
(of) 291.92 247 T
(the) 304.87 247 T
(stack) 322.49 247 T
(has) 350.1 247 T
(a) 369.05 247 T
(FP) 377.33 247 T
(that) 393.63 247 T
(is) 414.59 247 T
(equal) 425.54 247 T
(to) 454.49 247 T
(the) 466.78 247 T
(v) 484.4 247 T
(alue) 490.1 247 T
(in) 513.04 247 T
(the) 525.34 247 T
(frame) 90 233 T
(pointer) 120.71 233 T
(re) 157.43 233 T
(gister) 166.57 233 T
(at) 195.96 233 T
(the) 207.35 233 T
(time) 224.74 233 T
(the) 248.8 233 T
2 10 Q
(Frame) 266.18 233 T
1 12 Q
(object) 298.91 233 T
(w) 330.96 233 T
(as) 339.5 233 T
(created.) 352.22 233 T
(The) 392.59 233 T
2 10 Q
(Frame) 413.98 233 T
1 12 Q
(object) 446.7 233 T
(for) 478.75 233 T
(an) 495.47 233 T
(y) 506.62 233 T
(other) 515.34 233 T
(stack frame has a FP that is equal to the be) 90 219 T
(ginning of the stack frame.) 294.46 219 T
(\245) 72 200 T
3 F
(RA) 90 200 T
(\050Return) 108.11 200 T
(Addr) 148.22 200 T
(ess\051) 171.77 200 T
1 F
(-) 193.88 200 T
(A) 201.33 200 T
2 10 Q
(Frame) 213.44 200 T
1 12 Q
(object\325) 246.89 200 T
(s) 279.55 200 T
(RA) 287.67 200 T
(member) 307.78 200 T
(points) 350.55 200 T
(to) 383.34 200 T
(the) 396.12 200 T
(location) 414.24 200 T
(in) 456.35 200 T
(the) 469.13 200 T
(code) 487.24 200 T
(space) 513.35 200 T
(where) 90 186 T
(control) 122.25 186 T
(will) 159.18 186 T
(resume) 180.79 186 T
(when) 218.39 186 T
(the) 247.32 186 T
(function) 264.92 186 T
(that) 307.85 186 T
(created) 328.79 186 T
(the) 366.36 186 T
(stack) 383.97 186 T
(frame) 411.56 186 T
(resumes.) 442.48 186 T
(The) 487.74 186 T
(Frame) 509.34 186 T
(object) 90 172 T
(for) 122.32 172 T
(the) 139.31 172 T
(top) 156.97 172 T
(of) 175.3 172 T
(the) 188.29 172 T
(stack) 205.95 172 T
(has) 233.6 172 T
(a) 252.59 172 T
(RA) 260.92 172 T
(that) 280.58 172 T
(is) 301.57 172 T
(equal) 312.57 172 T
(to) 341.56 172 T
(the) 353.89 172 T
(v) 371.55 172 T
(alue) 377.25 172 T
(in) 400.23 172 T
(the) 412.56 172 T
(program) 430.22 172 T
(counter) 473.87 172 T
(re) 512.86 172 T
(gis-) 522 172 T
(ter) 90 158 T
(at) 105.7 158 T
(the) 117.41 158 T
(time) 135.11 158 T
(the) 159.49 158 T
2 10 Q
(Frame) 177.2 158 T
1 12 Q
(object) 210.24 158 T
(w) 242.6 158 T
(as) 251.15 158 T
(created.) 264.19 158 T
(The) 304.87 158 T
2 10 Q
(Frame) 326.57 158 T
1 12 Q
(object) 359.61 158 T
(for) 391.98 158 T
(an) 409.02 158 T
(y) 420.17 158 T
(other) 429.21 158 T
(stack) 456.91 158 T
(frame) 484.61 158 T
(has) 515.63 158 T
(a) 534.67 158 T
(RA that is found when w) 90 144 T
(alking a call stack.) 210.2 144 T
(Figure) 72 118 T
(2) 106.33 118 T
(sho) 115.28 118 T
(ws) 131.65 118 T
(the) 147.94 118 T
(relationship) 165.55 118 T
(between) 225.17 118 T
(application) 268.1 118 T
(code,) 324.38 118 T
(stack) 352.99 118 T
(frames,) 380.6 118 T
(and) 419.21 118 T
2 10 Q
(Frame) 439.49 118 T
1 12 Q
(objects.) 472.44 118 T
(In) 512.39 118 T
(the) 525.34 118 T
(\336gure,) 72 104 T
(the) 106.67 104 T
(source) 125 104 T
(code) 159.99 104 T
(on) 186.32 104 T
(the) 201.99 104 T
(left) 220.32 104 T
(has) 239.99 104 T
(run) 259.65 104 T
(through) 279.32 104 T
(the) 320.32 104 T
2 10 Q
(main) 338.65 104 T
1 12 Q
(and) 366.32 104 T
2 10 Q
(foo) 387.32 104 T
1 12 Q
(functions,) 408.99 104 T
(and) 460.33 104 T
(into) 481.32 104 T
(the) 503.67 104 T
2 10 Q
(bar) 522 104 T
1 12 Q
(function.) 72 90 T
(It) 118.29 90 T
(has) 128.92 90 T
(created) 148.21 90 T
(the) 186.15 90 T
(call) 204.11 90 T
(stack) 224.73 90 T
(in) 252.69 90 T
(the) 265.32 90 T
(center) 283.28 90 T
(,) 312.11 90 T
(which) 318.41 90 T
(is) 351.03 90 T
(sho) 362.33 90 T
(wn) 378.7 90 T
(as) 396.66 90 T
(a) 409.95 90 T
(sequence) 418.57 90 T
(of) 465.85 90 T
(w) 479.14 90 T
(ords) 487.68 90 T
(gro) 511.64 90 T
(w-) 527.34 90 T
(ing) 72 76 T
(do) 90.58 76 T
(wn.) 102.28 76 T
(The) 123.19 76 T
(current) 145.09 76 T
(v) 182.32 76 T
(alues) 188.02 76 T
(of) 215.92 76 T
(the) 229.16 76 T
(processor) 247.07 76 T
(re) 296.29 76 T
(gisters,) 305.44 76 T
(while) 343.01 76 T
(e) 372.92 76 T
(x) 378.07 76 T
(ecuting) 383.89 76 T
(in) 422.46 76 T
2 10 Q
(bar) 435.04 76 T
1 12 Q
(,) 452.56 76 T
(are) 458.8 76 T
(sho) 476.7 76 T
(wn) 493.07 76 T
(belo) 510.97 76 T
(w) 531.34 76 T
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 7
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 6) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(the) 72 712 T
(call) 90.14 712 T
(stack.) 110.94 712 T
(When) 142.07 712 T
(Stackw) 174.2 712 T
(alk) 209.4 712 T
(erAPI) 223.95 712 T
(w) 256.08 712 T
(alks) 264.62 712 T
(the) 287.42 712 T
(call) 305.56 712 T
(stack,) 326.36 712 T
(it) 357.49 712 T
(creates) 367.64 712 T
(the) 404.42 712 T
2 10 Q
(Frame) 422.56 712 T
1 12 Q
(objects) 456.03 712 T
(sho) 493.5 712 T
(wn) 509.86 712 T
(on) 528 712 T
(the) 72 698 T
(right.) 91 698 T
(Each) 121.01 698 T
2 10 Q
(Frame) 149.34 698 T
1 12 Q
(object) 183.67 698 T
(corresponds) 217.34 698 T
(to) 279.66 698 T
(one) 293.34 698 T
(of) 315 698 T
(the) 329.34 698 T
(stack) 348.34 698 T
(frames) 377.34 698 T
(found) 414.33 698 T
(in) 446.66 698 T
(the) 460.34 698 T
(call) 479.34 698 T
(stack) 501.01 698 T
(or) 530 698 T
(application re) 72 684 T
(gisters.) 137.47 684 T
(The) 90 664 T
(call) 111.38 664 T
(stack) 131.42 664 T
(in) 158.8 664 T
(Figure) 170.85 664 T
(2) 205.18 664 T
(is) 213.9 664 T
(similar) 224.62 664 T
(to) 260.67 664 T
(one) 272.72 664 T
(that) 292.77 664 T
(w) 313.48 664 T
(ould) 322.03 664 T
(be) 346.08 664 T
(found) 360.12 664 T
(on) 390.83 664 T
(the) 405.55 664 T
(x86) 422.93 664 T
(architecture.) 443.65 664 T
(Details) 506 664 T
(about) 72 650 T
(ho) 102.39 650 T
(w) 114.08 650 T
(the) 126.47 650 T
(call) 144.85 650 T
(stack) 165.9 650 T
(is) 194.28 650 T
(laid) 206.01 650 T
(out) 227.73 650 T
(may) 246.79 650 T
(be) 271.17 650 T
(dif) 286.22 650 T
(ferent) 299.25 650 T
(on) 330.96 650 T
(other) 346.68 650 T
(architectures,) 375.06 650 T
(b) 443.09 650 T
(ut) 448.85 650 T
(the) 461.9 650 T
(meanings) 480.29 650 T
(of) 530 650 T
(the FP) 72 636 T
(, SP) 101.68 636 T
(, and RA \336elds in the Frame objects will remain the same.) 119.69 636 T
(The follo) 72 268.47 T
(wing four de\336nitions deal with processes in) 116.03 268.47 T
(v) 324.86 268.47 T
(olv) 330.62 268.47 T
(ed in Stackw) 345.78 268.47 T
(alk) 407.65 268.47 T
(erAPI.) 422.2 268.47 T
(\245) 72 248.47 T
3 F
(T) 90 248.47 T
(ar) 95.57 248.47 T
(g) 105.79 248.47 T
(et Pr) 111.67 248.47 T
(ocess) 134.8 248.47 T
1 F
( - The process from which Stackw) 160.79 248.47 T
(alk) 325.3 248.47 T
(erAPI is collecting stackw) 339.84 248.47 T
(alks.) 466.03 248.47 T
(\245) 72 229.47 T
3 F
(Host Pr) 90 229.47 T
(ocess) 127.13 229.47 T
1 F
( - The process in which Stackw) 153.12 229.47 T
(alk) 303.64 229.47 T
(erAPI code is currently running.) 318.18 229.47 T
(\245) 72 210.47 T
3 F
(F) 90 210.47 T
(ir) 96.79 210.47 T
(st) 104.68 210.47 T
(P) 117.28 210.47 T
(arty) 123.65 210.47 T
(Stac) 147.57 210.47 T
(kwalk) 168 210.47 T
1 F
(-) 200.59 210.47 T
(Stackw) 209.18 210.47 T
(alk) 244.39 210.47 T
(erAPI) 258.93 210.47 T
(collects) 292.18 210.47 T
(\336rst) 333.44 210.47 T
(party) 356.7 210.47 T
(stackw) 385.96 210.47 T
(alk) 419.16 210.47 T
(when) 438.42 210.47 T
(it) 469.01 210.47 T
(w) 480.28 210.47 T
(alks) 488.82 210.47 T
(a) 512.75 210.47 T
(call) 522.67 210.47 T
(stack) 90 196.47 T
(in) 118.1 196.47 T
(the) 130.87 196.47 T
(same) 148.97 196.47 T
(address) 177.06 196.47 T
(space) 216.49 196.47 T
(it) 246.57 196.47 T
(is) 256.68 196.47 T
(running) 268.12 196.47 T
(in,) 308.89 196.47 T
(i.e.) 324.66 196.47 T
(the) 342.76 196.47 T
(tar) 360.86 196.47 T
(get) 373.3 196.47 T
(process) 391.4 196.47 T
(is) 430.83 196.47 T
(the) 442.27 196.47 T
(same) 460.37 196.47 T
(as) 488.46 196.47 T
(the) 501.9 196.47 T
(host) 520 196.47 T
(process.) 90 182.47 T
(\245) 72 163.47 T
3 F
(Thir) 90 163.47 T
(d) 110.23 163.47 T
(P) 119.53 163.47 T
(arty) 125.9 163.47 T
(Stac) 148.53 163.47 T
(kwalk) 168.95 163.47 T
1 F
(-) 200.24 163.47 T
(Stackw) 207.54 163.47 T
(alk) 242.74 163.47 T
(erAPI) 257.29 163.47 T
(collects) 289.24 163.47 T
(third) 329.2 163.47 T
(party) 355.16 163.47 T
(stackw) 383.12 163.47 T
(alk) 416.32 163.47 T
(when) 434.28 163.47 T
(it) 463.57 163.47 T
(w) 473.54 163.47 T
(alks) 482.08 163.47 T
(the) 504.71 163.47 T
(call) 522.67 163.47 T
(stack) 90 149.47 T
(in) 117.8 149.47 T
(a) 130.28 149.47 T
(dif) 138.75 149.47 T
(ferent) 151.79 149.47 T
(address) 182.91 149.47 T
(space) 222.04 149.47 T
(from) 251.84 149.47 T
(the) 278.31 149.47 T
(one) 296.12 149.47 T
(it) 316.59 149.47 T
(is) 326.4 149.47 T
(running) 337.55 149.47 T
(in,) 378.03 149.47 T
(i.e.) 393.51 149.47 T
(the) 411.31 149.47 T
(tar) 429.12 149.47 T
(get) 441.57 149.47 T
(process) 459.37 149.47 T
(is) 498.5 149.47 T
(dif) 509.65 149.47 T
(fer-) 522.68 149.47 T
(ent) 90 135.47 T
(from) 108.36 135.47 T
(the) 135.38 135.47 T
(host) 153.74 135.47 T
(process.) 177.44 135.47 T
(A) 220.12 135.47 T
(third) 232.48 135.47 T
(party) 258.85 135.47 T
(stackw) 287.2 135.47 T
(alk) 320.4 135.47 T
(is) 338.77 135.47 T
(usually) 350.46 135.47 T
(done) 388.83 135.47 T
(through) 415.85 135.47 T
(a) 456.88 135.47 T
(deb) 465.9 135.47 T
(ugger) 482.99 135.47 T
(inter-) 514.01 135.47 T
(f) 90 121.47 T
(ace.) 93.88 121.47 T
4 F
(Figur) 180.11 294.47 T
(e) 208.56 294.47 T
(2: Stack Frame and Frame Object Lay) 216.89 294.47 T
(out) 415.22 294.47 T
108.66 308.47 503.34 618 C
0 0 0 1 0 0 0 1 K
2 10 Q
0 X
(void main\050\051 {) 113.61 586.61 T
( int a;) 119.61 574.61 T
( foo\0500\051;) 119.61 562.61 T
(...) 125.61 550.61 T
(}) 113.61 538.61 T
(void foo\050int b\051 {) 113.95 510.5 T
( int c;) 119.95 498.5 T
( bar\050\051;) 119.95 486.5 T
( ...) 119.95 474.5 T
(}) 113.95 462.5 T
(void bar\050\051 {) 113.38 434.89 T
( int d;) 119.38 422.89 T
( while\0501\051;) 119.38 410.89 T
(}) 113.38 398.89 T
0 0 0 1 0 0 0 0.2 K
261.86 556.88 330.55 570.14 R
3 X
V
0.5 H
2 Z
0 X
N
0 0 0 1 0 0 0 1 K
2 12.27 11.35 QQ
(a) 289.45 561.01 T
0 0 0 1 0 0 0 0.2 K
261.86 543.62 330.55 556.88 R
3 X
V
0 X
N
0 0 0 1 0 0 0 1 K
(b) 289.34 546.95 T
0 0 0 1 0 0 0 0.2 K
261.86 530.36 330.55 543.62 R
3 X
V
0 X
N
261.86 517.11 330.55 530.36 R
3 X
V
0 X
N
261.86 503.85 330.55 517.11 R
3 X
V
0 X
N
0 0 0 1 0 0 0 1 K
(c) 289.92 507.12 T
0 0 0 1 0 0 0 0.2 K
261.86 490.59 330.55 503.85 R
3 X
V
0 X
N
261.86 477.34 330.55 490.59 R
3 X
V
0 X
N
262.11 464.08 330.3 477.34 R
3 X
V
0 X
N
0 0 0 1 0 0 0 1 K
(d) 290.58 467.6 T
7 14.73 13.63 QQ
(Call Stack) 255.82 589.53 T
(Registers) 259.78 439.76 T
180 270 23.62 20.74 261.75 545.77 A
250.46 574.17 260.54 577.59 2 L
0 Z
N
249.74 577.08 260.54 577.59 251.65 571.43 3 L
N
238.12 546.21 M
 238.12 558.32 241.87 571.26 250.46 574.17 D
2 Z
N
0 0 0 1 0 0 0 0.2 K
0 0 0 1 0 0 0 1 K
2 12.27 11.35 QQ
(main\325s RA) 264.56 533.31 T
0 0 0 1 0 0 0 0.2 K
0 0 0 1 0 0 0 1 K
(main\325s FP) 264.46 519.66 T
(foo\325s RA) 267.8 493.24 T
(foo\325s FP) 268.54 480.53 T
247.91 420.87 357.47 434.13 R
N
247.91 407.62 357.45 420.87 R
N
247.91 394.36 357.45 407.62 R
N
(Stack Pointer) 258.08 398.83 T
(Frame Pointer) 258.21 423.8 T
2 12.27 11.66 QQ
(Program Counter) 249.88 411.27 T
191.42 414 180.8 414 2 L
0 Z
N
191.17 411.02 180.8 414 191.17 416.98 3 L
N
248 414 191.42 414 2 L
2 Z
N
180 270 5.71 44.81 247.02 446.46 A
250.64 466.42 260.74 469.75 2 L
0 Z
N
249.95 469.33 260.74 469.75 251.81 463.67 3 L
N
241.36 447.35 M
 241.36 455.35 244.1 464.26 250.64 466.42 D
2 Z
N
250.66 519.2 261.07 521.36 2 L
0 Z
N
250.3 522.17 261.07 521.36 251.51 516.34 3 L
N
238.66 502.83 M
 238.66 509.88 242.99 517.61 250.66 519.2 D
2 Z
N
180 270 22.58 15.92 261.49 502.15 A
180 270 11.82 30.33 247.67 457 A
250.83 479.6 261.21 481.9 2 L
0 Z
N
250.43 482.57 261.21 481.9 251.72 476.75 3 L
N
235.85 456.32 M
 235.85 466.59 241.28 477.49 250.83 479.6 D
2 Z
N
2 12.27 11.35 QQ
(main\325s) 416.5 606.28 T
2 12.27 11.31 QQ
(foo\325s) 414.66 520.63 T
0 0 0 1 0 0 0 0.2 K
330.72 568.18 377.46 568.18 417.13 586.09 3 L
N
330.75 518.58 380.17 518.58 422.13 543.19 3 L
N
330.47 515.51 378.51 515.51 419.3 501.27 3 L
N
330.47 479.24 378.01 479.24 418.37 458.13 3 L
N
0 0 0 1 0 0 0 1 K
2 12.27 11.35 QQ
(bar\325s) 415.21 434.77 T
0 0 0 1 0 0 0 0.2 K
414.66 453.65 442.66 504.29 14 RR
N
0 0 0 1 0 0 0 1 K
(FP) 420.96 488.31 T
(RA) 420.96 476.04 T
(SP) 420.96 463.76 T
0 0 0 1 0 0 0 0.2 K
J
357.47 434.5 390.17 434.5 418.75 416.85 3 L
N
357.9 394.61 388.36 394.61 416.83 375.48 3 L
N
0 0 0 1 0 0 0 1 K
261.95 517 330.28 570.33 R
1 H
N
261.95 477.55 330.28 517 R
N
248.06 394.22 357.5 434.22 R
N
342.17 563.75 331.55 563.75 2 L
0.5 H
0 Z
N
341.92 560.77 331.55 563.75 341.92 566.73 3 L
N
342.17 563.75 378.63 563.75 421.64 579.5 3 L
2 Z
N
341.92 525 331.3 525 2 L
0 Z
N
341.67 522.02 331.3 525 341.67 527.98 3 L
N
341.92 525 378.64 525 421.14 554.25 3 L
2 Z
N
J
341.92 538 331.3 538 2 L
0 Z
N
341.67 535.02 331.3 538 341.67 540.98 3 L
N
J
341.92 538 376.05 538 420.89 566.75 3 L
J
341.92 538 345.67 538 2 L
2 Z
N
[9.74 8.442] 9.74 I
345.67 538 372.3 538 2 L
N
J
372.3 538 376.05 538 379.2 540.02 3 L
N
[7.077 6.134] 7.077 I
379.2 540.02 417.73 564.73 2 L
N
J
417.73 564.73 420.89 566.75 2 L
N
J
330.14 571 330.14 584.25 2 L
N
341.92 510.5 331.3 510.5 2 L
0 Z
N
341.67 507.52 331.3 510.5 341.67 513.48 3 L
N
341.92 510.5 368.67 510.5 421.39 491.75 3 L
2 Z
N
0 0 0 1 0 0 0 0.2 K
414.91 541.43 442.91 592.07 14 RR
N
0 0 0 1 0 0 0 1 K
(FP) 421.21 576.09 T
(RA) 421.21 563.82 T
(SP) 421.21 551.54 T
J
342.42 497.5 331.8 497.5 2 L
0 Z
N
342.17 494.52 331.8 497.5 342.17 500.48 3 L
N
J
342.42 497.5 368.36 497.5 420.89 479 3 L
J
342.42 497.5 346.17 497.5 2 L
2 Z
N
[6.746 5.846] 6.746 I
346.17 497.5 364.61 497.5 2 L
N
J
364.61 497.5 368.36 497.5 371.9 496.25 3 L
N
[7.452 6.458] 7.452 I
371.9 496.25 417.35 480.25 2 L
N
J
417.35 480.25 420.89 479 2 L
N
J
341.92 484.25 331.3 484.25 2 L
0 Z
N
341.67 481.27 331.3 484.25 341.67 487.23 3 L
N
421.14 467.5 375.92 484.25 341.92 484.25 3 L
2 Z
N
0 0 0 1 0 0 0 0.2 K
414.66 369.43 442.66 420.07 14 RR
N
0 0 0 1 0 0 0 1 K
(FP) 420.96 404.09 T
(RA) 420.96 391.82 T
(SP) 420.96 379.55 T
J
261.96 571 261.96 584.25 2 L
N
J
369.67 427.25 359.05 427.25 2 L
0 Z
N
369.42 424.27 359.05 427.25 369.42 430.23 3 L
N
J
369.67 427.25 389.75 427.25 420.64 407.75 3 L
J
369.67 427.25 373.42 427.25 2 L
2 Z
N
[14.508 12.574] 14.508 I
373.42 427.25 386 427.25 2 L
N
J
386 427.25 389.75 427.25 392.92 425.25 3 L
N
[6.311 5.47] 6.311 I
392.92 425.25 417.47 409.75 2 L
N
J
417.47 409.75 420.64 407.75 2 L
N
J
369.42 414.5 358.8 414.5 2 L
0 Z
N
369.17 411.52 358.8 414.5 369.17 417.48 3 L
N
J
369.42 414.5 387.81 414.5 421.39 394.75 3 L
J
369.42 414.5 373.17 414.5 2 L
2 Z
N
[12.566 10.89] 12.566 I
373.17 414.5 384.06 414.5 2 L
N
J
384.06 414.5 387.81 414.5 391.05 412.6 3 L
N
[6.838 5.926] 6.838 I
391.05 412.6 418.16 396.65 2 L
N
J
418.16 396.65 421.39 394.75 2 L
N
J
369.42 402 358.8 402 2 L
0 Z
N
369.17 399.02 358.8 402 369.17 404.98 3 L
N
J
369.42 402 387.5 402 421.14 383 3 L
J
369.42 402 373.17 402 2 L
2 Z
N
[12.206 10.579] 12.206 I
373.17 402 383.75 402 2 L
N
J
383.75 402 387.5 402 390.77 400.16 3 L
N
[6.768 5.865] 6.768 I
390.77 400.16 417.87 384.85 2 L
N
J
417.87 384.85 421.14 383 2 L
N
0 0 0 1 0 0 0 0.2 K
J
262.32 584.66 330 584.66 330 570.66 262.32 570.66 4 Y
3 X
V
J
262.32 584.66 330 584.66 330 570.66 262.32 570.66 4 Y
J
262.32 580.91 262.32 584.66 266.07 584.66 3 L
[7.222 6.259] 7.222 I
266.07 584.66 326.25 584.66 2 L
J
326.25 584.66 330 584.66 330 580.91 3 L
[7.5 6.5] 7.5 I
330 580.91 330 574.41 2 L
J
330 574.41 330 570.66 326.25 570.66 3 L
[7.222 6.259] 7.222 I
326.25 570.66 266.07 570.66 2 L
J
266.07 570.66 262.32 570.66 262.32 574.41 3 L
[7.5 6.5] 7.5 I
262.32 574.41 262.32 580.91 2 L
0 0 0 1 0 0 0 1 K
7 14.73 13.63 QQ
0 X
(...) 281.14 575 T
J
4 11.72 10.66 QQ
(LEGEND) 0 90 177.78 317.52 TF
194.58 364.32 185.58 364.32 2 L
1 H
N
185.58 364.32 185.58 315.72 2 L
N
194.58 315.72 185.58 315.72 2 L
N
403.58 364.32 412.58 364.32 2 L
N
412.58 364.32 412.58 315.72 2 L
N
403.58 315.72 412.58 315.72 2 L
N
1 12 Q
(A) 197.33 344.56 T
J
224.63 348.31 229.33 348.31 2 L
0.5 H
0 Z
N
224.88 350.88 229.33 348.31 224.88 345.75 3 L
N
208.08 348.31 224.63 348.31 2 L
2 Z
N
(B) 231.58 344.56 T
(A contains B\325) 260.08 345.06 T
(s address) 326.08 345.06 T
(A) 197.54 332.52 T
J
224.84 336.27 229.54 336.27 2 L
0 Z
N
225.09 338.83 229.54 336.27 225.09 333.7 3 L
N
J
208.29 336.27 209.04 336.27 2 L
2 Z
N
[1.369 4.106] 1.369 I
209.04 336.27 224.09 336.27 2 L
N
J
224.09 336.27 224.84 336.27 2 L
N
J
(B) 231.79 332.52 T
(A contains the contents of B) 260.29 333.02 T
2 12.27 11.35 QQ
(Frame Object) 416.5 594 T
2 12.27 11.31 QQ
(Frame Object) 414.66 508.36 T
2 12.27 11.35 QQ
(Frame Object) 415.21 422.49 T
262 557 330.25 557 2 L
V
N
262.25 543.75 329.75 543.75 2 L
N
262 504 329.75 504 2 L
N
262 490.5 330.25 490.5 2 L
N
261.75 477 261.75 464.25 2 L
N
330.25 477.5 330.25 464 2 L
N
262.5 530.5 329.75 530.5 2 L
N
261.94 464 330.27 464.25 2 L
N
191.4 480.5 180.77 480.5 2 L
0 Z
N
191.15 477.52 180.77 480.5 191.15 483.48 3 L
N
191.4 480.5 235.7 480.5 261.65 497.4 3 L
2 Z
N
191.4 556.25 180.77 556.25 2 L
0 Z
N
191.15 553.27 180.77 556.25 191.15 559.23 3 L
N
191.4 556.25 234.62 556.25 261.65 537 3 L
2 Z
N
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "6" 7
%%Page: "7" 8
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 7) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 12 Q
(3.1.2 Basic T) 72 712 T
(ypes) 136.45 712 T
2 10 Q
(typedef unsigned long) 72 688.33 T
7 12 Q
(Address) 204 688.33 T
1 F
(An) 90 661 T
(inte) 107.62 661 T
(ger) 125.44 661 T
(v) 143.73 661 T
(alue) 149.43 661 T
(capable) 172.38 661 T
(of) 211.98 661 T
(holding) 224.94 661 T
(an) 264.57 661 T
(address) 278.86 661 T
(in) 317.8 661 T
(the) 330.1 661 T
(tar) 347.72 661 T
(get) 360.16 661 T
(process.) 377.79 661 T
(Address) 419.73 661 T
(v) 462.02 661 T
(ariables) 467.72 661 T
(should) 508 661 T
(not,) 90 647 T
(and) 111.2 647 T
(in) 131.39 647 T
(man) 143.59 647 T
(y) 164.07 647 T
(cases) 172.94 647 T
(cannot,) 201.12 647 T
(be) 238.98 647 T
(used) 253.17 647 T
(directly) 278.03 647 T
(as) 317.55 647 T
(a) 330.41 647 T
(pointer) 338.61 647 T
(.) 371.94 647 T
(It) 377.81 647 T
(may) 388 647 T
(refer) 411.53 647 T
(to) 437.04 647 T
(an) 449.24 647 T
(address) 463.43 647 T
(in) 502.28 647 T
(a) 514.48 647 T
(dif-) 522.67 647 T
(ferent) 90 633 T
(process,) 123.84 633 T
(and) 168.69 633 T
(it) 191.88 633 T
(may) 204.41 633 T
(not) 230.93 633 T
(directly) 252.13 633 T
(match) 294.64 633 T
(the) 329.83 633 T
(tar) 350.36 633 T
(get) 362.8 633 T
(process\325) 383.32 633 T
(pointer) 429.17 633 T
(representation.) 469.02 633 T
2 10 Q
(Address) 90 619 T
1 12 Q
(is) 135.71 619 T
(guaranteed) 147.43 619 T
(to) 203.78 619 T
(be) 216.83 619 T
(at) 231.87 619 T
(least) 244.24 619 T
(lar) 269.95 619 T
(ge) 282.39 619 T
(enough) 297.43 619 T
(to) 336.47 619 T
(hold) 349.52 619 T
(an) 374.56 619 T
(address) 389.6 619 T
(in) 429.3 619 T
(a) 442.35 619 T
(tar) 451.39 619 T
(get) 463.83 619 T
(process,) 482.2 619 T
(b) 524.9 619 T
(ut) 530.66 619 T
(may be lar) 90 605 T
(ger) 140.44 605 T
(.) 155.1 605 T
2 10 Q
(typedef ...) 72 578.33 T
7 12 Q
(Dyninst::PID) 144 578.33 T
1 F
(A) 90 551 T
(handle) 102.61 551 T
(for) 138.56 551 T
(identifying) 156.5 551 T
(a) 213.12 551 T
(process.) 222.4 551 T
(On) 265.33 551 T
(UNIX) 283.95 551 T
(systems) 317.89 551 T
(this) 359.84 551 T
(will) 381.13 551 T
(be) 403.75 551 T
(an) 419.03 551 T
(inte) 434.31 551 T
(ger) 452.13 551 T
(representing) 471.4 551 T
(a) 534.67 551 T
(PID. On W) 90 537 T
(indo) 143.84 537 T
(ws this will be a) 164.88 537 T
2 10 Q
(HANDLE) 245.88 537 T
1 12 Q
( object.) 281.88 537 T
2 10 Q
(typedef ...) 72 510.33 T
7 12 Q
(Dyninst::THR_ID) 144 510.33 T
1 F
(A) 90 483 T
(handle) 102.49 483 T
(for) 138.31 483 T
(identifying) 156.13 483 T
(a) 212.63 483 T
(thread.) 221.79 483 T
(On) 258.6 483 T
(Linux) 277.1 483 T
(based) 309.59 483 T
(platforms) 340.75 483 T
(this) 390.57 483 T
(is) 411.74 483 T
(an) 423.57 483 T
(inte) 438.73 483 T
(ger) 456.55 483 T
(referring) 475.7 483 T
(to) 521.51 483 T
(a) 534.67 483 T
(TID) 90 469 T
(\050Thread) 113.67 469 T
(Identi\336er\051.) 155.32 469 T
(On) 209.99 469 T
(Solaris) 228.32 469 T
(and) 265.34 469 T
(AIX) 286.34 469 T
(the) 311.34 469 T
(inte) 329.68 469 T
(ger) 347.5 469 T
(refers) 366.5 469 T
(to) 397.48 469 T
(a) 410.49 469 T
(L) 419.5 469 T
(WP) 425.94 469 T
(\050Light) 447.62 469 T
(W) 481.29 469 T
(eight) 491.66 469 T
(Pro-) 519.34 469 T
(cess\051. On W) 90 455 T
(indo) 148.5 455 T
(ws it is a) 169.54 455 T
2 10 Q
(HANDLE) 214.87 455 T
1 12 Q
( object.) 250.87 455 T
2 10 Q
(typedef ...) 72 428.33 T
7 12 Q
(Dyninst::MachRegister) 144 428.33 T
1 F
(A v) 90 401 T
(alue that names a machine re) 107.36 401 T
(gister) 246.14 401 T
(.) 272.15 401 T
2 10 Q
(typedef unsigned long) 72 374.33 T
7 12 Q
(Dyninst::MachRegisterVal) 204 374.33 T
1 F
(A) 90 347 T
(v) 102.99 347 T
(alue) 108.69 347 T
(that) 133 347 T
(holds) 155.32 347 T
(the) 185.65 347 T
(contents) 204.64 347 T
(of) 248.96 347 T
(a) 263.27 347 T
(re) 272.93 347 T
(gister) 282.07 347 T
(.) 308.07 347 T
(A) 315.4 347 T
2 10 Q
(Dyninst::MachRegister) 328.38 347 T
1 12 Q
(names) 458.71 347 T
(a) 493.69 347 T
(speci\336c) 503.34 347 T
(re) 90 333 T
(gister) 99.14 333 T
(,) 125.33 333 T
(while) 131.85 333 T
(a) 162.03 333 T
2 10 Q
(Dyninst::MachRegisterVal) 170.87 333 T
1 12 Q
(represents) 318.39 333 T
(the) 370.55 333 T
(v) 388.73 333 T
(alue) 394.43 333 T
(that) 417.94 333 T
(may) 439.46 333 T
(be) 463.64 333 T
(in) 478.49 333 T
(that) 491.34 333 T
(re) 512.86 333 T
(gis-) 522 333 T
(ter) 90 319 T
(.) 102 319 T
4 14 Q
(3.2 Namespace Stackwalk) 72 289.67 T
(erAPI) 226.24 289.67 T
1 12 Q
(The) 90 269 T
(classes) 112.42 269 T
(in) 149.49 269 T
(Section) 162.59 269 T
(3.3) 201.59 269 T
(and) 220.34 269 T
(Section) 241.42 269 T
(3.5) 280.42 269 T
(f) 299.18 269 T
(all) 303.05 269 T
(under) 318.81 269 T
(the) 349.89 269 T
(C++) 368.31 269 T
(namespace) 393.6 269 T
2 10 Q
(Dyninst::Stack-) 450 269 T
(walker) 72 255 T
1 12 Q
(.) 107.34 255 T
(T) 113.62 255 T
(o) 119.99 255 T
(access) 129.28 255 T
(them,) 163.21 255 T
(a) 193.49 255 T
(user) 202.1 255 T
(should) 225.38 255 T
(refer) 260.66 255 T
(to) 286.59 255 T
(them) 299.21 255 T
(using) 326.49 255 T
(the) 355.77 255 T
2 10 Q
(Dyninst::Stackwalker::) 373.72 255 T
1 12 Q
(pre\336x,) 509 255 T
(e.g.) 72 241 T
2 10 Q
(Dyninst::Stackwalker::Walker) 94.15 241 T
1 12 Q
(.) 261.49 241 T
(Alternati) 269.31 241 T
(v) 311.67 241 T
(ely) 317.49 241 T
(,) 331.37 241 T
(a) 339.19 241 T
(user) 349.34 241 T
(can) 374.15 241 T
(add) 395.62 241 T
(the) 417.77 241 T
(C++) 437.25 241 T
2 10 Q
(using) 463.61 241 T
1 12 Q
(k) 498.43 241 T
(e) 504.31 241 T
(yw) 509.46 241 T
(ord) 524 241 T
(abo) 72 227 T
(v) 89.15 227 T
(e) 94.97 227 T
(an) 104.43 227 T
(y) 115.58 227 T
(references) 125.71 227 T
(to) 179.14 227 T
(Stackw) 192.61 227 T
(alk) 227.82 227 T
(erAPI) 242.36 227 T
(objects,) 275.15 227 T
(e.g,) 316.28 227 T
2 10 Q
(using) 337.74 227 T
(namespace) 376.01 227 T
(Dyninst) 438.27 227 T
1 12 Q
(and) 488.54 227 T
2 10 Q
(using) 510 227 T
(namespace Stackwalker) 72 213 T
1 12 Q
(.) 197.34 213 T
4 14 Q
(3.3 Stackwalking Interface) 72 183.67 T
1 12 Q
(This) 90 163 T
(section) 115.31 163 T
(describes) 153.28 163 T
(Stackw) 201.91 163 T
(alk) 237.12 163 T
(erAPI\325) 251.66 163 T
(s) 283.65 163 T
(interf) 292.3 163 T
(ace) 318.17 163 T
(for) 338.13 163 T
(w) 356.09 163 T
(alking) 364.64 163 T
(a) 398.61 163 T
(call) 407.92 163 T
(stack.) 429.22 163 T
(This) 460.85 163 T
(interf) 486.17 163 T
(ace) 512.04 163 T
(is) 532 163 T
(suf) 72 149 T
(\336cient) 86.36 149 T
(for) 120.58 149 T
(w) 138.79 149 T
(alking) 147.34 149 T
(call) 181.55 149 T
(stacks) 203.1 149 T
(on) 236.65 149 T
(all) 252.87 149 T
(the) 269.08 149 T
(systems) 287.97 149 T
(and) 330.19 149 T
(v) 351.74 149 T
(ariations) 357.44 149 T
(co) 402.98 149 T
(v) 414.13 149 T
(ered) 419.95 149 T
(by) 444.82 149 T
(our) 461.04 149 T
(def) 481.25 149 T
(ault) 496.46 149 T
(call-) 518.67 149 T
(backs.) 72 135 T
(T) 90 119 T
(o collect a stackw) 96.37 119 T
(alk, \336rst create ne) 181.9 119 T
(w W) 266.9 119 T
(alk) 288.94 119 T
(er object associated with the tar) 303.48 119 T
(get process via) 454.9 119 T
2 10 Q
(Walker::newWalker\050\051) 108 101.33 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 9
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 8) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(or) 90 712 T
2 10 Q
(Walker::newWalker\050Dyninst::PID pid\051.) 108 694.33 T
1 12 Q
(Once a) 90 676 T
2 10 Q
(Walker) 126.65 676 T
1 12 Q
( object has been created, a call stack can be w) 162.65 676 T
(alk) 382.12 676 T
(ed with the) 396.66 676 T
2 10 Q
(Walker::walkStack) 108 658.33 T
1 12 Q
(method. The ne) 90 640 T
(w stack w) 164.69 640 T
(alk is returned as a v) 212.56 640 T
(ector of) 311.35 640 T
2 10 Q
(Frame) 351.34 640 T
1 12 Q
( objects.) 381.34 640 T
4 F
(3.3.1 Class W) 72 614 T
(alk) 140.56 614 T
(er) 156.44 614 T
7 10 Q
(Defined In) 72 592.33 T
2 F
(: walker.h) 132 592.33 T
1 12 Q
(The) 90 574 T
2 10 Q
(Walker) 112.22 574 T
1 12 Q
(class) 151.78 574 T
(allo) 178.66 574 T
(ws) 196.36 574 T
(users) 213.26 574 T
(to) 241.47 574 T
(w) 254.37 574 T
(alk) 262.91 574 T
(call) 281.14 574 T
(stacks) 302.02 574 T
(and) 334.91 574 T
(query) 355.8 574 T
(basic) 386.68 574 T
(information) 414.9 574 T
(about) 475.12 574 T
(threads) 505.34 574 T
(in) 72 560 T
(a) 84.72 560 T
(tar) 93.43 560 T
(get) 105.88 560 T
(process.) 123.92 560 T
(The) 166.3 560 T
(user) 188.34 560 T
(should) 211.72 560 T
(create) 247.1 560 T
(a) 279.13 560 T
2 10 Q
(Walker) 287.84 560 T
1 12 Q
(object) 327.23 560 T
(for) 359.94 560 T
(each) 377.32 560 T
(process) 402.68 560 T
(from) 442.06 560 T
(which) 468.77 560 T
(the) 501.48 560 T
(y) 515.96 560 T
(are) 525.35 560 T
(w) 72 546 T
(alking) 80.54 546 T
(call) 113.87 546 T
(stacks.) 134.52 546 T
(Each) 170.18 546 T
2 10 Q
(Walker) 197.49 546 T
1 12 Q
(object) 236.82 546 T
(is) 269.47 546 T
(associated) 280.8 546 T
(with) 333.45 546 T
(one) 358.11 546 T
(process,) 378.76 546 T
(b) 421.07 546 T
(ut) 426.83 546 T
(may) 439.49 546 T
(w) 463.48 546 T
(alk) 472.03 546 T
(call) 490.02 546 T
(stacks) 510.67 546 T
(on) 72 532 T
(multiple) 88 532 T
(threads) 132.01 532 T
(within) 170.67 532 T
(that) 205.34 532 T
(process.) 227.34 532 T
(The) 270.33 532 T
2 10 Q
(Walker) 292.99 532 T
1 12 Q
(class) 333 532 T
(allo) 360.33 532 T
(ws) 378.03 532 T
(users) 395.36 532 T
(to) 424.02 532 T
(query) 437.36 532 T
(for) 468.68 532 T
(the) 486.68 532 T
(threads) 505.34 532 T
(a) 72 518 T
(v) 77.09 518 T
(ailable) 82.79 518 T
(for) 118.24 518 T
(w) 135.69 518 T
(alking,) 144.24 518 T
(and) 180.7 518 T
(it) 201.49 518 T
(allo) 211.62 518 T
(ws) 229.32 518 T
(you) 246.12 518 T
(to) 267.58 518 T
(specify) 280.37 518 T
(a) 318.49 518 T
(particular) 327.28 518 T
(thread) 376.73 518 T
(whose) 410.17 518 T
(call) 444.3 518 T
(stack) 465.08 518 T
(should) 493.21 518 T
(be) 528.67 518 T
(w) 72 504 T
(alk) 80.54 504 T
(ed. Stackw) 95.09 504 T
(alks are returned as a v) 147.62 504 T
(ector of) 257.74 504 T
2 10 Q
(Frame) 297.72 504 T
1 12 Q
( objects.) 327.72 504 T
(Each) 90 488 T
2 10 Q
(Walker) 116.99 488 T
1 12 Q
( object contains three objects:) 152.99 488 T
2 10 Q
(\245) 72 471.33 T
(ProcessState) 90 471.33 T
(\245) 72 455.33 T
(StepperGroup) 90 455.33 T
(\245) 72 439.33 T
(SymbolLookup) 90 439.33 T
1 12 Q
(These) 90 424 T
(objects) 122.64 424 T
(are) 160.63 424 T
(part) 179.27 424 T
(of) 201.91 424 T
(the) 215.9 424 T
(Callback) 234.55 424 T
(Interf) 281.2 424 T
(ace) 307.73 424 T
(and) 327.7 424 T
(can) 349.02 424 T
(be) 369.66 424 T
(used) 384.97 424 T
(to) 410.96 424 T
(customize) 424.28 424 T
(Stackw) 476.93 424 T
(alk) 512.14 424 T
(er-) 526.68 424 T
(API.) 72 410 T
(The) 97.29 410 T
2 10 Q
(ProcessState) 118.9 410 T
1 12 Q
(object) 193.85 410 T
(tells) 226.13 410 T
2 10 Q
(Walker) 249.09 410 T
1 12 Q
(ho) 288.05 410 T
(w) 299.74 410 T
(to) 311.36 410 T
(access) 323.65 410 T
(data) 357.25 410 T
(in) 380.2 410 T
(the) 392.49 410 T
(tar) 410.11 410 T
(get) 422.55 410 T
(process,) 440.17 410 T
(and) 482.11 410 T
(it) 502.39 410 T
(deter-) 512.02 410 T
(mines) 72 396 T
(whether) 105.51 396 T
(this) 149.01 396 T
2 10 Q
(Walker) 171.19 396 T
1 12 Q
(collects) 212.04 396 T
(\336rst) 253.54 396 T
(party) 277.06 396 T
(or) 306.56 396 T
(third) 321.4 396 T
(party) 348.92 396 T
(stackw) 378.42 396 T
(alks.) 411.62 396 T
2 10 Q
(Walker) 438.8 396 T
1 12 Q
(will) 479.65 396 T
(pick) 503.16 396 T
(an) 528.67 396 T
(appropriate) 72 378.8 T
(def) 130.69 378.8 T
(ault) 145.89 378.8 T
2 10 Q
(ProcessState) 167.93 378.8 T
1 12 Q
(object) 248.01 378.8 T
(based) 281.38 378.8 T
(on) 312.75 378.8 T
(which) 328.79 378.8 T
(f) 362.15 378.8 T
(actory) 366.03 378.8 T
(method) 400.06 378.8 T
1 9.6 Q
(1) 436.06 383.6 T
1 12 Q
(the) 444.9 378.8 T
(users) 463.6 378.8 T
(calls.) 492.3 378.8 T
(The) 521.34 378.8 T
2 10 Q
(StepperGroup) 72 364.8 T
1 12 Q
(object) 147.1 364.8 T
(is) 179.52 364.8 T
(used) 190.62 364.8 T
(to) 215.71 364.8 T
(customize) 228.14 364.8 T
(ho) 279.9 364.8 T
(w) 291.6 364.8 T
(the) 303.36 364.8 T
2 10 Q
(Walker) 321.12 364.8 T
1 12 Q
(steps) 360.22 364.8 T
(through) 387.31 364.8 T
(stack) 427.74 364.8 T
(frames.) 455.5 364.8 T
(The) 494.24 364.8 T
2 10 Q
(Sym-) 516 364.8 T
(bolLookup) 72 350.8 T
1 12 Q
(object) 134.65 350.8 T
(is) 168.31 350.8 T
(used) 180.64 350.8 T
(to) 206.96 350.8 T
(customize) 220.62 350.8 T
(ho) 273.61 350.8 T
(w) 285.31 350.8 T
(Stackw) 298.3 350.8 T
(alk) 333.51 350.8 T
(erAPI) 348.05 350.8 T
(looks) 381.04 350.8 T
(up) 411.37 350.8 T
(symbolic) 427.7 350.8 T
(names) 476.03 350.8 T
(of) 511.01 350.8 T
(the) 525.34 350.8 T
(function or object that created a stack frame.) 72 336.8 T
2 10 Q
(static Walker *newWalker\050\051) 72 312.13 T
1 12 Q
(This f) 90 284.8 T
(actory method creates a ne) 118.21 284.8 T
(w) 245.87 284.8 T
2 10 Q
(Walker) 257.53 284.8 T
1 12 Q
( object that performs \336rst party stackw) 293.53 284.8 T
(alks.) 478.72 284.8 T
(The) 90 256.8 T
(ne) 111.98 256.8 T
(w) 123.01 256.8 T
2 10 Q
(Walker) 134.99 256.8 T
1 12 Q
(object) 174.31 256.8 T
(uses) 206.96 256.8 T
(the) 230.94 256.8 T
(def) 248.92 256.8 T
(ault) 264.13 256.8 T
2 10 Q
(StepperGroup) 285.45 256.8 T
1 12 Q
(and) 360.77 256.8 T
2 10 Q
(SymbolLookup) 381.41 256.8 T
1 12 Q
(callbacks) 460.05 256.8 T
(for) 508.02 256.8 T
(the) 525.34 256.8 T
(current) 90 242.8 T
(platform,) 130.43 242.8 T
(and) 181.21 242.8 T
(it) 204.99 242.8 T
(uses) 218.11 242.8 T
(the) 245.22 242.8 T
2 10 Q
(ProcSelf) 266.33 242.8 T
1 12 Q
(callback) 320.78 242.8 T
(for) 367.22 242.8 T
(its) 387.66 242.8 T
2 10 Q
(ProcessState) 405.45 242.8 T
1 12 Q
(object.) 483.89 242.8 T
(See) 522.67 242.8 T
(Section) 90 228.8 T
(3.5.1 for more information about def) 129 228.8 T
(aults in the Callback Interf) 305.18 228.8 T
(ace.) 433.04 228.8 T
(This) 90 200.8 T
(method) 115.41 200.8 T
(returns) 155.48 200.8 T
2 10 Q
(NULL) 192.87 200.8 T
1 12 Q
(if) 220.94 200.8 T
(it) 232.34 200.8 T
(w) 243.09 200.8 T
(as) 251.63 200.8 T
(unable) 265.7 200.8 T
(to) 301.76 200.8 T
(create) 315.16 200.8 T
(a) 347.88 200.8 T
(ne) 357.28 200.8 T
(w) 368.3 200.8 T
2 10 Q
(Walker) 381.04 200.8 T
1 12 Q
(object.) 421.11 200.8 T
(The) 457.51 200.8 T
(ne) 480.24 200.8 T
(w) 491.27 200.8 T
2 10 Q
(Walker) 504 200.8 T
1 12 Q
(object) 90 186.8 T
(w) 122.45 186.8 T
(as) 130.99 186.8 T
(created) 144.11 186.8 T
(with) 181.87 186.8 T
(the) 206.33 186.8 T
2 10 Q
(new) 224.12 186.8 T
1 12 Q
(operator) 245.24 186.8 T
(,) 284.74 186.8 T
(and) 290.86 186.8 T
(should) 311.31 186.8 T
(be) 346.43 186.8 T
(deallocated) 360.88 186.8 T
(with) 418.65 186.8 T
(the) 443.11 186.8 T
2 10 Q
(delete) 460.89 186.8 T
1 12 Q
(operator) 500.02 186.8 T
(when it is no longer needed.) 90 172.8 T
2 10 Q
(static Walker *newWalker\050Dyninst::PID pid\051) 72 146.13 T
72 120 540 135 C
0 0 0 1 0 0 0 1 K
81 133 225 133 2 L
0.5 H
2 Z
0 X
N
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(1.) 90 113.33 T
(\322F) 100 113.33 T
(actory method\323 is a object-oriented design pattern term that describes a method that is responsible for) 109.85 113.33 T
(constructing ne) 102 101.33 T
(w objects. Stackw) 163.13 101.33 T
(alk) 235.52 101.33 T
(erAPI uses f) 247.64 101.33 T
(actory methods to allo) 296.97 101.33 T
(w it to return an error when con-) 385.88 101.33 T
(structing an object. The) 102 89.33 T
2 F
(Walker::newWalker) 198.93 89.33 T
1 F
( methods are the f) 300.93 89.33 T
(actory methods for the) 372.48 89.33 T
2 F
(Walker) 465.24 89.33 T
1 F
(class.) 102 77.33 T
FMENDPAGE
%%EndPage: "8" 9
%%Page: "9" 10
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 9) 513.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(This) 90 712 T
(f) 114.5 712 T
(actory) 118.38 712 T
(method) 151.53 712 T
(creates) 190.69 712 T
(a) 227.17 712 T
(ne) 235.66 712 T
(w) 246.69 712 T
2 10 Q
(Walker) 258.51 712 T
1 12 Q
(object) 297.68 712 T
(that) 330.17 712 T
(performs) 351.33 712 T
(third) 397.82 712 T
(party) 423.65 712 T
(stackw) 451.47 712 T
(alks,) 484.68 712 T
(on) 510.17 712 T
(the) 525.34 712 T
(process identi\336ed by) 90 698 T
2 10 Q
(pid) 192.32 698 T
1 12 Q
(.) 210.32 698 T
(The) 90 670 T
(ne) 111.98 670 T
(w) 123.01 670 T
2 10 Q
(Walker) 134.99 670 T
1 12 Q
(object) 174.31 670 T
(uses) 206.96 670 T
(the) 230.94 670 T
(def) 248.92 670 T
(ault) 264.13 670 T
2 10 Q
(StepperGroup) 285.45 670 T
1 12 Q
(and) 360.77 670 T
2 10 Q
(SymbolLookup) 381.41 670 T
1 12 Q
(callbacks) 460.05 670 T
(for) 508.02 670 T
(the) 525.34 670 T
(current) 90 656 T
(platform,) 130.43 656 T
(and) 181.21 656 T
(it) 204.99 656 T
(uses) 218.11 656 T
(the) 245.22 656 T
2 10 Q
(ProcSelf) 266.33 656 T
1 12 Q
(callback) 320.78 656 T
(for) 367.22 656 T
(its) 387.66 656 T
2 10 Q
(ProcessState) 405.45 656 T
1 12 Q
(object.) 483.89 656 T
(See) 522.67 656 T
(Section) 90 642 T
(3.5.1 for more information about def) 129 642 T
(aults in the Callback Interf) 305.18 642 T
(ace.) 433.04 642 T
(This) 90 614 T
(method) 115.41 614 T
(returns) 155.48 614 T
2 10 Q
(NULL) 192.87 614 T
1 12 Q
(if) 220.94 614 T
(it) 232.34 614 T
(w) 243.09 614 T
(as) 251.63 614 T
(unable) 265.7 614 T
(to) 301.76 614 T
(create) 315.16 614 T
(a) 347.88 614 T
(ne) 357.28 614 T
(w) 368.3 614 T
2 10 Q
(Walker) 381.04 614 T
1 12 Q
(object.) 421.11 614 T
(The) 457.51 614 T
(ne) 480.24 614 T
(w) 491.27 614 T
2 10 Q
(Walker) 504 614 T
1 12 Q
(object) 90 600 T
(w) 122.45 600 T
(as) 130.99 600 T
(created) 144.11 600 T
(with) 181.87 600 T
(the) 206.33 600 T
2 10 Q
(new) 224.12 600 T
1 12 Q
(operator) 245.24 600 T
(,) 284.74 600 T
(and) 290.86 600 T
(should) 311.31 600 T
(be) 346.43 600 T
(deallocated) 360.88 600 T
(with) 418.65 600 T
(the) 443.11 600 T
2 10 Q
(delete) 460.89 600 T
1 12 Q
(operator) 500.02 600 T
(when it is no longer needed.) 90 586 T
2 10 Q
(static Walker *newWalker\050ProcessState *proc,) 72 559.33 T
(StepperGroup *steppergroup = NULL) 108 547.33 T
(,) 306 547.33 T
(SymbolLookup *lookup = NULL\051) 108 535.33 T
1 12 Q
(This) 90 508 T
(f) 115.72 508 T
(actory) 119.6 508 T
(method) 153.97 508 T
(creates) 194.35 508 T
(a) 232.05 508 T
(ne) 241.76 508 T
(w) 252.79 508 T
2 10 Q
(Walker) 265.84 508 T
1 12 Q
(object) 306.22 508 T
(that) 339.93 508 T
(w) 362.32 508 T
(alks) 370.86 508 T
(call) 394.58 508 T
(stacks) 416.29 508 T
(on) 450 508 T
(the) 466.38 508 T
(gi) 485.43 508 T
(v) 494.47 508 T
(en) 500.29 508 T
2 10 Q
(proc) 516 508 T
1 12 Q
(object.) 90 494 T
(Custom) 125.92 494 T
2 10 Q
(StepperGroup) 166.85 494 T
1 12 Q
(and) 242.45 494 T
2 10 Q
(SymbolLookup) 263.36 494 T
1 12 Q
(can) 338.96 494 T
(be) 359.2 494 T
(gi) 374.12 494 T
(v) 383.16 494 T
(en) 388.98 494 T
(with) 403.9 494 T
(the) 428.83 494 T
2 10 Q
(steppergroup) 447.08 494 T
1 12 Q
(and) 522.67 494 T
2 10 Q
(lookup) 90 480 T
1 12 Q
(parameters.) 129.61 480 T
(If) 188.86 480 T
(the) 200.46 480 T
2 10 Q
(steppergroup) 218.73 480 T
1 12 Q
(or) 294.33 480 T
2 10 Q
(lookup) 307.93 480 T
1 12 Q
(parameters) 347.54 480 T
(are) 403.79 480 T
2 10 Q
(NULL) 422.05 480 T
1 12 Q
(,) 446.05 480 T
(then) 452.66 480 T
(Stackw) 476.93 480 T
(alk) 512.14 480 T
(er-) 526.68 480 T
(API) 90 466 T
(will) 114.51 466 T
(create) 138.36 466 T
(a) 172.19 466 T
2 10 Q
(Walker) 182.7 466 T
1 12 Q
(object) 223.88 466 T
(that) 258.38 466 T
(uses) 281.56 466 T
(a) 307.41 466 T
(def) 317.92 466 T
(ault) 333.12 466 T
(callbacks) 356.3 466 T
(for) 406.13 466 T
(the) 425.3 466 T
2 10 Q
(NULL) 445.15 466 T
1 12 Q
(parameter) 474.33 466 T
(,) 521.82 466 T
(as) 530 466 T
(described in Section) 90 452 T
(3.5.1.) 190.32 452 T
(It) 90 424 T
(is) 100.46 424 T
(an) 111.6 424 T
(error) 126.06 424 T
(to) 152.51 424 T
(pass) 164.98 424 T
2 10 Q
(NULL) 188.78 424 T
1 12 Q
(in) 215.91 424 T
(the) 228.38 424 T
2 10 Q
(proc) 246.18 424 T
1 12 Q
(parameter) 273.31 424 T
(.) 320.63 424 T
2 10 Q
(proc) 326.76 424 T
1 12 Q
(is) 353.9 424 T
(used) 365.03 424 T
(to) 390.16 424 T
(determine) 402.63 424 T
(whether) 453.75 424 T
(to) 495.54 424 T
(collect) 508.01 424 T
(\336rst) 90 410 T
(party) 111.82 410 T
(or) 139.62 410 T
(third) 152.76 410 T
(party) 178.57 410 T
(stackw) 206.38 410 T
(alks) 239.58 410 T
(and,) 262.06 410 T
(in) 285.53 410 T
(the) 298.01 410 T
(case) 315.82 410 T
(of) 339.62 410 T
(third) 352.76 410 T
(party) 378.57 410 T
(stackw) 406.38 410 T
(alks,) 439.58 410 T
(identify) 465.06 410 T
(the) 505.54 410 T
(tar-) 523.34 410 T
(get process.) 90 396 T
(This) 90 368 T
(method) 116.08 368 T
(returns) 156.82 368 T
2 10 Q
(NULL) 194.89 368 T
1 12 Q
(if) 223.63 368 T
(there) 235.71 368 T
(w) 264.44 368 T
(as) 272.98 368 T
(an) 287.72 368 T
(error) 303.79 368 T
(creating) 331.85 368 T
(the) 375.25 368 T
(ne) 394.65 368 T
(w) 405.68 368 T
2 10 Q
(Walker) 419.09 368 T
1 12 Q
(object.) 459.83 368 T
(The) 496.9 368 T
(ne) 520.31 368 T
(w) 531.34 368 T
2 10 Q
(Walker) 90 354 T
1 12 Q
(object) 129.4 354 T
(w) 162.14 354 T
(as) 170.68 354 T
(created) 184.08 354 T
(with) 222.13 354 T
(the) 246.88 354 T
2 10 Q
(new) 264.95 354 T
1 12 Q
(operator) 286.35 354 T
(,) 325.85 354 T
(and) 332.26 354 T
(should) 352.99 354 T
(be) 388.4 354 T
(deallocated) 403.14 354 T
(with) 461.19 354 T
(the) 485.93 354 T
2 10 Q
(delete) 504 354 T
1 12 Q
(operator when it is no longer needed.) 90 340 T
2 10 Q
(bool walkStack\050std::vector<Frame> &stackwalk,) 72 313.33 T
( Dyninst::THR_ID thread =) 342 313.33 T
(NULL_THR_ID\051) 72 301.33 T
1 12 Q
(This) 90 274 T
(method) 115.24 274 T
(w) 155.15 274 T
(alks) 163.69 274 T
(a) 186.93 274 T
(call) 196.16 274 T
(stack) 217.4 274 T
(in) 245.96 274 T
(the) 259.21 274 T
(process) 277.78 274 T
(associated) 317.67 274 T
(with) 370.9 274 T
(this) 396.14 274 T
2 10 Q
(Walker) 417.38 274 T
1 12 Q
(.) 452.72 274 T
(The) 459.63 274 T
(call) 482.2 274 T
(stack) 503.43 274 T
(is) 532 274 T
(returned) 90 260 T
(as) 132.84 260 T
(a) 145.7 260 T
(v) 153.88 260 T
(ector) 159.7 260 T
(of) 186.54 260 T
2 10 Q
(Frame) 199.4 260 T
1 12 Q
(objects) 232.26 260 T
(in) 269.11 260 T
2 10 Q
(stackwalk) 281.3 260 T
1 12 Q
(.) 335.3 260 T
(The) 341.16 260 T
(top) 362.68 260 T
(of) 380.87 260 T
(the) 393.72 260 T
(stack) 411.24 260 T
(is) 438.76 260 T
(returned) 449.62 260 T
(in) 492.46 260 T
(inde) 504.66 260 T
(x) 525.14 260 T
2 10 Q
(0) 534 260 T
1 12 Q
(of) 90 246 T
2 10 Q
(stackwalk) 103 246 T
1 12 Q
(, and the bottom of the stack is returned in inde) 157 246 T
(x) 383.12 246 T
2 10 Q
(stackwalk.size\050\051-1) 392.12 246 T
1 12 Q
(.) 500.12 246 T
(A) 90 218 T
(stackw) 102.09 218 T
(alk) 135.3 218 T
(can) 153.39 218 T
(be) 173.48 218 T
(tak) 188.24 218 T
(en) 202.78 218 T
(on) 217.54 218 T
(a) 232.97 218 T
(speci\336c) 241.73 218 T
(thread) 281.82 218 T
(by) 315.23 218 T
(passing) 330.66 218 T
(a) 370.09 218 T
(v) 378.85 218 T
(alue) 384.55 218 T
(in) 407.97 218 T
(the) 420.74 218 T
2 10 Q
(thread) 438.83 218 T
1 12 Q
(parameter) 478.26 218 T
(.) 525.58 218 T
(If) 532.01 218 T
2 10 Q
(thread) 90 204 T
1 12 Q
(has) 129.28 204 T
(the) 148.55 204 T
(v) 166.49 204 T
(alue) 172.19 204 T
2 10 Q
(NULL_THR_ID) 195.46 204 T
1 12 Q
(,) 261.46 204 T
(then) 267.74 204 T
(a) 291.68 204 T
(def) 300.28 204 T
(ault) 315.49 204 T
(thread) 336.76 204 T
(will) 370.03 204 T
(be) 391.98 204 T
(chosen.) 406.58 204 T
(When) 446.18 204 T
(doing) 478.11 204 T
(a) 508.73 204 T
(third) 517.33 204 T
(party) 90 190 T
(stackw) 117.75 190 T
(alk,) 150.95 190 T
(the) 171.7 190 T
(def) 189.46 190 T
(ault) 204.66 190 T
(thread) 225.75 190 T
(will) 258.82 190 T
(be) 280.58 190 T
(the) 295 190 T
(process\325) 312.75 190 T
(initial) 355.82 190 T
(thread.) 386.92 190 T
(When) 422.99 190 T
(doing) 454.74 190 T
(a) 485.16 190 T
(\336rst) 493.58 190 T
(party) 515.34 190 T
(stackw) 90 176 T
(alk, the def) 123.2 176 T
(ault thread will be the thread that called) 176.74 176 T
2 10 Q
(walkStack) 370.03 176 T
1 12 Q
(.) 424.03 176 T
(This method returns) 90 148 T
2 10 Q
(true) 189.66 148 T
1 12 Q
( on success and) 213.66 148 T
2 10 Q
(false) 290.98 148 T
1 12 Q
( on f) 320.98 148 T
(ailure.) 342.85 148 T
2 10 Q
(bool walkStackFromFrame\050std::vector<Frame> &stackwalk, const Frame &frame\051) 72 121.33 T
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 11
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 10) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(This) 90 712 T
(method) 114.42 712 T
(w) 153.5 712 T
(alks) 162.05 712 T
(a) 184.46 712 T
(call) 192.87 712 T
(stack) 213.28 712 T
(starting) 241.03 712 T
(from) 280.11 712 T
(the) 306.52 712 T
(gi) 324.27 712 T
(v) 333.3 712 T
(en) 339.12 712 T
(stack) 353.54 712 T
(frame,) 381.28 712 T
2 10 Q
(frame) 415.35 712 T
1 12 Q
(.) 445.35 712 T
(The) 451.43 712 T
(call) 473.17 712 T
(stack) 493.58 712 T
(will) 521.33 712 T
(be) 90 698 T
(output) 104.85 698 T
(in) 139.04 698 T
(the) 151.9 698 T
2 10 Q
(stackwalk) 170.09 698 T
1 12 Q
(v) 231.13 698 T
(ector) 236.95 698 T
(,) 260.46 698 T
(with) 266.98 698 T
2 10 Q
(frame) 291.84 698 T
1 12 Q
(stored) 325.36 698 T
(in) 358.21 698 T
(inde) 371.07 698 T
(x) 391.55 698 T
2 10 Q
(0) 401.07 698 T
1 12 Q
(of) 410.59 698 T
2 10 Q
(stackwalk) 424.11 698 T
1 12 Q
(and) 481.63 698 T
(the) 502.48 698 T
(bot-) 520.67 698 T
(tom of the stack stored in inde) 90 684 T
(x) 235.14 684 T
2 10 Q
(stackwalk.size\050\051-1.) 244.14 684 T
1 12 Q
(This method returns) 90 656 T
2 10 Q
(true) 189.66 656 T
1 12 Q
( on success and) 213.66 656 T
2 10 Q
(false) 290.98 656 T
1 12 Q
( on f) 320.98 656 T
(ailure.) 342.85 656 T
2 10 Q
(bool walkSingleFrame\050const Frame &in, Frame &out\051) 72 629.33 T
1 12 Q
(This methods w) 90 602 T
(alks through single frame,) 166.55 602 T
2 10 Q
(in) 294.86 602 T
1 12 Q
(. P) 306.86 602 T
(arameter) 319.36 602 T
2 10 Q
(out) 364.33 602 T
1 12 Q
( will be set to) 382.33 602 T
2 10 Q
(in) 450 602 T
1 12 Q
(\325) 462 602 T
(s caller frame.) 465.34 602 T
(This method returns) 90 574 T
2 10 Q
(true) 189.66 574 T
1 12 Q
( on success and) 213.66 574 T
2 10 Q
(false) 290.98 574 T
1 12 Q
( on error) 320.98 574 T
(.) 361.63 574 T
2 10 Q
(bool getInitialFrame\050Frame &frame, Dyninst::THR_ID thread = NULL_THR_ID\051) 72 547.33 T
1 12 Q
(This) 90 520 T
(method) 114.07 520 T
(returns) 152.8 520 T
(the) 188.86 520 T
2 10 Q
(Frame) 206.26 520 T
1 12 Q
(object) 238.99 520 T
(on) 271.05 520 T
(the) 285.78 520 T
(top) 303.18 520 T
(of) 321.25 520 T
(the) 333.98 520 T
(stack) 351.38 520 T
(in) 378.77 520 T
(parameter) 390.84 520 T
2 10 Q
(frame) 441.55 520 T
1 12 Q
(.) 471.55 520 T
(Under) 477.28 520 T
2 10 Q
(walk-) 510 520 T
(Stack,) 90 506 T
(frame) 129 506 T
1 12 Q
( w) 159 506 T
(ould be the one returned in inde) 170.54 506 T
(x 0 of the) 323 506 T
2 10 Q
(stackwalk) 371.66 506 T
1 12 Q
( v) 425.66 506 T
(ector) 434.48 506 T
(.) 457.81 506 T
(A) 90 478 T
(stack) 101.52 478 T
(frame) 129.04 478 T
(can) 159.88 478 T
(be) 179.39 478 T
(found) 193.57 478 T
(on) 224.42 478 T
(a) 239.28 478 T
(speci\336c) 247.46 478 T
(thread) 286.98 478 T
(by) 319.82 478 T
(passing) 334.68 478 T
(a) 373.54 478 T
(v) 381.72 478 T
(alue) 387.42 478 T
(in) 410.27 478 T
(the) 422.46 478 T
2 10 Q
(thread) 439.98 478 T
1 12 Q
(parameter) 478.83 478 T
(.) 526.15 478 T
(If) 532.01 478 T
2 10 Q
(thread) 90 464 T
1 12 Q
(has) 129.28 464 T
(the) 148.55 464 T
(v) 166.49 464 T
(alue) 172.19 464 T
2 10 Q
(NULL_THR_ID) 195.46 464 T
1 12 Q
(,) 261.46 464 T
(then) 267.74 464 T
(a) 291.68 464 T
(def) 300.28 464 T
(ault) 315.49 464 T
(thread) 336.76 464 T
(will) 370.03 464 T
(be) 391.98 464 T
(chosen.) 406.58 464 T
(When) 446.18 464 T
(doing) 478.11 464 T
(a) 508.73 464 T
(third) 517.33 464 T
(party) 90 450 T
(stackw) 117.75 450 T
(alk,) 150.95 450 T
(the) 171.7 450 T
(def) 189.46 450 T
(ault) 204.66 450 T
(thread) 225.75 450 T
(will) 258.82 450 T
(be) 280.58 450 T
(the) 295 450 T
(process\325) 312.75 450 T
(initial) 355.82 450 T
(thread.) 386.92 450 T
(When) 422.99 450 T
(doing) 454.74 450 T
(a) 485.16 450 T
(\336rst) 493.58 450 T
(party) 515.34 450 T
(stackw) 90 436 T
(alk, the def) 123.2 436 T
(ault thread will be the thread that called) 176.74 436 T
2 10 Q
(getInitialFrame) 370.03 436 T
1 12 Q
(.) 460.03 436 T
(This method returns) 90 408 T
2 10 Q
(true) 189.66 408 T
1 12 Q
( on success and) 213.66 408 T
2 10 Q
(false) 290.98 408 T
1 12 Q
( on f) 320.98 408 T
(ailure.) 342.85 408 T
2 10 Q
(bool getAvailableThreads\050std::vector<Dyninst::THR_ID> &threads\051) 72 381.33 T
1 12 Q
(This) 90 354 T
(method) 114.48 354 T
(returns) 153.63 354 T
(a) 190.1 354 T
(v) 198.58 354 T
(ector) 204.4 354 T
(of) 231.53 354 T
(threads) 244.68 354 T
(in) 282.48 354 T
(the) 294.96 354 T
(tar) 312.77 354 T
(get) 325.22 354 T
(process) 343.03 354 T
(upon) 382.17 354 T
(which) 409.31 354 T
(Stackw) 441.79 354 T
(alk) 477 354 T
(erAPI) 491.54 354 T
(can) 523.34 354 T
(w) 90 340 T
(alk) 98.54 340 T
(call) 116.18 340 T
(stacks.) 136.47 340 T
(The) 171.76 340 T
(threads) 193.39 340 T
(are) 231.01 340 T
(returned) 248.63 340 T
(in) 291.58 340 T
(output) 303.88 340 T
(parameter) 337.52 340 T
2 10 Q
(threads) 388.47 340 T
1 12 Q
(.) 430.47 340 T
(Note) 436.43 340 T
(that) 462.73 340 T
(this) 483.69 340 T
(method) 504 340 T
(may) 90 326 T
(return) 113.37 326 T
(a) 144.72 326 T
(subset) 152.76 326 T
(of) 185.46 326 T
(the) 198.15 326 T
(actual) 215.52 326 T
(threads) 246.88 326 T
(in) 284.24 326 T
(the) 296.28 326 T
(process.) 313.64 326 T
(F) 355.33 326 T
(or) 361.83 326 T
(e) 374.52 326 T
(xample,) 379.67 326 T
(when) 420.7 326 T
(w) 449.39 326 T
(alking) 457.94 326 T
(call) 490.64 326 T
(stacks) 510.67 326 T
(on) 90 312 T
(the) 104.88 312 T
(current) 122.42 312 T
(process,) 159.28 312 T
(it) 201.14 312 T
(is) 210.69 312 T
(only) 221.57 312 T
(le) 245.78 312 T
(g) 254.26 312 T
(al) 260.2 312 T
(to) 271.74 312 T
(w) 283.96 312 T
(alk) 292.5 312 T
(the) 310.04 312 T
(call) 327.58 312 T
(stack) 347.78 312 T
(on) 375.32 312 T
(the) 390.2 312 T
(currently) 407.74 312 T
(running) 453.93 312 T
(thread.) 494.14 312 T
(In) 530 312 T
(this case,) 90 298 T
2 10 Q
(getAvailableThreads) 136.99 298 T
1 12 Q
( returns a v) 250.99 298 T
(ector containing only the current thread.) 304.46 298 T
(This method returns) 90 270 T
2 10 Q
(true) 189.66 270 T
1 12 Q
( on success and) 213.66 270 T
2 10 Q
(false) 290.98 270 T
1 12 Q
( on f) 320.98 270 T
(ailure.) 342.85 270 T
2 10 Q
(ProcessState *getProcessState\050\051 const) 72 243.33 T
1 12 Q
(This method returns the) 90 216 T
2 10 Q
(ProcessState) 207.32 216 T
1 12 Q
( object associated with this) 279.32 216 T
2 10 Q
(Walker) 411.65 216 T
1 12 Q
(.) 446.99 216 T
2 10 Q
(StepperGroup *getStepperGroup\050\051 const) 72 189.33 T
1 12 Q
(This method returns the) 90 162 T
2 10 Q
(StepperGroup) 207.32 162 T
1 12 Q
( object associated with this) 279.32 162 T
2 10 Q
(Walker) 411.65 162 T
1 12 Q
(.) 446.99 162 T
2 10 Q
(SymbolLookup *getSymbolLookup\050\051 const) 72 135.33 T
1 12 Q
(This method returns the) 90 108 T
2 10 Q
(SymbolLookup) 207.32 108 T
1 12 Q
( object associated with this) 279.32 108 T
2 10 Q
(Walker) 411.65 108 T
1 12 Q
(.) 446.99 108 T
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 12
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 11) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 12 Q
(3.3.2 Class Frame) 72 712 T
7 10 Q
(Defined In) 72 690.33 T
2 F
(: frame.h) 132 690.33 T
1 12 Q
(The) 90 672 T
2 10 Q
(Walker) 115.37 672 T
1 12 Q
(class) 158.07 672 T
(returns) 188.11 672 T
(a) 228.14 672 T
(call) 240.17 672 T
(stack) 264.21 672 T
(as) 295.57 672 T
(a) 312.27 672 T
(v) 324.31 672 T
(ector) 330.13 672 T
(of) 360.82 672 T
2 10 Q
(Frame) 377.53 672 T
1 12 Q
(objects.) 414.23 672 T
(As) 457.93 672 T
(described) 477.97 672 T
(in) 530.66 672 T
(Section) 72 658 T
(3.3.1,) 111 658 T
(each) 142.32 658 T
2 10 Q
(Frame) 168.62 658 T
1 12 Q
(object) 202.93 658 T
(represents) 236.58 658 T
(a) 289.54 658 T
(stack) 299.19 658 T
(frame,) 328.16 658 T
(and) 363.46 658 T
(contains) 385.11 658 T
(a) 429.42 658 T
(return) 439.06 658 T
(address) 472.04 658 T
(\050RA\051,) 512.34 658 T
(stack) 72 644 T
(pointer) 100.01 644 T
(\050SP\051) 137.36 644 T
(and) 162.05 644 T
(frame) 182.74 644 T
(pointer) 214.07 644 T
(\050FP\051.) 251.42 644 T
(F) 279.11 644 T
(or) 285.61 644 T
(each) 298.96 644 T
(of) 324.29 644 T
(these) 337.64 644 T
(v) 365.66 644 T
(alues,) 371.36 644 T
(optionally) 402.37 644 T
(,) 450.26 644 T
(it) 456.62 644 T
(stores) 466.64 644 T
(the) 497.99 644 T
(loca-) 516.01 644 T
(tion) 72 630 T
(where) 93.96 630 T
(the) 126.57 630 T
(v) 144.53 630 T
(alues) 150.23 630 T
(were) 178.18 630 T
(found.) 204.79 630 T
(Each) 239.08 630 T
2 10 Q
(Frame) 266.36 630 T
1 12 Q
(object) 299.65 630 T
(may) 332.27 630 T
(also) 356.22 630 T
(be) 378.85 630 T
(augmented) 393.47 630 T
(with) 449.42 630 T
(symbol) 474.04 630 T
(infor-) 512.68 630 T
(mation) 72 616 T
(gi) 108.92 616 T
(ving) 117.96 616 T
(a) 142.88 616 T
(function) 151.79 616 T
(name) 195.38 616 T
(\050or) 224.95 616 T
(a) 242.53 616 T
(symbolic) 251.44 616 T
(name,) 299.03 616 T
(in) 331.61 616 T
(the) 344.53 616 T
(case) 362.78 616 T
(of) 387.02 616 T
(non-functions\051) 400.6 616 T
(for) 474.84 616 T
(the) 492.42 616 T
(object) 510.67 616 T
(that created the stack frame.) 72 602 T
(The) 90 586 T
2 10 Q
(Frame) 111.86 586 T
1 12 Q
(class) 145.06 586 T
(pro) 171.59 586 T
(vides) 187.41 586 T
(a) 215.94 586 T
(set) 224.47 586 T
(of) 241.01 586 T
(functions) 254.21 586 T
(\050) 302.07 586 T
2 10 Q
(getRALocation) 306.07 586 T
1 12 Q
(,) 384.07 586 T
2 10 Q
(getSPLocation) 390.27 586 T
1 12 Q
(and) 471.47 586 T
2 10 Q
(getFPLo-) 492 586 T
(cation) 72 572 T
1 12 Q
(\051) 108 572 T
(that) 115.61 572 T
(return) 137.22 572 T
(the) 169.49 572 T
(location) 187.77 572 T
(in) 230.04 572 T
(the) 242.99 572 T
(tar) 261.27 572 T
(get) 273.71 572 T
(process\325) 291.99 572 T
(memory) 335.59 572 T
(or) 379.2 572 T
(re) 392.8 572 T
(gisters) 401.95 572 T
(where) 436.89 572 T
(the) 469.82 572 T
(RA,) 488.1 572 T
(SP) 511.38 572 T
(,) 523.39 572 T
(or) 530 572 T
(FP) 72 558 T
(were) 88.99 558 T
(found.) 115.96 558 T
(These) 150.6 558 T
(functions) 182.91 558 T
(may) 231.22 558 T
(be) 255.54 558 T
(used) 270.52 558 T
(to) 296.16 558 T
(modify) 309.15 558 T
(the) 347.46 558 T
(stack.) 365.78 558 T
(F) 397.09 558 T
(or) 403.58 558 T
(e) 417.23 558 T
(xample,) 422.37 558 T
(the) 464.35 558 T
(DyninstAPI) 482.66 558 T
(uses) 72 544 T
(these) 96.07 544 T
(functions) 124.13 544 T
(to) 172.19 544 T
(change) 184.93 544 T
(return) 222.31 544 T
(addresses) 254.37 544 T
(on) 303.76 544 T
(the) 319.16 544 T
(stack) 337.22 544 T
(when) 365.28 544 T
(it) 394.68 544 T
(relocates) 404.75 544 T
(code.) 450.8 544 T
(The) 479.86 544 T
(RA,) 501.92 544 T
(SP) 524.99 544 T
(,) 537 544 T
(and FP may be found in a re) 72 530 T
(gister or in a memory address on a call stack.) 207.47 530 T
2 10 Q
(static Frame *newFrame\050regvalue_t ra, regvalue_t sp, regvalue_t fp,) 72 505.33 T
(Walker *walker\051) 108 493.33 T
1 12 Q
(This) 90 466 T
(method) 115.07 466 T
(creates) 154.81 466 T
(a) 191.85 466 T
(ne) 200.92 466 T
(w) 211.95 466 T
2 10 Q
(Frame) 224.34 466 T
1 12 Q
(object) 258.08 466 T
(and) 291.14 466 T
(sets) 312.21 466 T
(the) 333.94 466 T
(mandatory) 352.34 466 T
(data) 407.4 466 T
(members:) 431.13 466 T
(RA,) 482.19 466 T
(SP) 505.59 466 T
(and) 522.67 466 T
(FP) 90 452 T
(. The ne) 102.01 452 T
(w) 140.7 452 T
2 10 Q
(Frame) 152.36 452 T
1 12 Q
( object is associated with the) 182.36 452 T
2 10 Q
(walker) 323.02 452 T
1 12 Q
(.) 358.36 452 T
(The optional location \336elds can be set by the methods belo) 90 424 T
(w) 371.68 424 T
(.) 379.56 424 T
(The) 90 396 T
(ne) 112.57 396 T
(w) 123.6 396 T
2 10 Q
(Frame) 136.17 396 T
1 12 Q
(object) 170.08 396 T
(is) 203.31 396 T
(created) 215.23 396 T
(with) 253.78 396 T
(the) 279.02 396 T
2 10 Q
(new) 297.59 396 T
1 12 Q
(operator) 319.5 396 T
(,) 359.01 396 T
(and) 365.91 396 T
(the) 387.15 396 T
(user) 405.72 396 T
(should) 429.62 396 T
(be) 465.54 396 T
(deallocate) 480.77 396 T
(it) 533.33 396 T
(with the) 90 382 T
2 10 Q
(delete) 132 382 T
1 12 Q
( operator when it is no longer needed.) 168 382 T
2 10 Q
(regvalue_t getRA\050\051 const) 72 355.33 T
1 12 Q
(This method returns this) 90 328 T
2 10 Q
(Frame) 210 328 T
1 12 Q
( object\325) 240 328 T
(s return address.) 275.66 328 T
2 10 Q
(void setRA\050regvalue_t val\051) 72 301.33 T
1 12 Q
(This method sets this) 90 274 T
2 10 Q
(Frame) 194.68 274 T
1 12 Q
( object\325) 224.68 274 T
(s return address to) 260.34 274 T
2 10 Q
(val) 350.99 274 T
1 12 Q
(.) 368.99 274 T
2 10 Q
(regvalue_t getSP\050\051 const) 72 247.33 T
1 12 Q
(This method returns this) 90 220 T
2 10 Q
(Frame) 210 220 T
1 12 Q
( object\325) 240 220 T
(s stack pointer) 275.66 220 T
(.) 344.33 220 T
2 10 Q
(void setSP\050regvalue_t val\051) 72 193.33 T
1 12 Q
(This method sets this) 90 166 T
2 10 Q
(Frame) 194.68 166 T
1 12 Q
( object\325) 224.68 166 T
(s stack pointer to) 260.34 166 T
2 10 Q
(val) 345 166 T
1 12 Q
(.) 363 166 T
2 10 Q
(regvalue_t getFP\050\051 const) 72 139.33 T
1 12 Q
(This method returns this) 90 112 T
2 10 Q
(Frame) 210 112 T
1 12 Q
( object\325) 240 112 T
(s frame pointer) 275.66 112 T
(.) 347.65 112 T
2 10 Q
(void setFP\050regvalue_t val\051) 72 85.33 T
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 13
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 12) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(This method sets this) 90 712 T
2 10 Q
(Frame) 194.68 712 T
1 12 Q
( object\325) 224.68 712 T
(s frame pointer to) 260.34 712 T
2 10 Q
(val) 348.32 712 T
1 12 Q
(.) 366.32 712 T
2 10 Q
(typedef enum { loc_address, loc_register, loc_unknown } storage_t;) 72 685.33 T
(typedef struct {) 72 673.33 T
(union {) 108 661.33 T
(address addr;) 144 649.33 T
(Dyninst::MachRegister reg;) 144 637.33 T
(} val;) 108 625.33 T
(storage_t location;) 108 613.33 T
(} location_t;) 72 601.33 T
1 12 Q
(The) 90 574 T
2 10 Q
(location_t) 112 574 T
1 12 Q
(structure) 175.33 574 T
(is) 220.66 574 T
(used) 232 574 T
(by) 257.33 574 T
(the) 272.66 574 T
2 10 Q
(getRALocation) 290.66 574 T
1 12 Q
(,) 368.66 574 T
2 10 Q
(getSPLocation) 375 574 T
1 12 Q
(,) 453 574 T
(and) 459.34 574 T
2 10 Q
(getFPLoca-) 480 574 T
(tion) 90 560 T
1 12 Q
(methods) 117.86 560 T
(to) 162.38 560 T
(describe) 175.58 560 T
(where) 219.42 560 T
(in) 252.59 560 T
(the) 265.78 560 T
(process) 284.3 560 T
(a) 324.15 560 T
2 10 Q
(Frame) 333.33 560 T
1 12 Q
(object\325) 367.19 560 T
(s) 399.86 560 T
(RA,) 408.38 560 T
(SP) 431.91 560 T
(,) 443.92 560 T
(or) 450.78 560 T
(FP) 464.63 560 T
(were) 481.83 560 T
(found.) 509 560 T
(When) 90 546 T
(w) 122.82 546 T
(alking) 131.37 546 T
(a) 165.53 546 T
(call) 175.03 546 T
(stack) 196.52 546 T
(these) 225.35 546 T
(v) 254.17 546 T
(alues) 259.87 546 T
(may) 288.7 546 T
(be) 313.53 546 T
(found) 329.02 546 T
(in) 361.19 546 T
(re) 374.69 546 T
(gisters) 383.83 546 T
(or) 419.33 546 T
(memory) 433.49 546 T
(.) 472.71 546 T
(If) 479.88 546 T
(the) 492.03 546 T
(y) 506.52 546 T
(were) 516.68 546 T
(found) 90 532 T
(in) 121.11 532 T
(memory) 133.56 532 T
(,) 172.77 532 T
(the) 178.89 532 T
2 10 Q
(location) 196.66 532 T
1 12 Q
(\336eld) 247.77 532 T
(of) 272.22 532 T
2 10 Q
(location_t) 285.33 532 T
1 12 Q
(will) 348.45 532 T
(contain) 370.23 532 T
2 10 Q
(loc_address) 408.67 532 T
1 12 Q
(and) 477.78 532 T
(the) 498.22 532 T
2 10 Q
(addr) 516 532 T
1 12 Q
(\336eld) 90 518 T
(will) 115.07 518 T
(contain) 137.49 518 T
(the) 176.55 518 T
(address) 194.96 518 T
(where) 234.68 518 T
(it) 267.74 518 T
(w) 278.15 518 T
(as) 286.69 518 T
(found.) 300.43 518 T
(If) 335.16 518 T
(the) 346.89 518 T
(y) 361.38 518 T
(were) 371.12 518 T
(found) 398.17 518 T
(in) 429.91 518 T
(a) 442.98 518 T
(re) 452.05 518 T
(gister) 461.19 518 T
(the) 491.6 518 T
2 10 Q
(loca-) 510 518 T
(tion) 90 504 T
1 12 Q
(\336eld) 116.99 504 T
(of) 141.32 504 T
2 10 Q
(location_t) 154.31 504 T
1 12 Q
(will) 217.3 504 T
(contain) 238.96 504 T
2 10 Q
(loc_register) 277.28 504 T
1 12 Q
(and) 352.28 504 T
(the) 372.6 504 T
2 10 Q
(reg) 390.25 504 T
1 12 Q
(\336eld) 411.24 504 T
(will) 435.57 504 T
(refer) 457.24 504 T
(to) 482.87 504 T
(the) 495.2 504 T
(re) 512.86 504 T
(gis-) 522 504 T
(ter) 90 490 T
(where) 108.21 490 T
(it) 143.07 490 T
(w) 155.29 490 T
(as) 163.84 490 T
(found.) 179.38 490 T
(If) 215.93 490 T
(this) 229.47 490 T
2 10 Q
(Frame) 252.35 490 T
1 12 Q
(object) 287.9 490 T
(w) 322.78 490 T
(as) 331.32 490 T
(not) 346.87 490 T
(created) 367.75 490 T
(by) 407.95 490 T
(a) 425.49 490 T
(stackw) 436.37 490 T
(alk) 469.58 490 T
(\050using) 489.79 490 T
(the) 525.34 490 T
2 10 Q
(newframe) 90 476 T
1 12 Q
(f) 142 476 T
(actory) 145.88 476 T
(method,) 179.87 476 T
(for) 222.87 476 T
(e) 240.87 476 T
(xample\051,) 246.01 476 T
(and) 292.34 476 T
(has) 313.67 476 T
(not) 333.67 476 T
(had) 353.01 476 T
(a) 374.34 476 T
(set) 383.67 476 T
(location) 401.01 476 T
(method) 443.67 476 T
(called,) 483.68 476 T
(then) 519.34 476 T
(location will contain) 90 462 T
2 10 Q
(loc_unknown) 191.66 462 T
1 12 Q
(.) 257.66 462 T
2 10 Q
(location_t getRALocation\050\051 const) 72 435.33 T
1 12 Q
(This method returns a) 90 408 T
2 10 Q
(location_t) 197.99 408 T
1 12 Q
( describing where the RA w) 257.99 408 T
(as found.) 392.17 408 T
2 10 Q
(void setRALocation\050location_t newval\051) 72 381.33 T
1 12 Q
(This method sets the location of where the RA w) 90 354 T
(as found to) 324.85 354 T
2 10 Q
(newval) 381.18 354 T
1 12 Q
(.) 417.18 354 T
2 10 Q
(location_t getSPLocation\050\051 const) 72 327.33 T
1 12 Q
(This method returns a) 90 300 T
2 10 Q
(location_t) 197.99 300 T
1 12 Q
( describing where the SP w) 257.99 300 T
(as found.) 388.85 300 T
2 10 Q
(void setSPLocation\050location_t newval\051) 72 273.33 T
1 12 Q
(This method sets the location of where the SP w) 90 246 T
(as found to) 321.53 246 T
2 10 Q
(newval) 377.86 246 T
1 12 Q
(.) 413.86 246 T
2 10 Q
(location_t getFPLocation\050\051 const) 72 219.33 T
1 12 Q
(This method returns a) 90 192 T
2 10 Q
(location_t) 197.99 192 T
1 12 Q
( describing where the FP w) 257.99 192 T
(as found.) 388.85 192 T
2 10 Q
(void setFPLocation\050location_t newval\051) 72 165.33 T
1 12 Q
(This method sets the location of where the FP w) 90 138 T
(as found to) 321.53 138 T
2 10 Q
(newval) 377.86 138 T
1 12 Q
(.) 413.86 138 T
2 10 Q
(bool getName\050std::string &str\051) 72 111.33 T
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 14
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 13) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(This) 90 712 T
(method) 115.03 712 T
(returns) 154.73 712 T
(a) 191.75 712 T
(stack) 200.78 712 T
(frame\325) 229.14 712 T
(s) 260.46 712 T
(symbolic) 268.82 712 T
(name.) 316.52 712 T
(Most) 349.21 712 T
(stack) 377.58 712 T
(frames) 405.94 712 T
(are) 442.29 712 T
(created) 460.64 712 T
(by) 498.98 712 T
(func-) 514.68 712 T
(tions,) 90 698 T
(or) 119.4 698 T
(function-lik) 132.45 698 T
(e) 189 698 T
(objects) 197.38 698 T
(such) 234.44 698 T
(as) 259.5 698 T
(signal) 272.55 698 T
(handlers) 304.28 698 T
(or) 347.99 698 T
(system) 361.05 698 T
(calls.) 397.44 698 T
(This) 425.5 698 T
(method) 449.89 698 T
(returns) 488.95 698 T
(the) 525.34 698 T
(name) 90 684 T
(of) 120.32 684 T
(the) 134.65 684 T
(object) 153.64 684 T
(that) 187.3 684 T
(created) 209.63 684 T
(this) 248.6 684 T
(stack) 270.27 684 T
(frame.) 299.26 684 T
(F) 334.57 684 T
(or) 341.07 684 T
(stack) 355.39 684 T
(frames) 384.38 684 T
(create) 421.36 684 T
(by) 454.34 684 T
(functions,) 470.67 684 T
(this) 522.66 684 T
(symbolic) 90 670 T
(name) 137.37 670 T
(will) 166.73 670 T
(be) 188.77 670 T
(the) 203.46 670 T
(function) 221.5 670 T
(name.) 264.86 670 T
(A) 297.22 670 T
(symbolic) 309.25 670 T
(name) 356.62 670 T
(may) 385.98 670 T
(not) 410.01 670 T
(al) 428.71 670 T
(w) 437.26 670 T
(ays) 445.8 670 T
(be) 465.17 670 T
(a) 479.86 670 T
(v) 484.95 670 T
(ailable) 490.65 670 T
(for) 526.01 670 T
(all) 90 656 T
2 10 Q
(Frame) 105 656 T
1 12 Q
( objects, such as in cases of stripped binaries or special stack frames types.) 135 656 T
(The) 90 628 T
(function) 111.46 628 T
(name) 154.26 628 T
(is) 183.05 628 T
(obtained) 193.86 628 T
(by) 237.99 628 T
(using) 252.79 628 T
(this) 281.6 628 T
2 10 Q
(Frame) 301.74 628 T
1 12 Q
(object\325) 334.54 628 T
(s) 367.2 628 T
(RA) 374.67 628 T
(to) 394.14 628 T
(call) 406.28 628 T
(the) 426.41 628 T
2 10 Q
(SymbolLookup) 443.87 628 T
1 12 Q
(call-) 518.68 628 T
(back.) 90 614 T
(By) 118.57 614 T
(def) 135.48 614 T
(ault) 150.68 614 T
(Stackw) 171.59 614 T
(alk) 206.8 614 T
(erAPI) 221.35 614 T
(will) 252.91 614 T
(attempt) 274.49 614 T
(to) 313.4 614 T
(use) 325.65 614 T
(the) 344.56 614 T
(DynSymtab) 362.13 614 T
(package) 422.38 614 T
(to) 464.6 614 T
(look) 476.84 614 T
(up) 501.09 614 T
(sym-) 516 614 T
(bol) 90 600 T
(names) 108.56 600 T
(in) 142.45 600 T
(binaries.) 155.01 600 T
(If) 199.23 600 T
(DynSymtab) 210.45 600 T
(is) 271.02 600 T
(not) 282.25 600 T
(found,) 300.81 600 T
(and) 335.03 600 T
(no) 355.59 600 T
(alternati) 370.81 600 T
(v) 409.84 600 T
(e) 415.66 600 T
2 10 Q
(SymbolLookup) 424.21 600 T
1 12 Q
(object) 499.44 600 T
(is) 532 600 T
(present, then this method will return an error) 90 586 T
(.) 303.97 586 T
(This method returns) 90 558 T
2 10 Q
(true) 189.66 558 T
1 12 Q
( on success and) 213.66 558 T
2 10 Q
(false) 290.98 558 T
1 12 Q
( on error) 320.98 558 T
(.) 361.63 558 T
2 10 Q
(bool getObject\050void* &obj\051) 72 531.33 T
1 12 Q
(In) 90 504 T
(addition) 103.93 504 T
(to) 147.19 504 T
(returning) 160.46 504 T
(a) 208.38 504 T
(symbolic) 217.63 504 T
(name) 265.57 504 T
(\050see) 295.49 504 T
2 10 Q
(getName) 318.74 504 T
1 12 Q
(\051) 360.74 504 T
(the) 368.66 504 T
2 10 Q
(SymbolLookup) 387.25 504 T
1 12 Q
(interf) 463.18 504 T
(ace) 489.05 504 T
(allo) 508.97 504 T
(ws) 526.67 504 T
(for) 90 490 T
(an) 108.64 490 T
(opaque) 124.62 490 T
(object,) 163.93 490 T
(a) 200.9 490 T
2 10 Q
(void*) 210.88 490 T
1 12 Q
(,) 240.88 490 T
(to) 248.53 490 T
(be) 262.52 490 T
(associated) 278.5 490 T
(with) 332.47 490 T
(a) 358.45 490 T
2 10 Q
(Frame) 368.43 490 T
1 12 Q
(object.) 403.08 490 T
(The) 440.06 490 T
(contents) 463.37 490 T
(of) 508.01 490 T
(this) 522.66 490 T
2 10 Q
(void*) 90 476 T
1 12 Q
(is) 122.78 476 T
(determined) 133.57 476 T
(by) 190.34 476 T
(the) 205.12 476 T
2 10 Q
(SymbolLookup) 222.56 476 T
1 12 Q
(implementation.) 297.35 476 T
(Under) 378.46 476 T
(the) 411.23 476 T
(def) 428.68 476 T
(ault) 443.88 476 T
(implementation) 464.66 476 T
(that) 90 462 T
(uses) 110.83 462 T
(DynSymtab,) 134.33 462 T
(the) 197.5 462 T
2 10 Q
(void*) 215 462 T
1 12 Q
(points) 247.83 462 T
(to) 280.01 462 T
(a) 292.17 462 T
2 10 Q
(Dyn_Symbol) 300.34 462 T
1 12 Q
(object) 363.17 462 T
(or) 395.33 462 T
2 10 Q
(NULL) 408.16 462 T
1 12 Q
(if) 434.99 462 T
(no) 445.16 462 T
(symbol) 459.99 462 T
(is) 498.17 462 T
(found.) 509 462 T
(This method returns) 90 434 T
2 10 Q
(true) 189.66 434 T
1 12 Q
( on success and) 213.66 434 T
2 10 Q
(false) 290.98 434 T
1 12 Q
( on error) 320.98 434 T
(.) 361.63 434 T
2 10 Q
(bool getStepper\050FrameStepper* &stepper\051 const) 72 407.33 T
1 12 Q
(This) 90 380 T
(method) 114.58 380 T
(returns) 153.83 380 T
(the) 190.41 380 T
2 10 Q
(FrameStepper) 208.32 380 T
1 12 Q
(object) 283.57 380 T
(that) 316.14 380 T
(w) 337.39 380 T
(as) 345.94 380 T
(used) 359.18 380 T
(to) 384.42 380 T
(construct) 397.01 380 T
(this) 444.25 380 T
2 10 Q
(Frame) 464.84 380 T
1 12 Q
(object) 498.09 380 T
(in) 530.66 380 T
(the) 90 366 T
2 10 Q
(stepper) 107.66 366 T
1 12 Q
( output parameter) 149.66 366 T
(. This method returns) 233.65 366 T
2 10 Q
(true) 339.31 366 T
1 12 Q
( on success and) 363.31 366 T
2 10 Q
(false) 440.63 366 T
1 12 Q
( on error) 470.63 366 T
(.) 511.28 366 T
2 10 Q
(bool getLibOffset\050std::string &lib, Dyninst::Offset &offset, void* &symtab\051) 72 339.33 T
1 12 Q
(This) 90 312 T
(method) 114.51 312 T
(returns) 153.68 312 T
(the) 190.17 312 T
(DSO) 208.01 312 T
(\050a) 235.18 312 T
(library) 247.67 312 T
(or) 282.83 312 T
(e) 296 312 T
(x) 301.15 312 T
(ecutable\051) 306.97 312 T
(and) 354.12 312 T
(an) 374.61 312 T
(of) 389.11 312 T
(fset) 398.81 312 T
(into) 419.31 312 T
(that) 441.15 312 T
(DSO) 462.32 312 T
(that) 489.49 312 T
(points) 510.66 312 T
(to) 90 298 T
(the) 103.25 298 T
(location) 121.82 298 T
(within) 164.4 298 T
(that) 198.99 298 T
(DSO) 220.9 298 T
(where) 248.81 298 T
(this) 282.04 298 T
(frame) 303.29 298 T
(w) 335.19 298 T
(as) 343.73 298 T
(created.) 357.64 298 T
2 10 Q
(lib) 399.2 298 T
1 12 Q
(is) 421.11 298 T
(the) 433.03 298 T
(path) 451.61 298 T
(to) 476.18 298 T
(the) 489.43 298 T
(library) 508.01 298 T
(that) 90 284 T
(w) 112.43 284 T
(as) 120.97 284 T
(loaded,) 135.4 284 T
(and) 174.82 284 T
2 10 Q
(offset) 196.58 284 T
1 12 Q
(is) 237.01 284 T
(the) 249.45 284 T
(of) 268.55 284 T
(fset) 278.24 284 T
(into) 300 284 T
(that) 323.1 284 T
(library) 345.53 284 T
(.) 376.75 284 T
(The) 384.18 284 T
(return) 407.27 284 T
(v) 440.36 284 T
(alue) 446.05 284 T
(of) 470.48 284 T
(the) 484.9 284 T
2 10 Q
(symtab) 504 284 T
1 12 Q
(parameter) 90 270 T
(is) 142.66 270 T
(dependent) 155.34 270 T
(on) 209.35 270 T
(the) 226.03 270 T
2 10 Q
(SymbolLookup) 245.38 270 T
1 12 Q
(implementation--by) 322.06 270 T
(def) 422.07 270 T
(ault) 437.27 270 T
(it) 459.95 270 T
(will) 471.31 270 T
(contain) 494.66 270 T
(a) 534.67 270 T
(pointer) 90 256 T
(to) 127.19 256 T
(a) 139.73 256 T
2 10 Q
(Dyninst::Symtab) 148.25 256 T
1 12 Q
(object) 241.45 256 T
(for) 273.97 256 T
(this) 291.16 256 T
(DSO.) 311.7 256 T
(See) 341.9 256 T
(the) 362.42 256 T
439.48 254.8 380.28 254.8 2 L
0.6 H
0 Z
N
(SymtabAPI) 380.28 256 T
502.81 254.8 439.48 254.8 2 L
N
(Programmer\325) 439.48 256 T
510.67 254.8 502.81 254.8 2 L
N
(s) 502.81 256 T
540 254.8 510.67 254.8 2 L
N
(Guide) 510.67 256 T
(for more information on using) 90 242 T
2 10 Q
(Dyninst::Symtab) 238.32 242 T
1 12 Q
( objects.) 328.32 242 T
4 14 Q
(3.4 Accessing Local V) 72 212.67 T
(ariables) 200.59 212.67 T
7 12 Q
(Defined In) 72 188 T
2 10 Q
(: local_var.h) 144 188 T
1 12 Q
(Stackw) 90 169 T
(alk) 125.21 169 T
(erAPI) 139.75 169 T
(can) 171.64 169 T
(be) 191.52 169 T
(used) 206.08 169 T
(to) 231.3 169 T
(access) 243.87 169 T
(local) 277.74 169 T
(v) 304.3 169 T
(ariables) 310 169 T
(found) 350.55 169 T
(in) 381.77 169 T
(the) 394.34 169 T
(frames) 412.23 169 T
(of) 448.11 169 T
(a) 461.34 169 T
(call) 469.89 169 T
(stack.) 490.45 169 T
(The) 521.34 169 T
(Stackw) 72 155 T
(alk) 107.21 155 T
(erAPI) 121.75 155 T
(interf) 154.44 155 T
(ace) 180.31 155 T
(for) 200.32 155 T
(accessing) 218.34 155 T
(the) 268.35 155 T
(v) 287.04 155 T
(alues) 292.74 155 T
(of) 321.43 155 T
(local) 335.45 155 T
(v) 362.81 155 T
(ariables) 368.51 155 T
(is) 409.86 155 T
(closely) 421.89 155 T
(tied) 459.91 155 T
(to) 481.94 155 T
(the) 495.3 155 T
(Sym-) 514 155 T
(tabAPI) 72 141 T
(interf) 110.11 141 T
(ace) 135.99 141 T
(for) 156.09 141 T
(collecting) 174.2 141 T
(information) 225.65 141 T
(about) 286.43 141 T
(local) 317.21 141 T
(v) 344.66 141 T
(ariables--SymtabAPI) 350.36 141 T
(handles) 455.79 141 T
(for) 496.57 141 T
(func-) 514.68 141 T
(tions, local v) 72 127 T
(ariables, and types are part of this interf) 133.37 127 T
(ace.) 323.87 127 T
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 15
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 14) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(Gi) 90 712 T
(v) 101.7 712 T
(en) 107.52 712 T
(an) 122.22 712 T
(initial) 136.91 712 T
(handle) 168.29 712 T
(to) 203.65 712 T
(a) 216.35 712 T
(SymtabAPI) 225.05 712 T
2 10 Q
(Function) 284.42 712 T
1 12 Q
(object,) 335.79 712 T
(SymtabAPI) 371.48 712 T
(can) 430.85 712 T
(look) 450.88 712 T
(up) 475.58 712 T
(local) 490.95 712 T
(v) 517.64 712 T
(ari-) 523.34 712 T
(ables) 72 698 T
(contained) 100.57 698 T
(in) 151.14 698 T
(that) 164.39 698 T
(function) 186.3 698 T
(and) 230.21 698 T
(the) 251.45 698 T
(types) 270.03 698 T
(of) 299.27 698 T
(those) 313.18 698 T
(local) 342.43 698 T
(v) 369.67 698 T
(ariables.) 375.37 698 T
(See) 419.6 698 T
(the) 440.84 698 T
519.34 696.8 459.42 696.8 2 L
0.6 H
0 Z
N
(SymtabAPI) 459.42 698 T
540 696.8 519.34 696.8 2 L
N
(Pro-) 519.34 698 T
118.66 682.8 72 682.8 2 L
N
(grammer\325) 72 684 T
158.65 682.8 118.66 682.8 2 L
N
(s Guide) 118.66 684 T
(for more information.) 158.65 684 T
2 10 Q
(Dyninst::SymtabAPI::Function *getFunctionForFrame\050Frame f\051) 72 659.33 T
1 12 Q
(This) 90 632 T
(method) 114.77 632 T
(returns) 154.2 632 T
(a) 190.96 632 T
(SymtabAPI) 199.72 632 T
(function) 259.16 632 T
(handle) 302.59 632 T
(for) 338.02 632 T
(the) 355.44 632 T
(function) 373.54 632 T
(that) 416.97 632 T
(created) 438.4 632 T
(the) 476.48 632 T
(call) 494.58 632 T
(stack) 515.34 632 T
(frame,) 90 618 T
2 10 Q
(f) 123.98 618 T
1 12 Q
(.) 129.98 618 T
2 10 Q
(const int glvv_Success = 0;) 72 591.33 T
(const int glvv_EParam = -1;) 72 579.33 T
(const int glvv_EOutOfScope = -2;) 72 567.33 T
(const int glvv_EBufferSize = -3;) 72 555.33 T
(const int glvv_EUnknown = -4;) 72 543.33 T
(int getLocalVariableValue\050Dyninst::SymtabAPI::localVar *var,) 72 519.33 T
(std::vector<Frame> &swalk,) 228 507.33 T
(unsigned frame,) 228 495.33 T
(void *out_buffer,) 228 483.33 T
(unsigned out_buffer_size\051) 228 471.33 T
1 12 Q
(Gi) 90 444 T
(v) 101.7 444 T
(en) 107.52 444 T
(a) 121.6 444 T
(local) 129.68 444 T
(v) 155.76 444 T
(ariable) 161.46 444 T
(and) 196.86 444 T
(a) 216.94 444 T
(stack) 225.02 444 T
(frame) 252.43 444 T
(from) 283.17 444 T
(a) 309.25 444 T
(call) 317.33 444 T
(stack,) 337.4 444 T
(this) 367.82 444 T
(function) 387.91 444 T
(returns) 430.65 444 T
(the) 466.73 444 T
(v) 484.14 444 T
(alue) 489.85 444 T
(of) 512.59 444 T
(the) 525.34 444 T
(v) 90 430 T
(ariable) 95.7 430 T
(in) 131.83 430 T
(that) 144.64 430 T
(frame.) 166.11 430 T
(The) 200.57 430 T
(local) 222.7 430 T
(v) 249.5 430 T
(ariable) 255.2 430 T
(is) 291.33 430 T
(speci\336ed) 302.81 430 T
(by) 348.94 430 T
(the) 364.42 430 T
(SymtabAPI) 382.55 430 T
(v) 442.03 430 T
(ariable) 447.73 430 T
(object,) 483.86 430 T
2 10 Q
(var) 519.66 430 T
1 12 Q
(.) 537 430 T
2 10 Q
(swalk) 90 416 T
1 12 Q
(is) 122.91 416 T
(a) 133.82 416 T
(call) 142.05 416 T
(stack) 162.29 416 T
(that) 189.86 416 T
(w) 210.76 416 T
(as) 219.31 416 T
(collected) 232.21 416 T
(via) 278.44 416 T
(Stackw) 296.01 416 T
(alk) 331.22 416 T
(erAPI,) 345.76 416 T
(and) 380.32 416 T
2 10 Q
(frame) 400.56 416 T
1 12 Q
(speci\336es) 433.47 416 T
(an) 477.7 416 T
(inde) 491.94 416 T
(x) 512.42 416 T
(into) 521.33 416 T
(that) 90 402 T
(call) 114.58 402 T
(stack) 138.48 402 T
(that) 169.72 402 T
(contains) 194.29 402 T
(the) 240.86 402 T
(local) 262.1 402 T
(v) 292.01 402 T
(ariable.) 297.71 402 T
(The) 339.94 402 T
(v) 365.17 402 T
(alue) 370.87 402 T
(of) 397.44 402 T
(the) 414.01 402 T
(v) 435.25 402 T
(ariable) 440.95 402 T
(is) 480.18 402 T
(stored) 494.76 402 T
(in) 530.66 402 T
2 10 Q
(out_buffer) 90 388 T
1 12 Q
( and the size of) 150 388 T
2 10 Q
(out_buffer) 225.65 388 T
1 12 Q
( should be speci\336ed in) 285.65 388 T
2 10 Q
(out_buffer_size) 395.98 388 T
1 12 Q
(.) 485.98 388 T
(A) 90 360 T
(local) 101.81 360 T
(v) 128.28 360 T
(ariable) 133.98 360 T
(only) 169.78 360 T
(has) 194.26 360 T
(a) 213.4 360 T
(limited) 221.87 360 T
(scope) 259.02 360 T
(with-in) 289.49 360 T
(a) 327.3 360 T
(tar) 335.77 360 T
(get) 348.22 360 T
(process\325) 366.02 360 T
(e) 409.15 360 T
(x) 414.3 360 T
(ecution.) 420.12 360 T
(Stackw) 461.59 360 T
(alk) 496.8 360 T
(erAPI) 511.34 360 T
(cannot) 90 346 T
(guarantee) 124.82 346 T
(that) 174.29 346 T
(it) 195.12 346 T
(can) 204.62 346 T
(collect) 224.1 346 T
(the) 258.92 346 T
(correct) 276.41 346 T
(return) 312.55 346 T
(v) 344.04 346 T
(alue) 349.74 346 T
(of) 372.56 346 T
(a) 385.38 346 T
(local) 393.54 346 T
(v) 419.69 346 T
(ariable) 425.39 346 T
(from) 460.87 346 T
(a) 487.03 346 T
(call) 495.18 346 T
(stack) 515.34 346 T
(if the tar) 90 332 T
(get process is continued after the call stack is collected.) 130.44 332 T
(Finding) 90 304 T
(and) 131.53 304 T
(collecting) 153.04 304 T
(the) 204.55 304 T
(v) 223.4 304 T
(alues) 229.1 304 T
(of) 257.95 304 T
(local) 272.13 304 T
(v) 299.64 304 T
(ariables) 305.34 304 T
(is) 346.85 304 T
(dependent) 359.04 304 T
(on) 412.54 304 T
(deb) 428.73 304 T
(ugging) 445.82 304 T
(information) 483.34 304 T
(being) 90 290 T
(present) 120 290 T
(in) 157.98 290 T
(a) 170.65 290 T
(tar) 179.31 290 T
(get) 191.75 290 T
(process\325) 209.75 290 T
(binary) 253.06 290 T
(.) 282.94 290 T
(Not) 289.27 290 T
(all) 310.61 290 T
(binaries) 325.94 290 T
(contain) 367.26 290 T
(deb) 405.92 290 T
(ugging) 423.01 290 T
(information,) 459.68 290 T
(and) 522.67 290 T
(in) 90 276 T
(some) 103.17 276 T
(cases,) 132.33 276 T
(such) 164.49 276 T
(as) 190.32 276 T
(for) 204.15 276 T
(binaries) 221.97 276 T
(b) 263.8 276 T
(uilt) 269.56 276 T
(with) 289.4 276 T
(high) 314.57 276 T
(compiler) 339.73 276 T
(optimization) 386.23 276 T
(le) 450.73 276 T
(v) 459.1 276 T
(els,) 464.92 276 T
(that) 485.08 276 T
(deb) 506.92 276 T
(ug-) 524 276 T
(ging information may be incorrect.) 90 262 T
2 10 Q
(getLocalVariableValue) 90 234 T
1 12 Q
( will return on of the follo) 216 234 T
(wing v) 340.36 234 T
(alues:) 373.06 234 T
(\245) 72 206 T
2 10 Q
(glvv_Success) 90 206 T
1 12 Q
(-) 165.08 206 T
(getLocalV) 172.15 206 T
(ariableV) 221.47 206 T
(alue) 261.45 206 T
(w) 284.52 206 T
(as) 293.06 206 T
(able) 306.14 206 T
(to) 329.2 206 T
(correctly) 341.61 206 T
(read) 387.34 206 T
(the) 411.07 206 T
(v) 428.8 206 T
(alue) 434.51 206 T
(of) 457.57 206 T
(the) 470.64 206 T
(gi) 488.38 206 T
(v) 497.42 206 T
(en) 503.24 206 T
(v) 517.64 206 T
(ari-) 523.34 206 T
(able.) 90 192 T
(\245) 72 173 T
2 10 Q
(glvv_EParam) 90 173 T
1 12 Q
(-) 160.47 173 T
(An) 168.93 173 T
(error) 188.06 173 T
(occurred,) 215.84 173 T
(an) 265.28 173 T
(incorrect) 281.08 173 T
(parameter) 328.19 173 T
(w) 380.63 173 T
(as) 389.18 173 T
(speci\336ed) 403.64 173 T
(\050) 450.76 173 T
2 10 Q
(frame) 454.76 173 T
1 12 Q
(w) 489.23 173 T
(as) 497.77 173 T
(lar) 512.23 173 T
(ger) 524.68 173 T
(than) 90 159 T
2 10 Q
(swalk.size\050\051) 113.66 159 T
1 12 Q
(, v) 185.66 159 T
(ar w) 197.36 159 T
(as not a v) 218.23 159 T
(ariable in the function speci\336ed by frame, ...\051.) 263.59 159 T
(\245) 72 140 T
2 10 Q
(glvv_EOutOfScope) 90 140 T
1 12 Q
(-) 189.38 140 T
(An) 196.77 140 T
(error) 214.82 140 T
(occurred,) 241.52 140 T
(the) 289.88 140 T
(speci\336ed) 307.92 140 T
(v) 353.97 140 T
(ariable) 359.67 140 T
(e) 395.71 140 T
(xists) 400.86 140 T
(in) 426.25 140 T
(the) 438.97 140 T
(function) 457.02 140 T
(b) 500.4 140 T
(ut) 506.16 140 T
(isn\325) 518.88 140 T
(t) 536.66 140 T
(li) 90 126 T
(v) 96.37 126 T
(e at the current e) 102.19 126 T
(x) 181.98 126 T
(ecution point.) 187.8 126 T
(\245) 72 107 T
2 10 Q
(glvv_EBufferSize) 90 107 T
1 12 Q
( - An error occurred, the v) 186 107 T
(ariable\325) 311.32 107 T
(s v) 347.3 107 T
(alue does not \336t inside out_b) 360.67 107 T
(uf) 498.77 107 T
(fer) 508.46 107 T
(.) 521.12 107 T
(\245) 72 88 T
2 10 Q
(glvv_EUnknown) 90 88 T
1 12 Q
(-) 176.25 88 T
(An) 184.38 88 T
(unkno) 203.17 88 T
(wn) 232.87 88 T
(error) 251.66 88 T
(occurred.) 279.1 88 T
(It) 328.21 88 T
(is) 339.67 88 T
(most) 351.8 88 T
(lik) 379.26 88 T
(ely) 391.82 88 T
(that) 410.61 88 T
(the) 432.73 88 T
(local) 451.52 88 T
(v) 478.98 88 T
(ariable) 484.68 88 T
(w) 521.46 88 T
(as) 530 88 T
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 16
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 15) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(optimized a) 90 712 T
(w) 146.15 712 T
(ay or deb) 154.69 712 T
(ugging information about the v) 199.1 712 T
(ariable w) 348.13 712 T
(as incorrect.) 392.33 712 T
4 14 Q
(3.5 Callback Interface) 72 682.67 T
1 12 Q
(This) 90 662 T
(subsection) 114.76 662 T
(describes) 168.85 662 T
(the) 216.93 662 T
(Callback) 235.02 662 T
(Interf) 281.11 662 T
(ace) 307.64 662 T
(for) 327.05 662 T
(Stackw) 344.47 662 T
(alk) 379.68 662 T
(erAPI.) 394.23 662 T
(The) 429.31 662 T
(Callback) 451.4 662 T
(Interf) 497.48 662 T
(ace) 524.02 662 T
(is) 72 648 T
(primarily) 83.12 648 T
(used) 130.9 648 T
(to) 156.01 648 T
(port) 168.47 648 T
(Stackw) 190.92 648 T
(alk) 226.12 648 T
(erAPI) 240.67 648 T
(to) 272.44 648 T
(ne) 284.89 648 T
(w) 295.92 648 T
(platforms,) 307.7 648 T
(e) 359.82 648 T
(xtend) 364.96 648 T
(support) 394.74 648 T
(for) 433.86 648 T
(ne) 450.97 648 T
(w) 462 648 T
(types) 473.78 648 T
(of) 502.23 648 T
(stack) 515.34 648 T
(frames, or inte) 72 634 T
(grate Stackw) 141.47 634 T
(alk) 203.66 634 T
(erAPI into e) 218.21 634 T
(xisting tools.) 276.68 634 T
(The) 90 618 T
(classes) 113.54 618 T
(in) 151.74 618 T
(this) 165.96 618 T
(subsection) 188.18 618 T
(are) 243.73 618 T
(interf) 263.26 618 T
(aces,) 289.13 618 T
(the) 317.66 618 T
(y) 332.15 618 T
(cannot) 343.03 618 T
(be) 379.9 618 T
(instantiated.) 396.11 618 T
(T) 459.32 618 T
(o) 465.69 618 T
(create) 476.58 618 T
(a) 510.1 618 T
(ne) 520.31 618 T
(w) 531.34 618 T
(implementation) 72 604 T
(of) 150.59 604 T
(one) 163.85 604 T
(of) 184.43 604 T
(these) 197.69 604 T
(interf) 225.6 604 T
(aces,) 251.48 604 T
(create) 278.39 604 T
(a) 310.29 604 T
(ne) 318.87 604 T
(w) 329.9 604 T
(class) 341.82 604 T
(that) 368.41 604 T
(inherits) 389.67 604 T
(from) 428.92 604 T
(the) 455.51 604 T
(callback) 473.43 604 T
(class) 516.67 604 T
(and) 72 590 T
(implement) 92.58 590 T
(the) 147.16 590 T
(necessary) 165.07 590 T
(methods.) 214.96 590 T
(T) 261.88 590 T
(o) 268.25 590 T
(use) 277.5 590 T
(a) 296.74 590 T
(ne) 305.32 590 T
(w) 316.35 590 T
2 10 Q
(ProcessState) 328.26 590 T
1 12 Q
(,) 400.26 590 T
2 10 Q
(StepperGroup) 406.51 590 T
1 12 Q
(,) 478.51 590 T
(or) 484.76 590 T
2 10 Q
(Symbol-) 498 590 T
(Lookup) 72 576 T
1 12 Q
(class) 111.67 576 T
(with) 138.68 576 T
(Stackw) 163.69 576 T
(alk) 198.9 576 T
(erAPI,) 213.44 576 T
(create) 248.77 576 T
(a) 281.09 576 T
(ne) 290.09 576 T
(w) 301.12 576 T
(instance) 313.45 576 T
(of) 356.45 576 T
(the) 370.12 576 T
(class) 388.46 576 T
(and) 415.46 576 T
(re) 436.47 576 T
(gister) 445.61 576 T
(it) 475.95 576 T
(with) 486.3 576 T
(a) 511.3 576 T
(ne) 520.31 576 T
(w) 531.34 576 T
2 10 Q
(Walker) 72 562 T
1 12 Q
( object using the) 108 562 T
2 10 Q
(Walker::newWalker\050ProcessState *,) 108 544.33 T
(StepperGroup *, SymbolLookup *\051) 312 544.33 T
1 12 Q
(f) 72 512 T
(actory) 75.88 512 T
(method) 109.09 512 T
(\050see) 148.32 512 T
(Section) 170.86 512 T
(3.3.1\051.) 209.86 512 T
(T) 244.08 512 T
(o) 250.46 512 T
(use) 259.68 512 T
(a) 278.9 512 T
(ne) 287.46 512 T
(w) 298.49 512 T
2 10 Q
(FrameStepper) 310.38 512 T
1 12 Q
(class) 385.6 512 T
(with) 412.16 512 T
(Stackw) 436.72 512 T
(alk) 471.93 512 T
(erAPI,) 486.47 512 T
(cre-) 521.35 512 T
(ate a ne) 72 498 T
(w instance of the class and re) 108.35 498 T
(gister it with a StepperGroup using the) 248.8 498 T
2 10 Q
(StepperGroup::addStepper\050FrameStepper *\051) 108 480.33 T
1 12 Q
(method \050see Section) 72 448 T
(3.5.3\051.) 172.32 448 T
(Some) 90 432 T
(of) 120.9 432 T
(the) 134.47 432 T
(classes) 152.7 432 T
(in) 189.59 432 T
(the) 202.5 432 T
(Callback) 220.73 432 T
(Interf) 266.96 432 T
(ace) 293.49 432 T
(ha) 313.05 432 T
(v) 324.13 432 T
(e) 329.95 432 T
(methods) 338.85 432 T
(with) 383.09 432 T
(def) 407.99 432 T
(ault) 423.2 432 T
(implementations.) 444.76 432 T
(A) 531.34 432 T
(ne) 72 418 T
(w) 83.03 418 T
(class) 94.52 418 T
(that) 120.67 418 T
(inherits) 141.5 418 T
(from) 180.32 418 T
(a) 206.48 418 T
(Callback) 214.63 418 T
(Interf) 260.11 418 T
(ace) 286.65 418 T
(can) 305.46 418 T
(optionally) 324.94 418 T
(implement) 376.44 418 T
(these) 430.6 418 T
(methods,) 458.08 418 T
(b) 504.58 418 T
(ut) 510.34 418 T
(it) 522.5 418 T
(is) 532 418 T
(not) 72 404 T
(required.) 91.95 404 T
(If) 139.54 404 T
(a) 152.15 404 T
(method) 162.09 404 T
(requires) 202.7 404 T
(implementation,) 245.96 404 T
(it) 328.91 404 T
(is) 340.2 404 T
(written) 352.81 404 T
(as) 391.42 404 T
(a) 406.03 404 T
(C++) 415.97 404 T
(pure) 442.12 404 T
(virtual) 468.06 404 T
(method) 504 404 T
(\050) 72 390 T
2 10 Q
(virtual) 76 390 T
(funcName\050\051) 123.88 390 T
(=) 189.76 390 T
(0) 201.64 390 T
1 12 Q
(\051.) 207.64 390 T
(A) 217.58 390 T
(method) 229.19 390 T
(with) 268.13 390 T
(a) 292.4 390 T
(def) 300.67 390 T
(ault) 315.88 390 T
(implementation) 336.82 390 T
(is) 415.1 390 T
(written) 426.04 390 T
(as) 462.98 390 T
(a) 475.92 390 T
(C++) 484.19 390 T
(virtual) 508.67 390 T
(method \050) 72 376 T
2 10 Q
(virtual funcName\050\051) 115 376 T
1 12 Q
(\051.) 223 376 T
4 F
(3.5.1 Default Implementations) 72 350 T
1 F
(The) 90 332 T
(classes) 112.43 332 T
(described) 149.52 332 T
(in) 199.28 332 T
(the) 212.39 332 T
(Callback) 230.82 332 T
(Interf) 277.25 332 T
(ace) 303.78 332 T
(are) 323.54 332 T
(C++) 341.96 332 T
(abstract) 367.27 332 T
(classes,) 408.36 332 T
(or) 448.46 332 T
(interf) 462.23 332 T
(aces.) 488.1 332 T
(The) 515.52 332 T
(y) 534 332 T
(cannot) 72 318 T
(be) 108.23 318 T
(instantiated.) 123.81 318 T
(F) 186.38 318 T
(or) 192.87 318 T
(each) 207.11 318 T
(of) 233.34 318 T
(these) 247.57 318 T
(classes) 276.48 318 T
(Stackw) 314.04 318 T
(alk) 349.25 318 T
(erAPI) 363.8 318 T
(pro) 396.69 318 T
(vides) 412.51 318 T
(one) 442.08 318 T
(or) 463.65 318 T
(more) 477.89 318 T
(def) 506.8 318 T
(ault) 522 318 T
(implementations) 72 304 T
(on) 154.71 304 T
(each) 169.42 304 T
(platform.) 194.12 304 T
(These) 241.16 304 T
(def) 272.52 304 T
(ault) 287.73 304 T
(implementations) 308.44 304 T
(are) 391.15 304 T
(classes) 408.51 304 T
(that) 444.55 304 T
(inherit) 465.26 304 T
(from) 499.3 304 T
(the) 525.34 304 T
(abstract) 72 290 T
(classes) 112.34 290 T
(described) 148.68 290 T
(in) 197.68 290 T
(the) 210.03 290 T
(Callback) 227.71 290 T
(Interf) 273.39 290 T
(ace.) 299.92 290 T
(If) 321.92 290 T
(a) 332.93 290 T
(user) 341.27 290 T
(creates) 364.28 290 T
(a) 400.61 290 T
2 10 Q
(Walker) 408.96 290 T
1 12 Q
(object) 447.97 290 T
(without) 480.32 290 T
(pro-) 520.01 290 T
(viding) 72 276 T
(their) 106.6 276 T
(o) 132.53 276 T
(wn) 138.23 276 T
2 10 Q
(FrameStepper) 156.83 276 T
1 12 Q
(,) 228.35 276 T
2 10 Q
(ProcessState) 235.28 276 T
1 12 Q
(,) 307.28 276 T
(and) 314.21 276 T
2 10 Q
(SymbolLookup) 335.47 276 T
1 12 Q
(objects,) 411.4 276 T
(then) 452.33 276 T
(Stackw) 476.93 276 T
(alk) 512.14 276 T
(er-) 526.68 276 T
(API will use the def) 72 262 T
(ault implementations listed in T) 167.87 262 T
(able) 319.58 262 T
(1.) 342.58 262 T
2 9 Q
(StepperGroup) 169.5 218 T
(ProcessState) 246.5 218 T
(SymbolLookup) 323.5 218 T
(FrameStepper) 400.5 218 T
(Linux/x86) 92.5 199 T
(Linux/x86_64) 92.5 188 T
(1.) 169.5 199 T
(AddrRange) 180.3 199 T
(1.) 246.5 199 T
(ProcSelf) 257.3 199 T
(2.) 246.5 186 T
(ProcDebug) 257.3 186 T
(1.) 323.5 199 T
(SwkSymtab) 334.3 199 T
(1.) 400.5 199 T
(FrameFuncStepper) 411.3 199 T
(2.) 400.5 186 T
(SigHandlerStepper) 411.3 186 T
(3.) 400.5 173 T
(DebugStepper) 411.3 173 T
(4.) 400.5 160 T
(StepperWanderer) 411.3 160 T
(5.) 400.5 147 T
(BottomOfStackStepper) 411.3 147 T
(Linux/PPC) 92.5 128 T
(1.) 169.5 128 T
(AddrRange) 180.3 128 T
(1.) 246.5 128 T
(ProcSelf) 257.3 128 T
(2.) 246.5 115 T
(ProcDebug) 257.3 115 T
(1.) 323.5 128 T
(SwkSymtab) 334.3 128 T
(1.) 400.5 128 T
(FrameFuncStepper) 411.3 128 T
(2.) 400.5 115 T
(SigHandlerStepper) 411.3 115 T
(BlueGene) 92.5 96 T
(1.) 169.5 96 T
(AddrRange) 180.3 96 T
(1.) 246.5 96 T
(ProcDebug) 257.3 96 T
(1.) 323.5 96 T
(SwkSymtab) 334.3 96 T
(1.) 400.5 96 T
(FrameFuncStepper) 411.3 96 T
1 10 Q
(1.) 86.5 76.33 T
(Callback Interf) 95.5 76.33 T
(ace Def) 155.66 76.33 T
(aults) 186.37 76.33 T
86.5 229.75 86.5 89.25 2 L
V
0.5 H
0 Z
N
163.5 230.25 163.5 88.75 2 L
V
N
240.5 230.25 240.5 88.75 2 L
V
N
317.5 230.25 317.5 88.75 2 L
V
N
394.5 230.25 394.5 88.75 2 L
V
N
525.5 229.75 525.5 89.25 2 L
V
N
86.25 230 525.75 230 2 L
V
N
86.25 211 525.75 211 2 L
V
N
86.25 140 525.75 140 2 L
V
N
86.25 108 525.75 108 2 L
V
N
86.25 89 525.75 89 2 L
V
N
FMENDPAGE
%%EndPage: "15" 16
%%Page: "16" 17
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 16) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 12 Q
(3.5.2 Class FrameStepper) 72 686 T
7 F
(Defined In) 72 663 T
2 10 Q
(: framestepper.h) 144 663 T
1 12 Q
(The) 90 644 T
2 10 Q
(FrameStepper) 111.72 644 T
1 12 Q
(class) 186.78 644 T
(is) 213.17 644 T
(an) 224.24 644 T
(interf) 238.62 644 T
(ace) 264.5 644 T
(that) 283.54 644 T
(tells) 304.6 644 T
(Stackw) 327.67 644 T
(alk) 362.88 644 T
(erAPI) 377.42 644 T
(ho) 409.14 644 T
(w) 420.84 644 T
(to) 432.56 644 T
(w) 444.96 644 T
(alk) 453.5 644 T
(through) 471.23 644 T
(a) 511.62 644 T
(spe-) 520.01 644 T
(ci\336c) 72 630 T
(type) 95.79 630 T
(of) 119.58 630 T
(stack) 132.71 630 T
(frame.) 160.49 630 T
(There) 194.61 630 T
(may) 225.72 630 T
(be) 249.51 630 T
(man) 263.97 630 T
(y) 284.45 630 T
(dif) 293.58 630 T
(ferent) 306.61 630 T
(w) 337.72 630 T
(ays) 346.27 630 T
(of) 365.39 630 T
(w) 378.51 630 T
(alking) 387.06 630 T
(through) 420.18 630 T
(a) 460.64 630 T
(stack) 469.1 630 T
(frame) 496.89 630 T
(on) 528 630 T
(a) 72 616 T
(platform,) 81.32 616 T
(e.g,) 129.63 616 T
(on) 150.94 616 T
(Linux/x86) 166.93 616 T
(there) 220.92 616 T
(are) 248.9 616 T
(dif) 267.54 616 T
(ferent) 280.57 616 T
(mechanisms) 312.54 616 T
(for) 375.85 616 T
(w) 393.83 616 T
(alking) 402.38 616 T
(through) 436.36 616 T
(system) 477.68 616 T
(calls,) 515 616 T
(signal) 72 602 T
(handlers,) 105.59 602 T
(re) 154.17 602 T
(gular) 163.32 602 T
(functions,) 192.9 602 T
(and) 245.49 602 T
(frameless) 267.74 602 T
(functions.) 318.65 602 T
(A) 371.24 602 T
(single) 384.83 602 T
2 10 Q
(FrameStepper) 418.42 602 T
1 12 Q
(describes) 495.35 602 T
(ho) 72 588 T
(w to w) 83.7 588 T
(alk through one of these types of stack frames.) 116.24 588 T
(A) 90 572 T
(user) 103.57 572 T
(can) 128.46 572 T
(create) 150.01 572 T
(their) 183.56 572 T
(o) 210.46 572 T
(wn) 216.15 572 T
2 10 Q
(FrameStepper) 235.72 572 T
1 12 Q
(classes) 312.62 572 T
(that) 350.85 572 T
(tell) 373.74 572 T
(Stackw) 393.98 572 T
(alk) 429.19 572 T
(erAPI) 443.73 572 T
(ho) 477.29 572 T
(w) 488.99 572 T
(to) 502.55 572 T
(w) 516.79 572 T
(alk) 525.34 572 T
(through) 72 558 T
(ne) 113.31 558 T
(w) 124.34 558 T
(types) 136.98 558 T
(of) 166.29 558 T
(stack) 180.26 558 T
(frames.) 208.9 558 T
(A) 248.53 558 T
(ne) 261.17 558 T
(w) 272.2 558 T
2 10 Q
(FrameStepper) 284.84 558 T
1 12 Q
(object) 360.82 558 T
(must) 394.12 558 T
(be) 421.44 558 T
(added) 436.75 558 T
(to) 469.38 558 T
(a) 482.69 558 T
2 10 Q
(Stepper-) 492 558 T
(Group) 72 544 T
1 12 Q
( before it can be used.) 102 544 T
(In) 90 528 T
(addition) 104.17 528 T
(to) 147.68 528 T
(w) 161.19 528 T
(alking) 169.74 528 T
(through) 203.91 528 T
(indi) 245.42 528 T
(vidual) 263.79 528 T
(stack) 297.97 528 T
(frames,) 326.8 528 T
(a) 366.63 528 T
2 10 Q
(FrameStepper) 376.13 528 T
1 12 Q
(tells) 452.31 528 T
(its) 476.48 528 T
2 10 Q
(Stepper-) 492 528 T
(Group) 72 514 T
1 12 Q
(when) 105.44 514 T
(it) 134.88 514 T
(can) 144.99 514 T
(be) 165.09 514 T
(used.) 179.86 514 T
(The) 208.29 514 T
2 10 Q
(FrameStepper) 230.4 514 T
1 12 Q
(re) 305.84 514 T
(gisters) 314.98 514 T
(address) 349.75 514 T
(ranges) 389.18 514 T
(that) 423.95 514 T
(co) 445.39 514 T
(v) 456.54 514 T
(er) 462.36 514 T
(objects) 475.12 514 T
(in) 512.56 514 T
(the) 525.34 514 T
(tar) 72 500 T
(get) 84.44 500 T
(process\325) 103.11 500 T
(code) 147.09 500 T
(space) 173.75 500 T
(\050such) 204.4 500 T
(as) 234.39 500 T
(functions\051.) 248.39 500 T
(These) 304.05 500 T
(address) 336.7 500 T
(ranges) 376.69 500 T
(should) 412.01 500 T
(contain) 448.01 500 T
(the) 487.34 500 T
(objects) 506 500 T
(that) 72 486 T
(will) 93.17 486 T
(create) 115.01 486 T
(stack) 146.82 486 T
(frames) 174.65 486 T
(through) 210.47 486 T
(which) 250.97 486 T
(the) 283.46 486 T
2 10 Q
(FrameStepper) 301.3 486 T
1 12 Q
(can) 376.46 486 T
(w) 396.29 486 T
(alk.) 404.83 486 T
(If) 425.66 486 T
(multiple) 436.82 486 T
2 10 Q
(FrameStep-) 480 486 T
(per) 72 472 T
1 12 Q
(objects) 94.44 472 T
(ha) 132.88 472 T
(v) 143.96 472 T
(e) 149.78 472 T
(o) 159.55 472 T
(v) 165.37 472 T
(erlapping) 171.19 472 T
(address) 220.96 472 T
(ranges,) 261.38 472 T
(then) 300.14 472 T
(a) 325.25 472 T
(priority) 335.02 472 T
(v) 375.46 472 T
(alue) 381.16 472 T
(is) 405.59 472 T
(used) 418.03 472 T
(to) 444.47 472 T
(determine) 458.24 472 T
(which) 510.67 472 T
2 10 Q
(FrameStepper) 72 458 T
1 12 Q
( should be attempted \336rst.) 144 458 T
2 10 Q
(FrameStepper) 90 442 T
1 12 Q
(is) 165.15 442 T
(an) 176.3 442 T
(interf) 190.78 442 T
(ace) 216.65 442 T
(class;) 235.78 442 T
(it) 265.6 442 T
(cannot) 275.42 442 T
(be) 310.56 442 T
(instantiated.) 325.04 442 T
(Users) 386.52 442 T
(who) 416.99 442 T
(w) 440.8 442 T
(ant) 449.35 442 T
(to) 467.16 442 T
(de) 479.65 442 T
(v) 490.67 442 T
(elop) 496.49 442 T
(ne) 520.31 442 T
(w) 531.34 442 T
2 10 Q
(FrameStepper) 72 428 T
1 12 Q
( objects should inherit from this class and implement the belo) 144 428 T
(w virtual functions.) 439.02 428 T
2 10 Q
(typedef enum { gcf_success,) 72 403.33 T
( gcf_stackbottom,) 144 391.33 T
( gcf_not_me,) 144 379.33 T
( gcf_error } gcframe_ret_t) 144 367.33 T
(virtual gcframe_ret_t getCallerFrame\050const Frame &in, Frame &out\051 = 0) 72 343.33 T
1 12 Q
(This) 90 316 T
(method) 114.68 316 T
(w) 154.03 316 T
(alks) 162.58 316 T
(through) 185.26 316 T
(a) 225.94 316 T
(single) 234.61 316 T
(stack) 266.63 316 T
(frame) 294.64 316 T
(and) 325.97 316 T
(generates) 346.64 316 T
(a) 395.3 316 T
2 10 Q
(Frame) 403.98 316 T
1 12 Q
(object) 437.33 316 T
(that) 470 316 T
(represents) 491.35 316 T
(the) 90 302 T
(caller\325) 107.9 302 T
(s) 137.89 302 T
(stack) 145.8 302 T
(frame.) 173.7 302 T
(P) 207.92 302 T
(arameter) 214.41 302 T
2 10 Q
(in) 259.63 302 T
1 12 Q
(will) 274.87 302 T
(be) 296.78 302 T
(a) 311.35 302 T
2 10 Q
(Frame) 319.91 302 T
1 12 Q
(object) 353.15 302 T
(that) 385.72 302 T
(this) 406.96 302 T
2 10 Q
(FrameStepper) 427.54 302 T
1 12 Q
(is) 502.78 302 T
(capa-) 514.02 302 T
(ble) 90 288 T
(of) 108.4 288 T
(w) 122.13 288 T
(alking) 130.67 288 T
(through.) 164.4 288 T
(P) 208.47 288 T
(arameter) 214.96 288 T
2 10 Q
(out) 260.67 288 T
1 12 Q
(is) 282.41 288 T
(an) 294.14 288 T
(output) 309.2 288 T
(parameter) 343.61 288 T
(that) 395.32 288 T
(this) 417.05 288 T
(method) 438.13 288 T
(should) 477.86 288 T
(set) 513.6 288 T
(to) 530.66 288 T
(the) 90 274 T
2 10 Q
(Frame) 107.66 274 T
1 12 Q
( object that called) 137.66 274 T
2 10 Q
(in) 225.65 274 T
1 12 Q
(.) 237.65 274 T
(There) 90 246 T
(may) 123.24 246 T
(be) 149.17 246 T
(multiple) 165.75 246 T
(w) 211.02 246 T
(ays) 219.57 246 T
(of) 240.82 246 T
(w) 256.08 246 T
(alking) 264.62 246 T
(through) 299.88 246 T
(a) 342.47 246 T
(dif) 353.06 246 T
(ferent) 366.09 246 T
(types) 399.33 246 T
(of) 429.92 246 T
(stack) 445.18 246 T
(frames.) 475.1 246 T
(Each) 516.01 246 T
2 10 Q
(FrameStepper) 90 232 T
1 12 Q
(class) 165.86 232 T
(should) 193.04 232 T
(be) 228.91 232 T
(able) 244.09 232 T
(to) 267.94 232 T
(w) 281.14 232 T
(alk) 289.68 232 T
(through) 308.2 232 T
(a) 349.39 232 T
(type) 358.58 232 T
(of) 383.1 232 T
(stack) 396.96 232 T
(frame.) 425.48 232 T
(F) 460.32 232 T
(or) 466.81 232 T
(e) 480.67 232 T
(xample,) 485.81 232 T
(on) 528 232 T
(x86) 90 218 T
(one) 111.66 218 T
2 10 Q
(FrameStepper) 132.64 218 T
1 12 Q
(could) 208.3 218 T
(be) 238.62 218 T
(used) 253.6 218 T
(to) 279.25 218 T
(w) 292.25 218 T
(alk) 300.79 218 T
(through) 319.11 218 T
(stack) 360.1 218 T
(frames) 388.42 218 T
(generated) 424.72 218 T
(by) 475.02 218 T
(ABI-com-) 490.68 218 T
(pliant) 90 204 T
(functions;) 120.95 204 T
2 10 Q
(out) 172.56 204 T
1 12 Q
(\325) 190.56 204 T
(s) 193.89 204 T
(FP) 202.17 204 T
(and) 219.13 204 T
(RA) 240.07 204 T
(are) 260.34 204 T
(found) 278.61 204 T
(by) 310.21 204 T
(reading) 325.82 204 T
(from) 365.42 204 T
2 10 Q
(in) 392.36 204 T
1 12 Q
(\325) 404.36 204 T
(s) 407.7 204 T
(FP) 415.98 204 T
(,) 427.99 204 T
(and) 434.6 204 T
2 10 Q
(out) 455.54 204 T
1 12 Q
(\325) 473.54 204 T
(s) 476.87 204 T
(SP) 485.15 204 T
(is) 502.11 204 T
(set) 513.72 204 T
(to) 530.66 204 T
(the) 90 190 T
(w) 109.61 190 T
(ord) 118.15 190 T
(belo) 139.09 190 T
(w) 159.45 190 T
2 10 Q
(in) 173.06 190 T
1 12 Q
(\325) 185.06 190 T
(s) 188.4 190 T
(FP) 198.01 190 T
(.) 210.02 190 T
(A) 217.96 190 T
(dif) 231.57 190 T
(ferent) 244.6 190 T
2 10 Q
(FrameStepper) 277.53 190 T
1 12 Q
(might) 354.47 190 T
(be) 387.42 190 T
(used) 403.7 190 T
(to) 430.63 190 T
(w) 444.91 190 T
(alk) 453.46 190 T
(through) 473.06 190 T
(stack) 515.34 190 T
(frames) 90 176 T
(created) 125.67 176 T
(by) 163.32 176 T
(functions) 178.33 176 T
(that) 226.01 176 T
(ha) 247.02 176 T
(v) 258.11 176 T
(e) 263.93 176 T
(optimized) 272.27 176 T
(a) 323.29 176 T
(w) 328.43 176 T
(ay) 336.98 176 T
(their) 351.32 176 T
(FP) 376.33 176 T
(.) 388.34 176 T
(In) 394.35 176 T
(this) 407.36 176 T
(case,) 427.71 176 T
2 10 Q
(in) 454.38 176 T
1 12 Q
(may) 469.39 176 T
(ha) 493.07 176 T
(v) 504.15 176 T
(e) 509.98 176 T
(a) 518.32 176 T
(FP) 526.66 176 T
(that) 90 162 T
(does) 111.49 162 T
(not) 136.98 162 T
(point) 155.8 162 T
2 10 Q
(out) 183.96 162 T
1 12 Q
(\325) 201.96 162 T
(s) 205.3 162 T
(FP) 213.46 162 T
(and) 230.29 162 T
(RA.) 251.11 162 T
(The) 274.27 162 T
2 10 Q
(FrameStepper) 296.41 162 T
1 12 Q
(will) 371.9 162 T
(need) 394.07 162 T
(to) 420.21 162 T
(use) 433.04 162 T
(other) 452.52 162 T
(mechanisms) 480.67 162 T
(to) 90 148 T
(disco) 102.47 148 T
(v) 127.63 148 T
(er) 133.45 148 T
(out\325) 145.91 148 T
(s) 164.58 148 T
(FP) 172.39 148 T
(or) 188.87 148 T
(RA;) 202 148 T
(perhaps) 225.15 148 T
(the) 265.61 148 T
2 10 Q
(FrameStepper) 283.41 148 T
1 12 Q
(searches) 358.55 148 T
(through) 402.33 148 T
(the) 442.8 148 T
(stack) 460.6 148 T
(for) 488.4 148 T
(the) 505.53 148 T
(RA) 523.33 148 T
(or performs analysis on the function that created the stack frame.) 90 134 T
(If) 90 106 T
2 10 Q
(getCallerFrame) 101.18 106 T
1 12 Q
(successfully) 188.37 106 T
(w) 250.22 106 T
(alks) 258.76 106 T
(through) 281.29 106 T
2 10 Q
(in) 321.81 106 T
1 12 Q
(,) 333.81 106 T
(it) 340 106 T
(is) 349.86 106 T
(required) 361.05 106 T
(to) 404.23 106 T
(set) 416.75 106 T
(the) 433.28 106 T
(follo) 451.13 106 T
(wing) 473.5 106 T
(parame-) 500.69 106 T
(ters in) 90 92 T
2 10 Q
(out) 122.66 92 T
1 12 Q
(. See Section) 140.66 92 T
(3.3.2 for more details on the v) 205.99 92 T
(alues that can be set in a) 350.34 92 T
2 10 Q
(Frame) 469.98 92 T
1 12 Q
( object:) 499.98 92 T
FMENDPAGE
%%EndPage: "16" 17
%%Page: "17" 18
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 17) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(\245) 72 712 T
3 F
(Return Addr) 90 712 T
(ess \050RA\051) 149.22 712 T
1 F
( - The RA should be set with the) 189.54 712 T
2 10 Q
(Frame::setRA) 348.53 712 T
1 12 Q
( method.) 420.53 712 T
(\245) 72 693 T
3 F
(Stac) 90 693 T
(k P) 110.42 693 T
(ointer \050SP\051) 125.12 693 T
1 F
( - The SP should be set with the) 178.12 693 T
2 10 Q
(Frame::setSP) 333.78 693 T
1 12 Q
( method.) 405.78 693 T
(\245) 72 674 T
3 F
(F) 90 674 T
(r) 96.67 674 T
(ame P) 101.16 674 T
(ointer \050FP\051) 130.52 674 T
1 F
( - The FP should be set with the) 184.85 674 T
2 10 Q
(Frame::setFP) 340.51 674 T
1 12 Q
( method) 412.51 674 T
(Optionally) 90 646 T
(,) 140.56 646 T
2 10 Q
(getCallerFrame) 146.56 646 T
1 12 Q
( can also set an) 230.56 646 T
(y of follo) 303.02 646 T
(wing parameters in) 347.39 646 T
2 10 Q
(out) 442.37 646 T
1 12 Q
(:) 460.37 646 T
(\245) 72 618 T
3 F
(Return) 90 618 T
(Addr) 131.43 618 T
(ess) 154.99 618 T
(Location) 178.42 618 T
(\050RALocation\051) 229.87 618 T
1 F
(-) 303.96 618 T
(The) 316.73 618 T
(RALocation) 344.16 618 T
(should) 412.26 618 T
(be) 453.03 618 T
(set) 473.13 618 T
(with) 495.23 618 T
(the) 525.34 618 T
2 10 Q
(Frame::setRALocation\050\051) 90 604 T
1 12 Q
( method.) 222 604 T
(\245) 72 585 T
3 F
(Stac) 90 585 T
(k) 110.42 585 T
(P) 125.86 585 T
(ointer) 132.24 585 T
(Location) 171.01 585 T
(\050SPLocation\051) 223.8 585 T
1 F
(-) 297.9 585 T
(The) 312.01 585 T
(SPLocation) 340.78 585 T
(should) 406.89 585 T
(be) 449.01 585 T
(set) 470.45 585 T
(with) 493.89 585 T
(the) 525.34 585 T
2 10 Q
(Frame::setRALocation\050\051) 90 571 T
1 12 Q
( method.) 222 571 T
(\245) 72 552 T
3 F
(F) 90 552 T
(r) 96.67 552 T
(ame) 101.16 552 T
(P) 124.36 552 T
(ointer) 130.73 552 T
(Location) 162.61 552 T
(\050FPLocation\051) 208.49 552 T
1 F
(-) 277.02 552 T
(The) 284.22 552 T
(FPLocation) 306.09 552 T
(should) 365.3 552 T
(be) 400.51 552 T
(set) 415.05 552 T
(with) 431.59 552 T
(the) 456.13 552 T
2 10 Q
(Frame::set-) 474 552 T
(FPLocation\050\051) 90 538 T
1 12 Q
( method.) 162 538 T
(If) 90 510 T
(a) 106.05 510 T
(location) 119.44 510 T
(\336eld) 166.16 510 T
(in) 195.55 510 T
2 10 Q
(out) 212.95 510 T
1 12 Q
(is) 239 510 T
(not) 255.07 510 T
(set,) 278.46 510 T
(then) 302.85 510 T
(the) 331.57 510 T
(appropriate) 354.29 510 T
2 10 Q
(Frame::getRALocation) 417 510 T
1 12 Q
(,) 537 510 T
2 10 Q
(Frame::getSPLocation) 90 496 T
1 12 Q
( or) 210 496 T
2 10 Q
(Frame::getFPLocation) 226 496 T
1 12 Q
( method will return) 346 496 T
2 10 Q
(loc_unknown) 441.32 496 T
1 12 Q
(.) 507.32 496 T
2 10 Q
(getCallerFrame) 90 468 T
1 12 Q
(should) 177.53 468 T
(return) 213.06 468 T
2 10 Q
(gcf_success) 245.25 468 T
1 12 Q
(if) 314.78 468 T
(it) 325.64 468 T
(successfully) 335.85 468 T
(w) 398.03 468 T
(alks) 406.58 468 T
(through) 429.44 468 T
2 10 Q
(in) 470.3 468 T
1 12 Q
(and) 485.83 468 T
(creates) 506.69 468 T
(an) 90 454 T
2 10 Q
(out) 104.93 454 T
(Frame) 126.54 454 T
1 12 Q
(object.) 160.15 454 T
(It) 196.08 454 T
(should) 207.02 454 T
(return) 242.63 454 T
2 10 Q
(gcf_stackbottom) 274.89 454 T
1 12 Q
(if) 368.5 454 T
2 10 Q
(in) 379.43 454 T
1 12 Q
(is) 395.04 454 T
(the) 406.65 454 T
(bottom) 424.92 454 T
(of) 462.53 454 T
(the) 476.14 454 T
(stack) 494.41 454 T
(and) 522.67 454 T
(there) 90 440 T
(are) 116.99 440 T
(no) 134.65 440 T
(stack) 149.65 440 T
(frames) 177.31 440 T
(belo) 212.96 440 T
(w) 233.33 440 T
(it.) 245 440 T
(It) 257.67 440 T
(should) 268.01 440 T
(return) 303.01 440 T
2 10 Q
(gcf_not_me) 334.67 440 T
1 12 Q
(if) 397.67 440 T
2 10 Q
(in) 408.01 440 T
1 12 Q
(is) 423.01 440 T
(not) 434.02 440 T
(the) 452.36 440 T
(correct) 470.02 440 T
(type) 506.34 440 T
(of) 530 440 T
(stack) 90 426 T
(frame) 119.5 426 T
(for) 152.32 426 T
(this) 171.15 426 T
2 10 Q
(FrameStepper) 193.33 426 T
1 12 Q
(to) 270.17 426 T
(w) 284.35 426 T
(alk) 292.89 426 T
(through.) 312.39 426 T
(Stackw) 357.56 426 T
(alk) 392.77 426 T
(erAPI) 407.32 426 T
(will) 440.81 426 T
(then) 464.32 426 T
(attempt) 489.83 426 T
(to) 530.66 426 T
(locate) 90 412 T
(another) 121.57 412 T
2 10 Q
(FrameStepper) 160.47 412 T
1 12 Q
(to) 235.38 412 T
(handle) 247.62 412 T
2 10 Q
(in) 282.53 412 T
1 12 Q
(or) 297.44 412 T
(abort) 310.35 412 T
(the) 337.92 412 T
(stackw) 355.49 412 T
(alk.) 388.7 412 T
(It) 409.27 412 T
(should) 419.52 412 T
(return) 454.43 412 T
2 10 Q
(gcf_error) 486 412 T
1 12 Q
(if there w) 90 398 T
(as an error and the stack w) 135.86 398 T
(alk should be aborted.) 263.7 398 T
2 10 Q
(virtual void registerStepperGroup\050StepperGroup &steppergroup\051) 72 371.33 T
1 12 Q
(This) 90 344 T
(method) 115.02 344 T
(is) 154.71 344 T
(used) 166.4 344 T
(to) 192.08 344 T
(notify) 205.1 344 T
(a) 237.45 344 T
2 10 Q
(FrameStepper) 246.47 344 T
1 12 Q
(when) 322.15 344 T
(Stackw) 351.83 344 T
(alk) 387.04 344 T
(erAPI) 401.58 344 T
(adds) 433.92 344 T
(it) 459.61 344 T
(to) 469.96 344 T
(a) 482.99 344 T
2 10 Q
(Stepper-) 492 344 T
(Group) 90 330 T
1 12 Q
(.) 120 330 T
(The) 125.9 330 T
2 10 Q
(StepperGroup) 147.46 330 T
1 12 Q
(to) 222.36 330 T
(which) 234.6 330 T
(this) 266.83 330 T
2 10 Q
(FrameStepper) 287.07 330 T
1 12 Q
(is) 361.97 330 T
(being) 372.87 330 T
(added) 402.43 330 T
(is) 433.99 330 T
(passed) 444.89 330 T
(in) 479.79 330 T
(parameter) 492.02 330 T
2 10 Q
(steppergroup) 90 316 T
1 12 Q
(.) 162 316 T
(This) 168.89 316 T
(method) 194.11 316 T
(can) 234 316 T
(be) 254.54 316 T
(used) 269.76 316 T
(to) 295.64 316 T
(initialize) 308.86 316 T
(the) 354.75 316 T
2 10 Q
(FrameStepper) 373.3 316 T
1 12 Q
(\050in) 449.19 316 T
(addition) 466.4 316 T
(to) 509.63 316 T
(an) 522.85 316 T
(y) 534 316 T
2 10 Q
(FrameStepper) 90 302 T
1 12 Q
( constructor\051.) 162 302 T
2 10 Q
(virtual unsigned getPriority\050\051 = 0) 72 275.33 T
1 12 Q
(This) 90 248 T
(method) 114.86 248 T
(is) 154.38 248 T
(used) 165.91 248 T
(by) 191.43 248 T
(the) 206.96 248 T
2 10 Q
(StepperGroup) 225.15 248 T
1 12 Q
(to) 300.67 248 T
(decide) 313.53 248 T
(which) 348.38 248 T
2 10 Q
(FrameStepper) 381.23 248 T
1 12 Q
(to) 456.75 248 T
(use) 469.61 248 T
(if) 489.14 248 T
(multiple) 499.99 248 T
2 10 Q
(FrameStepper) 90 234 T
1 12 Q
(objects) 165.15 234 T
(are) 202.29 234 T
(re) 220.09 234 T
(gistered) 229.24 234 T
(o) 270.38 234 T
(v) 276.2 234 T
(er) 282.02 234 T
(the) 294.49 234 T
(same) 312.3 234 T
(address) 340.11 234 T
(range) 379.25 234 T
(\050see) 409.05 234 T
2 10 Q
(addAddressRanges) 431.52 234 T
1 12 Q
(in) 530.66 234 T
(Section) 90 220 T
(3.5.3) 129 220 T
(for) 156.02 220 T
(more) 173.04 220 T
(information) 200.72 220 T
(about) 260.4 220 T
(address) 290.09 220 T
(ranges\051.) 329.1 220 T
(This) 370.44 220 T
(method) 394.8 220 T
(returns) 433.82 220 T
(an) 470.16 220 T
(inte) 484.51 220 T
(ger) 502.33 220 T
(rep-) 520.68 220 T
(resenting a priority le) 90 206 T
(v) 192.68 206 T
(el, the lo) 198.5 206 T
(wer the number the higher the priority) 239.87 206 T
(.) 422.39 206 T
(The) 90 178 T
(def) 112.19 178 T
(ault) 127.39 178 T
2 10 Q
(FrameStepper) 148.92 178 T
1 12 Q
(objects) 224.45 178 T
(pro) 261.97 178 T
(vided) 277.79 178 T
(by) 307.98 178 T
(Stackw) 323.51 178 T
(alk) 358.72 178 T
(erAPI) 373.26 178 T
(all) 405.44 178 T
(return) 420.97 178 T
(priorities) 453.16 178 T
(between) 500.02 178 T
2 10 Q
(0x1000) 90 164 T
1 12 Q
(and) 130.36 164 T
2 10 Q
(0x2000) 152.05 164 T
1 12 Q
(.) 188.05 164 T
(If) 195.4 164 T
(tw) 207.76 164 T
(o) 219.64 164 T
2 10 Q
(FrameStepper) 229.99 164 T
1 12 Q
(objects) 306.35 164 T
(ha) 344.71 164 T
(v) 355.8 164 T
(e) 361.62 164 T
(an) 371.3 164 T
(o) 386.99 164 T
(v) 392.81 164 T
(erlapping) 398.63 164 T
(address) 448.31 164 T
(range,) 488.66 164 T
(and) 522.67 164 T
(the) 90 150 T
(y ha) 104.48 150 T
(v) 124.57 150 T
(e the same priority) 130.39 150 T
(, then the order in which the) 219.26 150 T
(y are used is unde\336ned.) 354.06 150 T
4 F
(3.5.3 Class StepperGr) 72 122 T
(oup) 183.78 122 T
7 F
(Defined In) 72 99 T
2 10 Q
(: steppergroup.h) 144 99 T
FMENDPAGE
%%EndPage: "17" 18
%%Page: "18" 19
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 18) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(The) 90 712 T
2 10 Q
(StepperGroup) 114.43 712 T
1 12 Q
(class) 192.2 712 T
(contains) 221.3 712 T
(a) 267.07 712 T
(collection) 278.17 712 T
(of) 331.27 712 T
2 10 Q
(FrameStepper) 347.03 712 T
1 12 Q
(objects.) 424.8 712 T
(The) 467.57 712 T
2 10 Q
(Stepper-) 492 712 T
(Group) 72 698 T
1 12 Q
(\325) 102 698 T
(s) 105.34 698 T
(primary) 114.1 698 T
(job) 156.19 698 T
(is) 175.63 698 T
(to) 187.73 698 T
(decide) 201.17 698 T
(which) 236.59 698 T
2 10 Q
(FrameStepper) 270.01 698 T
1 12 Q
(should) 346.11 698 T
(be) 382.22 698 T
(used) 397.64 698 T
(to) 423.74 698 T
(w) 437.17 698 T
(alk) 445.72 698 T
(through) 464.48 698 T
(a) 505.91 698 T
(stack) 515.34 698 T
(frame) 72 684 T
(gi) 103.84 684 T
(v) 112.88 684 T
(en) 118.7 684 T
(a) 133.88 684 T
(return) 143.07 684 T
(address.) 175.58 684 T
(The) 218.42 684 T
(def) 240.94 684 T
(ault) 256.14 684 T
2 10 Q
(StepperGroup) 278 684 T
1 12 Q
(k) 353.86 684 T
(eeps) 359.74 684 T
(a) 384.92 684 T
(set) 394.1 684 T
(of) 411.29 684 T
(address) 425.14 684 T
(ranges) 464.99 684 T
(for) 500.17 684 T
(each) 518.02 684 T
2 10 Q
(FrameStepper) 72 670 T
1 12 Q
(.) 143.34 670 T
(If) 149.72 670 T
(multiple) 161.09 670 T
2 10 Q
(FrameStepper) 204.48 670 T
1 12 Q
(objects) 279.86 670 T
(o) 317.24 670 T
(v) 323.06 670 T
(erlap) 328.88 670 T
(an) 356.25 670 T
(address,) 370.96 670 T
(then) 413.33 670 T
(the) 437.37 670 T
(def) 455.42 670 T
(ault) 470.62 670 T
2 10 Q
(Stepper-) 492 670 T
(Group) 72 656 T
1 12 Q
( will use a priority system to decide.) 102 656 T
2 10 Q
(StepperGroup) 90 640 T
1 12 Q
(pro) 167.3 640 T
(vides) 183.12 640 T
(both) 213.74 640 T
(an) 240.38 640 T
(interf) 257.01 640 T
(ace) 282.88 640 T
(and) 304.16 640 T
(a) 326.79 640 T
(def) 337.41 640 T
(ault) 352.62 640 T
(implementation) 375.92 640 T
(of) 456.55 640 T
(that) 471.85 640 T
(interf) 495.14 640 T
(ace.) 521.02 640 T
(Users) 72 626 T
(who) 102.62 626 T
(w) 126.58 626 T
(ant) 135.12 626 T
(to) 153.08 626 T
(customize) 165.71 626 T
(the) 217.66 626 T
2 10 Q
(StepperGroup) 235.62 626 T
1 12 Q
(should) 310.92 626 T
(inherit) 346.22 626 T
(from) 380.84 626 T
(this) 407.46 626 T
(class) 428.1 626 T
(and) 454.72 626 T
(re-implement) 475.34 626 T
(an) 72 612 T
(y of the belo) 83.15 612 T
(w virtual functions.) 143.17 612 T
2 10 Q
(virtual StepperGroup\050Walker *walker\051) 72 587.33 T
1 12 Q
(This f) 90 560 T
(actory constructor creates a ne) 118.21 560 T
(w) 263.86 560 T
2 10 Q
(StepperGroup) 275.52 560 T
1 12 Q
( object associated with) 347.52 560 T
2 10 Q
(walker) 459.5 560 T
1 12 Q
(.) 494.84 560 T
2 10 Q
(virtual bool addStepper\050FrameStepper *stepper\051) 72 533.33 T
1 12 Q
(This) 90 506 T
(method) 115.81 506 T
(adds) 156.27 506 T
(a) 182.74 506 T
(ne) 192.54 506 T
(w) 203.56 506 T
2 10 Q
(FrameStepper) 216.7 506 T
1 12 Q
(to) 293.17 506 T
(this) 306.97 506 T
2 10 Q
(StepperGroup) 328.78 506 T
1 12 Q
(.) 400.78 506 T
(The) 408.25 506 T
(ne) 431.38 506 T
(wly) 442.41 506 T
(added) 464.88 506 T
2 10 Q
(stepper) 498 506 T
1 12 Q
(will) 90 492 T
(be) 111.51 492 T
(track) 125.68 492 T
(ed) 149.55 492 T
(by) 163.72 492 T
(this) 178.56 492 T
2 10 Q
(StepperGroup) 198.74 492 T
1 12 Q
(,) 270.74 492 T
(and) 276.59 492 T
(it) 296.76 492 T
(will) 306.27 492 T
(be) 327.78 492 T
(considered) 341.95 492 T
(for) 396.78 492 T
(use) 413.61 492 T
(when) 432.45 492 T
(w) 461.28 492 T
(alking) 469.83 492 T
(through) 502.67 492 T
(stack frames.) 90 478 T
(This method returns true if it successfully added the) 90 450 T
2 10 Q
(FrameStepper) 342.3 450 T
1 12 Q
(, and f) 413.82 450 T
(alse on error) 444.02 450 T
(.) 503.34 450 T
2 10 Q
(virtual bool addAddressRanges\050) 72 423.33 T
(const std::vector<std::pair<Address, Address> >&ranges,) 108 411.33 T
(const FrameStepper *stepper\051 = 0) 108 399.33 T
1 12 Q
(This) 90 372 T
(method) 116.43 372 T
(associates) 157.53 372 T
(a) 210.62 372 T
(set) 221.05 372 T
(of) 239.48 372 T
(address) 254.57 372 T
(ranges,) 295.66 372 T
2 10 Q
(ranges) 335.08 372 T
1 12 Q
(,) 371.08 372 T
(with) 379.18 372 T
(a) 405.61 372 T
2 10 Q
(FrameStepper) 416.04 372 T
1 12 Q
(,) 487.56 372 T
2 10 Q
(stepper) 495.66 372 T
1 12 Q
(.) 537 372 T
(These) 90 358 T
(address) 122.19 358 T
(ranges) 161.71 358 T
(contain) 196.56 358 T
(objects) 235.42 358 T
(in) 272.95 358 T
(the) 285.82 358 T
(process\325) 304.02 358 T
(code) 347.54 358 T
(space) 373.73 358 T
(that) 403.91 358 T
(create) 425.44 358 T
(stack) 457.62 358 T
(frames) 485.82 358 T
(that) 522 358 T
2 10 Q
(stepper) 90 344 T
1 12 Q
( can w) 132 344 T
(alk through.) 163.2 344 T
(The) 90 316 T
(def) 112.11 316 T
(ault) 127.31 316 T
2 10 Q
(StepperGroup) 148.76 316 T
1 12 Q
(will) 224.21 316 T
(use) 246.33 316 T
2 10 Q
(stepper) 265.77 316 T
1 12 Q
(to) 311.22 316 T
(w) 324.01 316 T
(alk) 332.55 316 T
(through) 350.66 316 T
(a) 391.44 316 T
2 10 Q
(Frame) 400.22 316 T
1 12 Q
(object) 433.67 316 T
(\050by) 466.44 316 T
(returning) 485.89 316 T
(it) 533.33 316 T
(from) 90 302 T
2 10 Q
(findStepperForAddr) 117.1 302 T
1 12 Q
(\051) 225.1 302 T
(if) 232.86 302 T
(the) 243.97 302 T
2 10 Q
(Frame) 262.4 302 T
1 12 Q
(object\325) 296.17 302 T
(s) 328.83 302 T
(RA) 337.27 302 T
(f) 357.71 302 T
(alls) 361.58 302 T
(within) 382.02 302 T
(a) 416.46 302 T
(range) 425.56 302 T
(re) 455.98 302 T
(gistered) 465.13 302 T
(by) 506.89 302 T
(this) 522.66 302 T
(method.) 90 288 T
(A) 145.25 288 T
2 10 Q
(Frame) 170.16 288 T
1 12 Q
(object,) 216.41 288 T
2 10 Q
(frame) 264.98 288 T
1 12 Q
(,) 294.98 288 T
(f) 314.23 288 T
(alls) 318.11 288 T
(within) 351.02 288 T
(a) 397.94 288 T
(range,) 419.52 288 T
2 10 Q
(range[i]) 465.42 288 T
1 12 Q
(,) 513.42 288 T
(if) 532.67 288 T
(.) 374.67 273.33 T
(If) 391.78 273.33 T
(multiple) 413.88 273.33 T
2 10 Q
(FrameStepper) 468 273.33 T
1 12 Q
(objects) 90 258.33 T
(ha) 128.56 258.33 T
(v) 139.65 258.33 T
(e) 145.46 258.33 T
(o) 155.35 258.33 T
(v) 161.17 258.33 T
(erlapping) 166.99 258.33 T
(ranges,) 216.88 258.33 T
(then) 255.76 258.33 T
(the) 280.98 258.33 T
(def) 300.21 258.33 T
(ault) 315.41 258.33 T
2 10 Q
(StepperGroup) 337.97 258.33 T
1 12 Q
(will) 414.54 258.33 T
(use) 437.77 258.33 T
(the) 458.33 258.33 T
(one) 477.55 258.33 T
(with) 499.44 258.33 T
(the) 525.34 258.33 T
(highest priority \336rst \050see) 90 244.33 T
2 10 Q
(FrameStepper::getPriority) 210.66 244.33 T
1 12 Q
( in Section) 360.66 244.33 T
(3.5.2\051.) 415 244.33 T
(F) 90 216.33 T
(or) 96.49 216.33 T
(e) 111.57 216.33 T
(xample,) 116.72 216.33 T
(suppose) 160.13 216.33 T
(this) 203.87 216.33 T
2 10 Q
(FrameStepper) 226.29 216.33 T
1 12 Q
(w) 303.37 216.33 T
(as) 311.92 216.33 T
(designed) 326.99 216.33 T
(to) 374.73 216.33 T
(w) 389.15 216.33 T
(alk) 397.7 216.33 T
(through) 417.44 216.33 T
(a) 459.85 216.33 T
(signal) 470.26 216.33 T
(handler) 504.01 216.33 T
(frame) 90 202.33 T
(on) 121.13 202.33 T
(Linux/x86.) 136.27 202.33 T
(During) 192.42 202.33 T
(initialization) 229.56 202.33 T
(the) 293.38 202.33 T
2 10 Q
(FrameStepper) 311.19 202.33 T
1 12 Q
(inspects) 386.34 202.33 T
(the) 428.14 202.33 T
(tar) 445.95 202.33 T
(get) 458.4 202.33 T
(process\325) 476.21 202.33 T
(vsy-) 519.34 202.33 T
(scall) 90 185.13 T
(page) 116.37 185.13 T
1 9.6 Q
(2) 139.02 189.93 T
1 12 Q
(and) 148.19 185.13 T
(\336nds) 169.89 185.13 T
(that) 197.6 185.13 T
(signal) 219.98 185.13 T
(handlers) 253.01 185.13 T
(will) 298.04 185.13 T
(appear) 321.08 185.13 T
(on) 357.43 185.13 T
(the) 373.81 185.13 T
(call) 392.84 185.13 T
(stack) 414.54 185.13 T
(with) 443.57 185.13 T
(a) 469.28 185.13 T
(RA) 478.98 185.13 T
(between) 500.02 185.13 T
2 10 Q
(0xffffe000) 90 171.13 T
1 12 Q
(and) 153.54 171.13 T
2 10 Q
(0xffffe400) 174.42 171.13 T
1 12 Q
(.) 234.42 171.13 T
(It) 240.96 171.13 T
(then) 251.84 171.13 T
(re) 276.04 171.13 T
(gisters) 285.19 171.13 T
(this) 320.06 171.13 T
(range) 340.95 171.13 T
(with) 371.14 171.13 T
(its) 396.02 171.13 T
2 10 Q
(StepperGroup) 410.91 171.13 T
1 12 Q
(using) 486.45 171.13 T
2 10 Q
(add-) 516 171.13 T
(AddressRanges) 90 157.13 T
1 12 Q
(.) 168 157.13 T
(If) 174.34 157.13 T
(the) 185.66 157.13 T
2 10 Q
(StepperGroup) 203.66 157.13 T
1 12 Q
(encounters) 279 157.13 T
(an) 334.32 157.13 T
(RA) 348.98 157.13 T
(in) 368.99 157.13 T
(this) 381.66 157.13 T
(range,) 402.34 157.13 T
(it) 435.32 157.13 T
(then) 445.33 157.13 T
(uses) 469.33 157.13 T
(the) 493.33 157.13 T
(signal) 511.33 157.13 T
(handler) 90 143.13 T
2 10 Q
(FrameStepper) 128.99 143.13 T
1 12 Q
( to w) 200.99 143.13 T
(alk through it.) 224.87 143.13 T
72 108 540 123 C
0 0 0 1 0 0 0 1 K
81 121 225 121 2 L
0.5 H
2 Z
0 X
N
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(2.) 90 101.33 T
(The) 100 101.33 T
(vsyscall) 117.8 101.33 T
(page) 152.28 101.33 T
(is) 173.41 101.33 T
(a) 182.34 101.33 T
(small) 189.03 101.33 T
(shared) 212.96 101.33 T
(object) 241.31 101.33 T
(that) 268.01 101.33 T
(is) 285.26 101.33 T
(loaded) 294.18 101.33 T
(by) 323.1 101.33 T
(the) 335.35 101.33 T
(k) 349.83 101.33 T
(ernel) 354.73 101.33 T
(into) 376.97 101.33 T
(e) 394.79 101.33 T
(v) 398.98 101.33 T
(ery) 403.83 101.33 T
(process\325) 418.85 101.33 T
(address) 454.43 101.33 T
(space.) 486.67 101.33 T
(It) 513.64 101.33 T
(is part of Linux\325) 102 89.33 T
(s mechanism for quickly transferring control between the k) 166.72 89.33 T
(ernel and user space. It also) 403.24 89.33 T
(pro) 102 77.33 T
(vides information about ho) 115.18 77.33 T
(w to stack w) 222.98 77.33 T
(alk through system calls and signal handlers.) 273.15 77.33 T
90 268.33 374.67 282 C
0 0 0 1 0 0 0 1 K
2 10 Q
0 X
(range[i].first) 97.25 272.67 T
(frame.getRA\050\051) 193.83 272.67 T
(range[i].second) 284.42 272.67 T
8 12 Q
(<) 274.83 272.67 T
(\243) 184.25 272.67 T
-45 -45 657 837 C
0 0 0 1 0 0 0 1 K
FMENDPAGE
%%EndPage: "18" 19
%%Page: "19" 20
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 19) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(Suppose) 90 712 T
(another) 133.38 712 T
2 10 Q
(FrameStepper) 172.07 712 T
1 12 Q
(w) 246.78 712 T
(as) 255.33 712 T
(designed) 268.03 712 T
(to) 313.4 712 T
(w) 325.45 712 T
(alk) 333.99 712 T
(through) 351.36 712 T
(re) 391.4 712 T
(gular) 400.55 712 T
(stack) 427.92 712 T
(frames) 455.29 712 T
(created) 490.65 712 T
(by) 528 712 T
(ABI-compliant) 90 698 T
(functions.) 166.38 698 T
(This) 217.77 698 T
2 10 Q
(FrameStepper) 242.83 698 T
1 12 Q
(will) 318.55 698 T
(be) 340.95 698 T
(used) 356 698 T
(as) 381.71 698 T
(a) 395.43 698 T
(general) 404.48 698 T
(catch-all) 443.52 698 T
(if) 488.56 698 T
(no) 499.62 698 T
(other) 515.34 698 T
2 10 Q
(FrameStepper) 90 684 T
1 12 Q
(can) 165.72 684 T
(w) 186.1 684 T
(alk) 194.65 684 T
(through) 213.04 684 T
(a) 254.09 684 T
2 10 Q
(Frame) 263.14 684 T
1 12 Q
(object.) 296.87 684 T
(The) 332.92 684 T
2 10 Q
(FrameStepper) 355.3 684 T
1 12 Q
(can) 431.03 684 T
(re) 451.41 684 T
(gister) 460.55 684 T
(itself) 490.94 684 T
(with) 518.66 684 T
(an) 90 670 T
(address) 104.5 670 T
(range) 143.66 670 T
(that) 173.48 670 T
(spans) 194.65 670 T
(the) 224.49 670 T
(whole) 242.32 670 T
(address) 274.82 670 T
(space,) 313.98 670 T
(and) 346.8 670 T
(a) 367.3 670 T
(lo) 375.8 670 T
(wer) 384.84 670 T
(priority) 406 670 T
(than) 445.17 670 T
(the) 469 670 T
(signal) 486.84 670 T
(han-) 518.68 670 T
(dler) 90 656 T
2 10 Q
(FrameStepper) 113.24 656 T
1 12 Q
(.) 184.58 656 T
(The) 192.15 656 T
2 10 Q
(StepperGroup) 215.39 656 T
1 12 Q
(will) 291.97 656 T
(then) 315.22 656 T
(use) 340.46 656 T
(the) 361.03 656 T
(signal) 380.28 656 T
(handler) 413.52 656 T
2 10 Q
(FrameStepper) 454.09 656 T
1 12 Q
(to) 530.66 656 T
(step through signal handlers, and this) 90 642 T
2 10 Q
(FrameStepper) 271.66 642 T
1 12 Q
( to step through an) 343.66 642 T
(y other) 432.8 642 T
2 10 Q
(Frame) 469.46 642 T
1 12 Q
( object.) 499.46 642 T
(This method returns) 90 614 T
2 10 Q
(true) 189.66 614 T
1 12 Q
( on success and) 213.66 614 T
2 10 Q
(false) 290.98 614 T
1 12 Q
( if there is an error) 320.98 614 T
(.) 409.28 614 T
2 10 Q
(virtual bool removeAddressRanges\050) 72 587.33 T
(const std::vector<std::pair<Address, Address > > &ranges,) 108 575.33 T
(const FrameStepper *stepper\051 = 0) 108 563.33 T
1 12 Q
(This) 90 536 T
(method) 115.65 536 T
(remo) 155.96 536 T
(v) 180.44 536 T
(es) 186.26 536 T
(a) 200.56 536 T
2 10 Q
(FrameStepper) 210.2 536 T
1 12 Q
(\325) 282.2 536 T
(s) 285.54 536 T
(address) 294.52 536 T
(range) 334.81 536 T
(from) 365.77 536 T
(a) 393.41 536 T
2 10 Q
(StepperGroup) 403.05 536 T
1 12 Q
(.) 475.05 536 T
(See) 482.36 536 T
2 10 Q
(addAd-) 504 536 T
(dressRange) 90 522 T
1 12 Q
(for) 153.67 522 T
(more) 171.33 522 T
(details) 199.65 522 T
(on) 234.65 522 T
(ho) 250.32 522 T
(w) 262.02 522 T
2 10 Q
(StepperGroup) 274.35 522 T
1 12 Q
(and) 350.02 522 T
2 10 Q
(FrameStepper) 371.02 522 T
1 12 Q
(objects) 446.68 522 T
(use) 484.35 522 T
(address) 504.01 522 T
(ranges.) 90 508 T
(The) 129.74 508 T
(address) 153.83 508 T
(ranges) 195.24 508 T
(speci\336ed) 231.98 508 T
(by) 280.06 508 T
2 10 Q
(ranges) 297.49 508 T
1 12 Q
(will) 338.91 508 T
(be) 363 508 T
(deleted) 379.76 508 T
(from) 419.83 508 T
2 10 Q
(stepper) 448.58 508 T
1 12 Q
(\325) 490.58 508 T
(s) 493.92 508 T
(address) 504.01 508 T
(ranges.) 90 494 T
(F) 127.85 494 T
(or) 134.34 494 T
(e) 147.87 494 T
(xample,) 153.01 494 T
(if) 194.87 494 T
(the) 205.73 494 T
(address) 223.92 494 T
(range) 263.44 494 T
2 10 Q
(0x1000) 293.62 494 T
1 12 Q
(to) 333.15 494 T
2 10 Q
(0x2000) 346.02 494 T
1 12 Q
(w) 385.54 494 T
(as) 394.09 494 T
(re) 407.61 494 T
(gistered) 416.76 494 T
(to) 458.28 494 T
(a) 471.14 494 T
2 10 Q
(FrameStep-) 480 494 T
(per) 90 480 T
1 12 Q
(named) 113.35 480 T
2 10 Q
(foo) 150.69 480 T
1 12 Q
(,) 168.69 480 T
(and) 177.04 480 T
(then) 199.72 480 T
2 10 Q
(removeAddressRanges) 225.74 480 T
1 12 Q
(w) 345.09 480 T
(as) 353.63 480 T
(used) 368.98 480 T
(to) 396.33 480 T
(remo) 411.02 480 T
(v) 435.49 480 T
(e) 441.32 480 T
(the) 451.99 480 T
(address) 472.01 480 T
(range) 513.35 480 T
2 10 Q
(0x1500) 90 466 T
1 12 Q
(to) 130.38 466 T
2 10 Q
(0x1600) 144.1 466 T
1 12 Q
(out) 184.48 466 T
(of) 204.19 466 T
2 10 Q
(foo) 218.57 466 T
1 12 Q
(,) 236.57 466 T
(then) 243.95 466 T
2 10 Q
(foo) 268.99 466 T
1 12 Q
(w) 291.37 466 T
(ould) 299.92 466 T
(ha) 325.63 466 T
(v) 336.72 466 T
(e) 342.54 466 T
(tw) 352.25 466 T
(o) 364.13 466 T
(address) 374.51 466 T
(ranges) 414.88 466 T
(associated) 450.58 466 T
(with) 504.27 466 T
(it:) 529.99 466 T
2 10 Q
(0x1000) 90 452 T
1 12 Q
( to) 126 452 T
2 10 Q
(0x1500) 141.34 452 T
1 12 Q
( and) 177.34 452 T
2 10 Q
(0x1600) 200.66 452 T
1 12 Q
( to) 236.66 452 T
2 10 Q
(0x2000) 252 452 T
1 12 Q
(.) 288 452 T
(This function returns true on success and f) 90 424 T
(alse on error) 293.51 424 T
(.) 352.82 424 T
2 10 Q
(virtual bool findStepperForAddr\050Address addr, FrameStepper* &out,) 72 397.33 T
(const FrameStepper *last_tried = NULL\051) 108 385.33 T
1 12 Q
(Gi) 90 358 T
(v) 101.7 358 T
(en) 107.52 358 T
(an) 124.27 358 T
(address) 141.01 358 T
(that) 182.42 358 T
(points) 205.84 358 T
(into) 240.6 358 T
(a) 264.69 358 T
(function) 275.44 358 T
(\050or) 320.86 358 T
(function-lik) 340.27 358 T
(e) 396.81 358 T
(object\051,) 407.56 358 T
2 10 Q
(addr) 449.3 358 T
1 12 Q
(,) 472.82 358 T
(this) 481.24 358 T
(method) 504 358 T
(decides) 90 344 T
(which) 129.48 344 T
2 10 Q
(FrameStepper) 162.3 344 T
1 12 Q
(should) 237.79 344 T
(be) 273.28 344 T
(used) 288.1 344 T
(to) 313.58 344 T
(w) 326.41 344 T
(alk) 334.96 344 T
(through) 353.11 344 T
(the) 393.93 344 T
(stack) 412.09 344 T
(frame) 440.24 344 T
(created) 471.71 344 T
(by) 509.85 344 T
(the) 525.34 344 T
(function at that address. A pointer to the) 90 330 T
2 10 Q
(FrameStepper) 286.31 330 T
1 12 Q
( will be returned in parameter) 358.31 330 T
2 10 Q
(out) 503.6 330 T
1 12 Q
(.) 521.6 330 T
(It) 90 302 T
(may) 101.03 302 T
(be) 125.39 302 T
(possible) 140.42 302 T
(that) 183.45 302 T
(the) 205.15 302 T
2 10 Q
(FrameStepper) 223.51 302 T
1 12 Q
(this) 299.21 302 T
(method) 320.25 302 T
(decides) 359.95 302 T
(on) 399.64 302 T
(is) 415.33 302 T
(unable) 427.04 302 T
(to) 462.73 302 T
(w) 475.76 302 T
(alk) 484.31 302 T
(through) 502.67 302 T
(the) 90 288 T
(stack) 107.9 288 T
(frame) 135.8 288 T
(\050it) 167.02 288 T
(returns) 180.93 288 T
2 10 Q
(gcf_not_me) 217.49 288 T
1 12 Q
(from) 280.73 288 T
2 10 Q
(FrameStepper::getCallerFrame) 307.3 288 T
1 12 Q
(\051.) 475.3 288 T
(In) 485.53 288 T
(this) 498.77 288 T
(case) 519.35 288 T
(Stackw) 90 274 T
(alk) 125.21 274 T
(erAPI) 139.75 274 T
(will) 171.91 274 T
(call) 194.08 274 T
2 10 Q
(findStepperForAddr) 214.91 274 T
1 12 Q
(ag) 326.41 274 T
(ain) 337.68 274 T
(with) 355.85 274 T
(the) 380.69 274 T
2 10 Q
(last_tried) 398.85 274 T
1 12 Q
(parameter) 462.35 274 T
(set) 513.83 274 T
(to) 530.66 274 T
(the) 90 260 T
(f) 108.79 260 T
(ailed) 112.67 260 T
2 10 Q
(FrameStepper) 140.12 260 T
1 12 Q
(.) 211.46 260 T
2 10 Q
(findStepperForAddr) 218.58 260 T
1 12 Q
(should) 330.71 260 T
(then) 366.84 260 T
(\336nd) 391.63 260 T
(another) 414.42 260 T
2 10 Q
(FrameStepper) 454.54 260 T
1 12 Q
(to) 530.66 260 T
(use.) 90 246 T
(P) 111.82 246 T
(arameter) 118.31 246 T
2 10 Q
(last_tried) 163.12 246 T
1 12 Q
(will) 225.94 246 T
(be) 247.44 246 T
(set) 261.59 246 T
(to) 277.75 246 T
2 10 Q
(NULL) 289.91 246 T
1 12 Q
(the) 319.57 246 T
(\336rst) 337.06 246 T
(time) 358.55 246 T
2 10 Q
(getStepperToUse) 382.72 246 T
1 12 Q
(is) 475.54 246 T
(called) 486.37 246 T
(for) 517.85 246 T
(a) 534.67 246 T
(stack frame.) 90 232 T
(The) 90 204 T
(def) 111.61 204 T
(ault) 126.82 204 T
(v) 147.77 204 T
(ersion) 153.59 204 T
(of) 185.88 204 T
(this) 198.83 204 T
(method) 219.12 204 T
(uses) 258.08 204 T
(address) 281.69 204 T
(ranges) 320.64 204 T
(to) 354.91 204 T
(decide) 367.2 204 T
(which) 401.48 204 T
2 10 Q
(FrameStepper) 433.76 204 T
1 12 Q
(to) 508.71 204 T
(use.) 521 204 T
(The) 90 190 T
(address) 111.73 190 T
(ranges) 150.79 190 T
(are) 185.18 190 T
(contained) 202.9 190 T
(within) 252.63 190 T
(the) 286.38 190 T
(process\325) 304.11 190 T
(code) 347.17 190 T
(space,) 372.89 190 T
(and) 405.62 190 T
(map) 426.02 190 T
(a) 449.75 190 T
(piece) 458.15 190 T
(of) 486.54 190 T
(the) 499.61 190 T
(code) 517.34 190 T
(space) 90 176 T
(to) 119.4 176 T
(a) 131.48 176 T
(FrameStepper) 139.55 176 T
(that) 209.61 176 T
(can) 230.36 176 T
(w) 249.76 176 T
(alk) 258.3 176 T
(through) 275.71 176 T
(stack) 315.79 176 T
(frames) 343.19 176 T
(created) 378.59 176 T
(in) 415.97 176 T
(that) 428.05 176 T
(code) 448.8 176 T
(range.) 474.2 176 T
(If) 506.6 176 T
(mul-) 517.33 176 T
(tiple) 90 162 T
2 10 Q
(FrameStepper) 114.93 162 T
1 12 Q
(objects) 190.53 162 T
(share) 228.13 162 T
(the) 257.05 162 T
(same) 275.31 162 T
(range,) 303.57 162 T
(then) 336.82 162 T
(the) 361.08 162 T
(one) 379.34 162 T
(with) 400.27 162 T
(the) 425.2 162 T
(highest) 443.46 162 T
(priority) 481.73 162 T
(will) 521.33 162 T
(be tried \336rst.) 90 148 T
(This method returns) 90 120 T
2 10 Q
(true) 189.66 120 T
1 12 Q
( on success and) 213.66 120 T
2 10 Q
(false) 290.98 120 T
1 12 Q
( on f) 320.98 120 T
(ailure.) 342.85 120 T
2 10 Q
(Walker *getWalker\050\051 const) 72 93.33 T
FMENDPAGE
%%EndPage: "19" 20
%%Page: "20" 21
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 20) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(This method returns the) 90 712 T
2 10 Q
(Walker) 207.32 712 T
1 12 Q
( object that associated with this) 243.32 712 T
2 10 Q
(StepperGroup) 396.65 712 T
1 12 Q
(.) 468.65 712 T
4 F
(3.5.4 Class Pr) 72 684 T
(ocessState) 141.78 684 T
7 F
(Defined In) 72 661 T
2 10 Q
(: procstate.h) 144 661 T
1 12 Q
(The) 90 642 T
2 10 Q
(ProcessState) 111.92 642 T
1 12 Q
(class) 187.17 642 T
(is) 213.75 642 T
(a) 225.01 642 T
(virtual) 233.59 642 T
(class) 268.18 642 T
(that) 294.76 642 T
(de\336nes) 316.02 642 T
(an) 353.27 642 T
(interf) 367.85 642 T
(ace) 393.72 642 T
(through) 412.96 642 T
(which) 453.55 642 T
(Stackw) 486.13 642 T
(alk-) 521.34 642 T
(erAPI) 72 628 T
(can) 103.97 628 T
(access) 123.95 628 T
(the) 157.91 628 T
(tar) 175.9 628 T
(get) 188.34 628 T
(process.) 206.32 628 T
(It) 248.63 628 T
(allo) 259.28 628 T
(ws) 276.98 628 T
(access) 293.63 628 T
(to) 327.6 628 T
(re) 340.25 628 T
(gisters) 349.4 628 T
(and) 384.05 628 T
(memory) 404.69 628 T
(,) 443.91 628 T
(and) 450.23 628 T
(pro) 470.87 628 T
(vides) 486.69 628 T
(basic) 515.34 628 T
(information) 72 614 T
(about) 131.69 614 T
(the) 161.37 614 T
(threads) 179.06 614 T
(in) 216.74 614 T
(the) 229.1 614 T
(tar) 246.78 614 T
(get) 259.23 614 T
(process.) 276.91 614 T
(Stackw) 318.92 614 T
(alk) 354.13 614 T
(erAPI) 368.67 614 T
(pro) 400.35 614 T
(vides) 416.17 614 T
(tw) 444.52 614 T
(o) 456.4 614 T
(def) 465.42 614 T
(ault) 480.63 614 T
(types) 501.65 614 T
(of) 530 614 T
2 10 Q
(ProcessState) 72 600 T
1 12 Q
(objects:) 147.08 600 T
2 10 Q
(ProcSelf) 187.5 600 T
1 12 Q
(does) 241.66 600 T
(a) 266.74 600 T
(\336rst) 275.15 600 T
(party) 296.91 600 T
(stackw) 324.65 600 T
(alk,) 357.86 600 T
(and) 378.6 600 T
2 10 Q
(ProcDebug) 399.02 600 T
1 12 Q
(does) 456.1 600 T
(a) 481.18 600 T
(third) 489.59 600 T
(party) 515.34 600 T
(stackw) 72 586 T
(alk.) 105.2 586 T
(A) 90 570 T
(ne) 101.49 570 T
(w) 112.52 570 T
2 10 Q
(ProcessState) 124 570 T
1 12 Q
(class) 201.65 570 T
(can) 227.8 570 T
(be) 247.28 570 T
(created) 261.44 570 T
(by) 298.9 570 T
(inheriting) 313.73 570 T
(from) 363.22 570 T
(this) 389.37 570 T
(class) 409.54 570 T
(and) 435.69 570 T
(implementing) 455.84 570 T
(the) 525.34 570 T
(follo) 72 556 T
(wing functions.) 94.37 556 T
2 10 Q
(virtual bool getRegValue\050Dyninst::MachRegister reg, Dyninst::THR_ID thread,) 72 531.33 T
(Dyninst::MachRegisterVal &val\051 = 0) 72 519.33 T
1 12 Q
(This) 90 492 T
(method) 114.2 492 T
(tak) 153.06 492 T
(es) 167.6 492 T
(a) 180.46 492 T
(re) 188.65 492 T
(gister) 197.79 492 T
(name) 227.32 492 T
(as) 256.17 492 T
(input,) 269.03 492 T
2 10 Q
(reg) 299.56 492 T
1 12 Q
(,) 317.56 492 T
(and) 323.42 492 T
(returns) 343.61 492 T
(the) 379.8 492 T
(v) 397.32 492 T
(alue) 403.02 492 T
(in) 425.88 492 T
(that) 438.08 492 T
(re) 458.94 492 T
(gister) 468.08 492 T
(in) 497.61 492 T
2 10 Q
(val) 509.8 492 T
1 12 Q
(in) 530.66 492 T
(the thread) 90 478 T
2 10 Q
(thread) 140.65 478 T
1 12 Q
(.) 176.65 478 T
(This method returns) 90 450 T
2 10 Q
(true) 189.66 450 T
1 12 Q
( on success and) 213.66 450 T
2 10 Q
(false) 290.98 450 T
1 12 Q
( on error) 320.98 450 T
(.) 361.63 450 T
2 10 Q
(virtual bool readMem\050void *dest, Address source, size_t size\051 = 0) 72 423.33 T
1 12 Q
(This) 90 396 T
(method) 115.01 396 T
(reads) 154.69 396 T
(memory) 183.68 396 T
(from) 227.35 396 T
(the) 254.36 396 T
(tar) 272.7 396 T
(get) 285.14 396 T
(process.) 303.48 396 T
(P) 346.14 396 T
(arameter) 352.64 396 T
2 10 Q
(dest) 398.29 396 T
1 12 Q
(should) 425.96 396 T
(point) 461.64 396 T
(to) 489.99 396 T
(an) 503 396 T
(allo-) 518 396 T
(cated) 90 382 T
(b) 118.33 382 T
(uf) 124.09 382 T
(fer) 133.79 382 T
(of) 150.11 382 T
(memory) 163.12 382 T
(at) 206.12 382 T
(least) 217.8 382 T
2 10 Q
(size) 242.8 382 T
1 12 Q
(bytes) 269.81 382 T
(in) 298.15 382 T
(the) 310.49 382 T
(host) 328.17 382 T
(process.) 351.18 382 T
(P) 393.18 382 T
(arameter) 399.67 382 T
2 10 Q
(source) 444.65 382 T
1 12 Q
(should) 483.66 382 T
(con-) 518.68 382 T
(tain) 90 368 T
(an) 111.74 368 T
(address) 126.82 368 T
(in) 166.55 368 T
(the) 179.62 368 T
(tar) 198.03 368 T
(get) 210.48 368 T
(process) 228.88 368 T
(to) 268.61 368 T
(be) 281.69 368 T
(read) 296.77 368 T
(from.) 321.16 368 T
(If) 351.23 368 T
(this) 362.97 368 T
(method) 384.05 368 T
(succeeds,) 423.79 368 T
2 10 Q
(size) 473.18 368 T
1 12 Q
(bytes) 500.93 368 T
(of) 530 368 T
(memory) 90 354 T
(is) 133.73 354 T
(copied) 145.47 354 T
(from) 181.2 354 T
2 10 Q
(source,) 208.26 354 T
1 12 Q
(stored) 257.74 354 T
(in) 290.8 354 T
2 10 Q
(dest) 303.87 354 T
1 12 Q
(,) 327.87 354 T
(and) 334.61 354 T
2 10 Q
(true) 355.67 354 T
1 12 Q
(is) 383.41 354 T
(returned.) 395.15 354 T
(This) 441.87 354 T
(method) 466.94 354 T
(returns) 506.68 354 T
2 10 Q
(false) 90 340 T
1 12 Q
( otherwise.) 120 340 T
2 10 Q
(virtual bool getThreadIds\050std::vector<Dyninst::THR_ID> &threads\051 = 0) 72 313.33 T
1 12 Q
(This) 90 286 T
(method) 115.39 286 T
(returns) 155.45 286 T
(a) 192.82 286 T
(list) 202.21 286 T
(of) 220.94 286 T
(threads) 234.99 286 T
(whose) 273.7 286 T
(call) 308.41 286 T
(stacks) 329.79 286 T
(can) 363.18 286 T
(be) 383.89 286 T
(w) 399.27 286 T
(alk) 407.81 286 T
(ed) 422.36 286 T
(in) 437.74 286 T
(the) 451.13 286 T
(tar) 469.85 286 T
(get) 482.29 286 T
(process.) 501.01 286 T
(Thread) 90 272 T
(are) 126.74 272 T
(returned) 144.15 272 T
(in) 186.9 272 T
(the) 198.99 272 T
2 10 Q
(threads) 216.42 272 T
1 12 Q
(v) 261.17 272 T
(ector) 266.99 272 T
(.) 290.32 272 T
(In) 296.08 272 T
(some) 308.84 272 T
(cases,) 336.93 272 T
(such) 368.01 272 T
(as) 392.76 272 T
(with) 405.52 272 T
(the) 429.61 272 T
(def) 447.04 272 T
(ault) 462.24 272 T
2 10 Q
(ProcDebug) 483 272 T
1 12 Q
(,) 537 272 T
(this) 90 258 T
(method) 110.61 258 T
(returns) 149.88 258 T
(all) 186.48 258 T
(of) 201.75 258 T
(the) 215.02 258 T
(threads) 232.96 258 T
(in) 270.88 258 T
(the) 283.49 258 T
(tar) 301.43 258 T
(get) 313.87 258 T
(process.) 331.81 258 T
(In) 374.07 258 T
(other) 387.33 258 T
(cases,) 415.27 258 T
(such) 446.86 258 T
(as) 472.12 258 T
(with) 485.39 258 T
2 10 Q
(Proc-) 510 258 T
(Self) 90 244 T
1 12 Q
(, this method returns only the calling thread.) 114 244 T
(The) 90 216 T
(\336rst) 112.25 216 T
(thread) 134.51 216 T
(in) 168.08 216 T
(the) 181 216 T
2 10 Q
(threads) 199.25 216 T
1 12 Q
(v) 244.84 216 T
(ector) 250.66 216 T
(\050inde) 278.23 216 T
(x) 302.71 216 T
(0\051) 312.3 216 T
(will) 325.88 216 T
(be) 348.14 216 T
(used) 363.06 216 T
(as) 388.64 216 T
(the) 402.22 216 T
(def) 420.47 216 T
(ault) 435.68 216 T
(thread) 457.26 216 T
(if) 490.84 216 T
(the) 501.76 216 T
(user) 520.01 216 T
(requests a stackw) 90 202 T
(alk without specifying an thread \050see) 173.86 202 T
2 10 Q
(Walker::WalkStack) 353.82 202 T
1 12 Q
(\051) 455.82 202 T
(This method returns) 90 174 T
2 10 Q
(true) 189.66 174 T
1 12 Q
( on success and) 213.66 174 T
2 10 Q
(false) 290.98 174 T
1 12 Q
( if an error occurs.) 320.98 174 T
2 10 Q
(virtual bool getDefaultThread\050Dyninst::THR_ID &default_tid\051 = 0) 72 147.33 T
1 12 Q
(This) 90 120 T
(method) 116.01 120 T
(returns) 156.68 120 T
(the) 194.67 120 T
(thread) 214 120 T
(representing) 248.66 120 T
(the) 312.65 120 T
(initial) 331.98 120 T
(process) 364.66 120 T
(in) 405.32 120 T
(the) 419.32 120 T
2 10 Q
(default_tid) 438.66 120 T
1 12 Q
(output) 509.33 120 T
(parameter) 90 106 T
(.) 137.32 106 T
FMENDPAGE
%%EndPage: "20" 21
%%Page: "21" 22
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 21) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(This method returns) 90 712 T
2 10 Q
(true) 189.66 712 T
1 12 Q
( on success and) 213.66 712 T
2 10 Q
(false) 290.98 712 T
1 12 Q
( if an error occurs.) 320.98 712 T
2 10 Q
(virtual Dyninst::PID getProcessID\050\051 = 0) 72 685.33 T
1 12 Q
(This) 90 658 T
(method) 115.6 658 T
(returns) 155.86 658 T
(a) 193.45 658 T
(process) 203.04 658 T
(ID) 243.29 658 T
(for) 260.21 658 T
(the) 278.47 658 T
(tar) 297.39 658 T
(get) 309.84 658 T
(process.) 328.77 658 T
(The) 372.02 658 T
(def) 394.94 658 T
(ault) 410.14 658 T
2 10 Q
(ProcessState) 432.4 658 T
1 12 Q
(imple-) 508.67 658 T
(mentations) 90 644 T
(\050) 147.24 644 T
2 10 Q
(ProcDebug) 151.23 644 T
1 12 Q
(and) 209.8 644 T
2 10 Q
(ProcSelf) 231.69 644 T
1 12 Q
(\051) 279.69 644 T
(will) 288.26 644 T
(return) 311.5 644 T
(a) 344.72 644 T
(PID) 354.62 644 T
(on) 378.52 644 T
(UNIX) 395.08 644 T
(systems) 429.64 644 T
(and) 472.21 644 T
(a) 494.1 644 T
2 10 Q
(HANDLE) 504 644 T
1 12 Q
(object on W) 90 630 T
(indo) 148.18 630 T
(ws) 169.21 630 T
4 11 Q
(3.5.4.1 Class LibraryState) 72 602.67 T
7 12 Q
(Defined In) 72 583 T
2 10 Q
(: procstate.h) 144 583 T
(LibraryState) 90 564 T
1 12 Q
(is) 164.85 564 T
(a) 175.71 564 T
(helper) 183.89 564 T
(class) 216.73 564 T
(for) 242.91 564 T
2 10 Q
(ProcessState) 259.76 564 T
1 12 Q
(that) 334.61 564 T
(pro) 355.46 564 T
(vides) 371.28 564 T
(information) 399.46 564 T
(about) 458.98 564 T
(the) 488.5 564 T
(current) 506.02 564 T
(DSOs) 72 550 T
(\050libraries) 104.57 550 T
(and) 151.79 550 T
(e) 173.02 550 T
(x) 178.16 550 T
(ecutables\051) 183.98 550 T
(that) 236.53 550 T
(are) 258.43 550 T
(loaded) 276.98 550 T
(into) 312.88 550 T
(a) 335.45 550 T
(process\325) 344.68 550 T
(address) 388.56 550 T
(space.) 428.45 550 T
2 10 Q
(FrameSteppers) 462 550 T
1 12 Q
(frequently) 72 536 T
(use) 126.05 536 T
(the) 146.78 536 T
2 10 Q
(LibraryState) 166.17 536 T
1 12 Q
(to) 242.9 536 T
(get) 256.97 536 T
(the) 276.36 536 T
(DSO) 295.76 536 T
(through) 324.49 536 T
(which) 366.55 536 T
(the) 400.61 536 T
(y) 415.09 536 T
(are) 425.82 536 T
(attempting) 445.21 536 T
(to) 501.27 536 T
(stack) 515.34 536 T
(w) 72 522 T
(alk.) 80.54 522 T
(Each Library is represented using a) 90 506 T
2 10 Q
(LibAddrPair) 262.62 506 T
1 12 Q
( object, which is de\336ned as follo) 328.62 506 T
(ws:) 483.97 506 T
2 10 Q
(typedef std::pair<std::string, Dyninst::Address> LibAddrPair) 108 488.33 T
(LibAddrPair.first) 90 470 T
1 12 Q
(refers) 198.09 470 T
(to) 231.49 470 T
(the) 246.92 470 T
(\336le) 267.67 470 T
(path) 289.1 470 T
(of) 315.86 470 T
(the) 331.94 470 T
(library) 352.7 470 T
(that) 390.78 470 T
(w) 414.87 470 T
(as) 423.41 470 T
(loaded,) 439.5 470 T
(and) 480.58 470 T
2 10 Q
(LibAd-) 504 470 T
(drPair.second) 72 456 T
1 12 Q
(is) 153.05 456 T
(the) 164.1 456 T
(load) 181.82 456 T
(address) 205.53 456 T
(of) 244.57 456 T
(that) 257.62 456 T
(library) 278.67 456 T
(in) 313.71 456 T
(the) 326.1 456 T
(process\325) 343.81 456 T
(address) 386.85 456 T
(space.) 425.89 456 T
(The) 458.59 456 T
(load) 480.3 456 T
(address) 504.01 456 T
(of) 72 442 T
(a) 85.29 442 T
(library) 93.9 442 T
(can) 129.18 442 T
(be) 149.13 442 T
(added) 163.74 442 T
(to) 195.69 442 T
(a) 208.31 442 T
(symbol) 216.93 442 T
(of) 255.56 442 T
(fset) 265.25 442 T
(from) 285.87 442 T
(the) 312.49 442 T
(\336le) 330.44 442 T
(in) 349.06 442 T
(order) 361.69 442 T
(to) 390.3 442 T
(get) 402.92 442 T
(the) 420.87 442 T
(absolute) 438.83 442 T
(address) 482.11 442 T
(of) 521.39 442 T
(a) 534.67 442 T
(symbol.) 72 428 T
2 10 Q
(virtual bool getLibraryAtAddr\050Address addr, LibAddrPair &lib\051 = 0) 72 403.33 T
1 12 Q
(This) 90 376 T
(method) 114.55 376 T
(returns) 153.77 376 T
(a) 190.31 376 T
(DSO,) 198.85 376 T
(using) 229.06 376 T
(the) 258.28 376 T
2 10 Q
(lib) 276.16 376 T
1 12 Q
(output) 297.38 376 T
(parameter) 331.27 376 T
(,) 378.76 376 T
(that) 384.98 376 T
(is) 406.19 376 T
(loaded) 417.41 376 T
(o) 452.62 376 T
(v) 458.44 376 T
(er) 464.26 376 T
(address) 476.8 376 T
2 10 Q
(addr) 516 376 T
1 12 Q
(in the current process.) 90 362 T
(This) 90 334 T
(method) 114.05 334 T
(returns) 152.76 334 T
(f) 188.8 334 T
(alse) 192.68 334 T
(if) 214.05 334 T
(no) 224.1 334 T
(library) 238.82 334 T
(is) 273.52 334 T
(loaded) 284.24 334 T
(o) 318.95 334 T
(v) 324.77 334 T
(er) 330.59 334 T
2 10 Q
(addr) 342.62 334 T
1 12 Q
(or) 369.34 334 T
(an) 382.05 334 T
(error) 396.09 334 T
(occurs,) 422.12 334 T
(and) 459.16 334 T
(true) 479.2 334 T
(if) 500.58 334 T
(it) 510.62 334 T
(suc-) 520.01 334 T
(cessfully found a library) 90 320 T
(.) 206.2 320 T
2 10 Q
(virtual bool getLibraries\050std::vector<LibAddrPair> &libs\051 = 0) 72 293.33 T
1 12 Q
(This) 90 266 T
(method) 115.56 266 T
(returns) 155.79 266 T
(all) 193.34 266 T
(DSOs) 209.57 266 T
(that) 242.46 266 T
(are) 264.69 266 T
(loaded) 283.57 266 T
(into) 319.78 266 T
(the) 342.68 266 T
(process\325) 361.57 266 T
(address) 405.78 266 T
(space) 446 266 T
(in) 476.88 266 T
(the) 490.44 266 T
(output) 509.33 266 T
(v) 90 252 T
(ector parameter) 95.82 252 T
(,) 170.3 252 T
2 10 Q
(libs) 176.3 252 T
1 12 Q
(.) 200.3 252 T
(This method returns) 90 224 T
2 10 Q
(true) 189.66 224 T
1 12 Q
( on success and) 213.66 224 T
2 10 Q
(false) 290.98 224 T
1 12 Q
( on error) 320.98 224 T
(.) 361.63 224 T
2 10 Q
(virtual void notifyOfUpdate\050\051 = 0) 72 197.33 T
1 12 Q
(This) 90 170 T
(method) 116.01 170 T
(is) 156.68 170 T
(called) 169.35 170 T
(by) 202.68 170 T
(the) 219.35 170 T
(ProcessState) 238.68 170 T
(when) 304.01 170 T
(it) 334.67 170 T
(detects) 346.02 170 T
(a) 384.01 170 T
(change) 394.01 170 T
(in) 432.66 170 T
(the) 446.67 170 T
(process\325) 466 170 T
(list) 510.66 170 T
(of) 530 170 T
(loaded) 90 156 T
(libraries.) 125.72 156 T
(Implementations) 171.78 156 T
(of) 256.17 156 T
2 10 Q
(LibraryStates) 269.9 156 T
1 12 Q
(should) 351.63 156 T
(use) 387.36 156 T
(this) 407.09 156 T
(method) 428.16 156 T
(to) 467.89 156 T
(refresh) 480.96 156 T
(their) 518 156 T
(lists of loaded libraries.) 90 142 T
2 10 Q
(virtual Address getLibTrapAddress\050\051 = 0) 72 115.33 T
FMENDPAGE
%%EndPage: "21" 22
%%Page: "22" 23
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 22) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(Some) 90 712 T
(platforms) 121.82 712 T
(that) 172.31 712 T
(implement) 194.79 712 T
(the) 250.62 712 T
(System/V) 269.77 712 T
(standard) 321.59 712 T
(\050Linux,) 366.74 712 T
(Solaris,) 406.89 712 T
(BlueGene/P\051) 447.71 712 T
(use) 514.19 712 T
(a) 534.67 712 T
(trap) 90 698 T
(e) 111.54 698 T
(v) 116.57 698 T
(ent) 122.39 698 T
(to) 139.94 698 T
(determine) 152.16 698 T
(when) 203.03 698 T
(a) 231.91 698 T
(process) 240.12 698 T
(loads) 278.99 698 T
(a) 307.2 698 T
(library) 315.42 698 T
(.) 346.63 698 T
(A) 352.51 698 T
(trap) 364.06 698 T
(instruction) 385.6 698 T
(is) 439.82 698 T
(inserted) 450.71 698 T
(into) 491.58 698 T
(a) 513.14 698 T
(cer-) 521.35 698 T
(tain address, and that trap will e) 90 684 T
(x) 242.8 684 T
(ecute whene) 248.62 684 T
(v) 307.96 684 T
(er the list of loaded libraries change.) 313.78 684 T
(On) 90 656 T
(System/V) 108.1 656 T
(supported) 158.88 656 T
(platforms) 209.65 656 T
(this) 259.09 656 T
(method) 279.86 656 T
(should) 319.3 656 T
(return) 354.75 656 T
(the) 386.84 656 T
(address) 404.95 656 T
(where) 444.37 656 T
(a) 477.13 656 T
(trap) 485.9 656 T
(should) 508 656 T
(be) 90 642 T
(inserted) 104.6 642 T
(to) 145.87 642 T
(w) 158.48 642 T
(atch) 167.02 642 T
(for) 190.29 642 T
(libraries) 207.56 642 T
(loading) 250.16 642 T
(and) 289.43 642 T
(unloading.) 310.04 642 T
(The) 364.31 642 T
(ProcessState) 386.25 642 T
(object) 450.18 642 T
(will) 482.79 642 T
(insert) 504.73 642 T
(a) 534.67 642 T
(trap at this address and then call) 90 628 T
2 10 Q
(notifyOfUpdate) 246.97 628 T
1 12 Q
( when that trap triggers.) 330.97 628 T
(On non-System/V platforms this method should return 0.) 90 600 T
4 F
(3.5.5 Class SymbolLookup) 72 572 T
7 F
(Defined In) 72 549 T
2 10 Q
(: symlookup.h) 144 549 T
1 12 Q
(The) 90 530 T
2 10 Q
(SymbolLookup) 112.2 530 T
1 12 Q
(virtual) 187.74 530 T
(class) 222.6 530 T
(is) 249.47 530 T
(an) 261.01 530 T
(interf) 275.88 530 T
(ace) 301.75 530 T
(for) 321.27 530 T
(associating) 338.8 530 T
(a) 395.66 530 T
(symbolic) 404.53 530 T
(name) 452.07 530 T
(with) 481.6 530 T
(a) 506.47 530 T
(stack) 515.34 530 T
(frame.) 72 516 T
(Each) 105.69 516 T
2 10 Q
(Frame) 132.38 516 T
1 12 Q
(object) 165.09 516 T
(contains) 197.12 516 T
(an) 239.82 516 T
(address) 253.85 516 T
(\050the) 292.54 516 T
(RA\051) 313.91 516 T
(pointing) 337.27 516 T
(into) 379.99 516 T
(the) 401.36 516 T
(function) 418.73 516 T
(\050or) 461.43 516 T
(function-lik) 478.13 516 T
(e) 534.67 516 T
(object\051) 72 502 T
(that) 109.62 502 T
(created) 131.91 502 T
(its) 170.85 502 T
(stack) 186.48 502 T
(frame.) 215.43 502 T
(Ho) 250.71 502 T
(we) 265.07 502 T
(v) 278.77 502 T
(er) 284.58 502 T
(,) 293.43 502 T
(users) 300.72 502 T
(do) 329.67 502 T
(not) 345.97 502 T
(al) 365.6 502 T
(w) 374.14 502 T
(ays) 382.68 502 T
(w) 402.97 502 T
(ant) 411.52 502 T
(to) 430.47 502 T
(deal) 444.1 502 T
(with) 468.39 502 T
(addresses) 494.02 502 T
(when) 72 488 T
(symbolic) 103.41 488 T
(names) 152.83 488 T
(are) 188.91 488 T
(more) 208.98 488 T
(con) 239.06 488 T
(v) 255.91 488 T
(enient.) 261.73 488 T
(This) 299.48 488 T
(class) 326.23 488 T
(is) 354.98 488 T
(an) 368.4 488 T
(interf) 385.15 488 T
(ace) 411.02 488 T
(for) 432.42 488 T
(mapping) 451.83 488 T
(a) 499.25 488 T
2 10 Q
(Frame) 510 488 T
1 12 Q
(object\325) 72 474 T
(s RA into a name.) 104.66 474 T
(In) 90 458 T
(addition) 102.88 458 T
(to) 145.1 458 T
(getting) 157.33 458 T
(a) 193.55 458 T
(name,) 201.76 458 T
(this) 233.64 458 T
(class) 253.87 458 T
(can) 280.08 458 T
(also) 299.62 458 T
(associate) 321.84 458 T
(an) 368.05 458 T
(opaque) 382.26 458 T
(object) 419.81 458 T
(\050via) 452.02 458 T
(a) 473.57 458 T
2 10 Q
(void*) 481.78 458 T
1 12 Q
(\051) 511.78 458 T
(with) 518.66 458 T
(a) 72 444 T
2 10 Q
(Frame) 80.25 444 T
1 12 Q
(object.) 113.16 444 T
(It) 148.41 444 T
(is) 158.66 444 T
(up) 169.58 444 T
(to) 184.5 444 T
(the) 196.76 444 T
2 10 Q
(SymbolLookup) 214.34 444 T
1 12 Q
(implementation) 289.26 444 T
(what) 367.51 444 T
(to) 393.76 444 T
(return) 406.01 444 T
(in) 437.58 444 T
(this) 449.84 444 T
(opaque) 470.1 444 T
(object.) 507.67 444 T
(The) 90 428 T
(def) 113.45 428 T
(ault) 128.66 428 T
(implementation) 151.45 428 T
(of) 231.58 428 T
2 10 Q
(SymbolLookup) 246.37 428 T
1 12 Q
(pro) 323.16 428 T
(vided) 338.98 428 T
(by) 370.43 428 T
(Stackw) 387.23 428 T
(alk) 422.43 428 T
(erAPI) 436.98 428 T
(uses) 470.43 428 T
(the) 495.88 428 T
(Dyn-) 515.34 428 T
(Symtab tool to lookup symbol names. It returns a) 72 414 T
2 10 Q
(Symbol) 312 414 T
1 12 Q
( object in the anon) 348 414 T
(ymous) 436.48 414 T
2 10 Q
(void*) 471.48 414 T
1 12 Q
(.) 501.48 414 T
2 10 Q
(virtual) 72 389.33 T
(bool) 119.33 389.33 T
(lookupAtAddr\050Address) 148.67 389.33 T
(addr,) 274 389.33 T
(string) 309.33 389.33 T
(&out_name,) 350.67 389.33 T
(void*) 416 389.33 T
(&out_value\051) 451.33 389.33 T
(=) 522.67 389.33 T
(0) 534 389.33 T
1 12 Q
(This) 90 362 T
(method) 114.18 362 T
(tak) 153.02 362 T
(es) 167.57 362 T
(an) 180.41 362 T
(address,) 194.58 362 T
2 10 Q
(addr) 236.41 362 T
1 12 Q
(,) 259.93 362 T
(as) 265.78 362 T
(input) 278.62 362 T
(and) 306.13 362 T
(returns) 326.3 362 T
(the) 362.47 362 T
(function) 379.98 362 T
(name,) 422.82 362 T
2 10 Q
(out_name) 454.66 362 T
1 12 Q
(,) 502.66 362 T
(and) 508.5 362 T
(an) 528.67 362 T
(opaque) 90 348 T
(v) 127.79 348 T
(alue,) 133.49 348 T
2 10 Q
(out_value) 159.61 348 T
1 12 Q
(,) 213.61 348 T
(at) 219.74 348 T
(that) 231.54 348 T
(address.) 252.67 348 T
(Output) 294.79 348 T
(parameter) 331.25 348 T
2 10 Q
(out_name) 382.36 348 T
1 12 Q
(should) 433.49 348 T
(be) 468.63 348 T
(the) 483.08 348 T
(name) 500.88 348 T
(of) 530 348 T
(the) 90 334 T
(function) 107.91 334 T
(that) 151.16 334 T
(contains) 172.4 334 T
2 10 Q
(addr) 215.65 334 T
1 12 Q
(.) 238.99 334 T
(Output) 245.24 334 T
(parameter) 281.82 334 T
2 10 Q
(out_value) 333.05 334 T
1 12 Q
(can) 390.29 334 T
(be) 410.2 334 T
(an) 424.77 334 T
(y) 435.92 334 T
(opaque) 445.17 334 T
(v) 483.08 334 T
(alue) 488.77 334 T
(deter-) 512.02 334 T
(mined) 90 320 T
(by) 128.24 320 T
(the) 148.49 320 T
2 10 Q
(SymbolLookup) 171.4 320 T
1 12 Q
(implementation.) 251.64 320 T
(The) 338.22 320 T
(v) 365.12 320 T
(alues) 370.82 320 T
(returned) 403.73 320 T
(are) 451.96 320 T
(used) 474.85 320 T
(by) 505.09 320 T
(the) 525.34 320 T
2 10 Q
(Frame::getName\050\051) 90 306 T
1 12 Q
( and) 186 306 T
2 10 Q
(Frame::getObject\050\051) 209.33 306 T
1 12 Q
( functions.) 317.33 306 T
(This method returns) 90 278 T
2 10 Q
(true) 189.66 278 T
1 12 Q
( on success and) 213.66 278 T
2 10 Q
(false) 290.98 278 T
1 12 Q
( on error) 320.98 278 T
(.) 361.63 278 T
2 10 Q
(virtual Walker *getWalker\050\051) 72 251.33 T
1 12 Q
(This method returns the) 90 224 T
2 10 Q
(Walker) 207.32 224 T
1 12 Q
( object associated with this) 243.32 224 T
2 10 Q
(SymbolLookup) 375.65 224 T
1 12 Q
(.) 447.65 224 T
2 10 Q
(virtual ProcessState *getProcessSate\050\051) 72 197.33 T
1 12 Q
(This method returns the) 90 170 T
2 10 Q
(ProcessState) 207.32 170 T
1 12 Q
( object associated with this) 279.32 170 T
2 10 Q
(SymbolLookup) 411.65 170 T
1 12 Q
(.) 483.65 170 T
4 16 Q
(4) 72 137.33 T
(C) 84 137.33 T
4 12.8 Q
(ALLB) 95.55 137.33 T
(A) 130.02 137.33 T
(CK) 138.56 137.33 T
4 16 Q
(I) 161.76 137.33 T
4 12.8 Q
(NTERF) 167.98 137.33 T
(A) 210.21 137.33 T
(CE) 218.75 137.33 T
4 16 Q
(D) 240.53 137.33 T
4 12.8 Q
(EF) 252.08 137.33 T
(A) 267.28 137.33 T
(UL) 275.89 137.33 T
(T) 292.49 137.33 T
4 16 Q
(I) 305.02 137.33 T
4 12.8 Q
(MPLEMENT) 311.25 137.33 T
(A) 385.47 137.33 T
(TIONS) 393.5 137.33 T
1 12 Q
(Stackw) 90 114 T
(alk) 125.21 114 T
(erAPI) 139.75 114 T
(pro) 171.35 114 T
(vides) 187.17 114 T
(one) 215.44 114 T
(or) 235.71 114 T
(more) 248.65 114 T
(def) 276.25 114 T
(ault) 291.45 114 T
(implementations) 312.4 114 T
(of) 395.34 114 T
(each) 408.28 114 T
(of) 433.21 114 T
(the) 446.14 114 T
(callback) 463.75 114 T
(classes) 506.68 114 T
(described) 72 100 T
(in) 122.58 100 T
(Section) 136.52 100 T
(3.5.) 175.52 100 T
(These) 198.12 100 T
(implementations) 231.37 100 T
(are) 315.98 100 T
(used) 335.23 100 T
(by) 361.82 100 T
(a) 378.42 100 T
(def) 388.35 100 T
(ault) 403.55 100 T
(con\336guration) 426.15 100 T
(of) 494.74 100 T
(Stack-) 509.34 100 T
(w) 72 86 T
(alk) 80.54 86 T
(erAPI.) 95.09 86 T
FMENDPAGE
%%EndPage: "22" 23
%%Page: "23" 24
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 23) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
4 14 Q
(4.1 Deb) 72 710.67 T
(ugger Interface) 116.83 710.67 T
1 12 Q
(This) 90 686.8 T
(section) 114.7 686.8 T
(describes) 152.06 686.8 T
(ho) 200.07 686.8 T
(w) 211.77 686.8 T
(to) 223.8 686.8 T
(use) 236.5 686.8 T
(Stackw) 255.86 686.8 T
(alk) 291.07 686.8 T
(erAPI) 305.61 686.8 T
(for) 337.63 686.8 T
(collecting) 354.98 686.8 T
(3) 405.67 686.8 T
1 9.6 Q
(rd) 411.67 691.6 T
1 12 Q
(party) 422.36 686.8 T
(stack) 450.38 686.8 T
(w) 478.41 686.8 T
(alks.) 486.95 686.8 T
(In) 512.64 686.8 T
(3) 526 686.8 T
1 9.6 Q
(rd) 532 691.6 T
1 12 Q
(party) 72 672.8 T
(mode) 100.36 672.8 T
(Stackw) 130.71 672.8 T
(alk) 165.92 672.8 T
(erAPI) 180.47 672.8 T
(uses) 212.82 672.8 T
(the) 237.18 672.8 T
(OS\325) 255.54 672.8 T
(s) 274.21 672.8 T
(deb) 282.57 672.8 T
(ugger) 299.66 672.8 T
(interf) 330.68 672.8 T
(ace) 356.55 672.8 T
(to) 376.23 672.8 T
(connect) 389.26 672.8 T
(to) 430.27 672.8 T
(another) 443.3 672.8 T
(process) 482.99 672.8 T
(and) 522.67 672.8 T
(w) 72 658.8 T
(alk) 80.54 658.8 T
(its) 99.35 658.8 T
(call) 114.84 658.8 T
(stacks.) 136.31 658.8 T
(As) 172.79 658.8 T
(part) 190.26 658.8 T
(of) 213.07 658.8 T
(being) 227.21 658.8 T
(a) 258.02 658.8 T
(deb) 267.49 658.8 T
(ugger) 284.58 658.8 T
(Stackw) 316.05 658.8 T
(alk) 351.26 658.8 T
(erAPI) 365.8 658.8 T
(recei) 398.61 658.8 T
(v) 421.62 658.8 T
(es) 427.44 658.8 T
(and) 441.58 658.8 T
(needs) 463.06 658.8 T
(to) 494.53 658.8 T
(handle) 508.01 658.8 T
(deb) 72 644.8 T
(ug) 89.09 644.8 T
(e) 105.07 644.8 T
(v) 110.1 644.8 T
(ents.) 115.92 644.8 T
(When) 142.23 644.8 T
(a) 174.87 644.8 T
(deb) 184.18 644.8 T
(ugger) 201.27 644.8 T
(e) 232.57 644.8 T
(v) 237.6 644.8 T
(ent) 243.42 644.8 T
(occurs,) 262.07 644.8 T
(Stackw) 300.37 644.8 T
(alk) 335.58 644.8 T
(erAPI) 350.12 644.8 T
(must) 382.76 644.8 T
(get) 410.08 644.8 T
(control) 428.73 644.8 T
(host) 466.71 644.8 T
(process) 490.69 644.8 T
(in) 530.66 644.8 T
(order to recei) 72 630.8 T
(v) 135.67 630.8 T
(e the deb) 141.49 630.8 T
(ugger e) 184.57 630.8 T
(v) 219.92 630.8 T
(ent and continue the tar) 225.74 630.8 T
(get process.) 338.17 630.8 T
(T) 90 614.8 T
(o) 96.37 614.8 T
(illustrate) 105.07 614.8 T
(the) 149.77 614.8 T
(comple) 167.14 614.8 T
(xities) 202.29 614.8 T
(with) 230.99 614.8 T
(running) 255.03 614.8 T
(in) 295.06 614.8 T
(3rd) 307.1 614.8 T
(party) 325.8 614.8 T
(mode,) 353.15 614.8 T
(consider) 385.52 614.8 T
(the) 428.88 614.8 T
(follo) 446.24 614.8 T
(w) 468.61 614.8 T
(code) 479.98 614.8 T
(snippet) 505.33 614.8 T
(that uses Stackw) 72 600.8 T
(alk) 151.87 600.8 T
(erAPI to collect a stack w) 166.42 600.8 T
(alk e) 289.93 600.8 T
(v) 312.62 600.8 T
(ery \336) 318.44 600.8 T
(v) 343.14 600.8 T
(e seconds.) 348.96 600.8 T
2 10 Q
(Walker *walker = Walker::newWalker\050pid\051;) 108 583.13 T
(std::vector<Frame> swalk;) 108 571.13 T
(for \050;;\051 {) 108 559.13 T
(walker->walkStack\050swalk\051;) 144 547.13 T
(sleep\0505\051;) 144 535.13 T
(}) 108 518.13 T
1 12 Q
(Stackw) 90 496.6 T
(alk) 125.21 496.6 T
(erAPI) 139.75 496.6 T
(is) 171.93 496.6 T
(running) 183.46 496.6 T
(in) 224.32 496.6 T
(3) 237.18 496.6 T
1 9.6 Q
(rd) 243.18 501.4 T
1 12 Q
(party) 254.7 496.6 T
(mode,) 282.88 496.6 T
(since) 316.07 496.6 T
(it) 344.25 496.6 T
(attached) 354.45 496.6 T
(to) 397.95 496.6 T
(the) 410.81 496.6 T
(tar) 429 496.6 T
(get) 441.45 496.6 T
(process,) 459.63 496.6 T
2 10 Q
(pid) 502.14 496.6 T
1 12 Q
(.) 520.14 496.6 T
(As) 526.67 496.6 T
(the) 72 482.6 T
(tar) 90.09 482.6 T
(get) 102.53 482.6 T
(process) 120.62 482.6 T
(runs) 160.03 482.6 T
(it) 184.12 482.6 T
(may) 194.22 482.6 T
(be) 218.31 482.6 T
(generating) 233.06 482.6 T
(deb) 287.14 482.6 T
(ug) 304.23 482.6 T
(e) 319.65 482.6 T
(v) 324.68 482.6 T
(ents) 330.5 482.6 T
(such) 353.26 482.6 T
(a) 378.68 482.6 T
(thread) 387.43 482.6 T
(creation) 420.84 482.6 T
(and) 462.92 482.6 T
(destruction,) 483.67 482.6 T
(library) 72 468.6 T
(loads) 108.44 468.6 T
(and) 138.22 468.6 T
(unloads,) 160 468.6 T
(signals,) 204.78 468.6 T
(forking/e) 245.56 468.6 T
(x) 289.37 468.6 T
(ecing,) 295.19 468.6 T
(etc.) 328.63 468.6 T
(When) 350.07 468.6 T
(one) 383.18 468.6 T
(of) 404.95 468.6 T
(these) 419.4 468.6 T
(deb) 448.51 468.6 T
(ugger) 465.6 468.6 T
(e) 497.37 468.6 T
(v) 502.4 468.6 T
(ents) 508.22 468.6 T
(is) 532 468.6 T
(generated) 72 454.6 T
(the) 122.46 454.6 T
(OS) 140.94 454.6 T
(will) 160.09 454.6 T
(pause) 182.58 454.6 T
(the) 213.72 454.6 T
(tar) 232.2 454.6 T
(get) 244.64 454.6 T
(process) 263.12 454.6 T
(and) 302.92 454.6 T
(send) 324.07 454.6 T
(a) 349.88 454.6 T
(notice) 359.02 454.6 T
(to) 392.16 454.6 T
(the) 405.31 454.6 T
(host) 423.79 454.6 T
(process.) 447.61 454.6 T
(The) 490.42 454.6 T
(tar) 512.89 454.6 T
(get) 525.34 454.6 T
(process) 72 440.6 T
(will) 111.3 440.6 T
(remain) 133.28 440.6 T
(paused) 169.92 440.6 T
(until) 206.56 440.6 T
(the) 231.88 440.6 T
(host) 249.85 440.6 T
(process) 273.17 440.6 T
(handles) 312.47 440.6 T
(the) 352.44 440.6 T
(deb) 370.42 440.6 T
(ug) 387.5 440.6 T
(e) 402.82 440.6 T
(v) 407.84 440.6 T
(ent) 413.66 440.6 T
(and) 431.64 440.6 T
(resumes) 452.28 440.6 T
(the) 494.92 440.6 T
(tar) 512.89 440.6 T
(get) 525.34 440.6 T
(process.) 72 426.6 T
(In) 90 410.6 T
(the) 103.17 410.6 T
(abo) 121 410.6 T
(v) 138.15 410.6 T
(e) 143.97 410.6 T
(e) 152.47 410.6 T
(xample) 157.62 410.6 T
(the) 196.12 410.6 T
(host) 213.95 410.6 T
(process) 237.13 410.6 T
(is) 276.29 410.6 T
(spending) 287.46 410.6 T
(almost) 333.96 410.6 T
(all) 369.14 410.6 T
(of) 384.31 410.6 T
(its) 397.48 410.6 T
(time) 411.99 410.6 T
(in) 436.5 410.6 T
(the) 449 410.6 T
2 10 Q
(sleep) 466.84 410.6 T
1 12 Q
(call.) 500.01 410.6 T
(If) 523.51 410.6 T
(a) 534.67 410.6 T
(deb) 72 396.6 T
(ugger) 89.09 396.6 T
(e) 119.93 396.6 T
(v) 124.95 396.6 T
(ent) 130.77 396.6 T
(happens) 148.95 396.6 T
(during) 191.79 396.6 T
(the) 226.63 396.6 T
(sleep,) 244.81 396.6 T
(then) 275.99 396.6 T
(Stackw) 300.16 396.6 T
(alk) 335.37 396.6 T
(erAPI) 349.92 396.6 T
(will) 382.08 396.6 T
(not) 404.27 396.6 T
(be) 423.12 396.6 T
(able) 437.96 396.6 T
(to) 461.47 396.6 T
(get) 474.32 396.6 T
(control) 492.49 396.6 T
(of) 530 396.6 T
(the) 72 382.6 T
(host) 89.47 382.6 T
(process) 112.29 382.6 T
(and) 151.08 382.6 T
(handle) 171.22 382.6 T
(the) 206.02 382.6 T
(e) 223.49 382.6 T
(v) 228.52 382.6 T
(ent) 234.34 382.6 T
(for) 251.81 382.6 T
(up) 268.61 382.6 T
(to) 283.42 382.6 T
(\336) 295.57 382.6 T
(v) 301.94 382.6 T
(e) 307.76 382.6 T
(seconds.) 315.89 382.6 T
(This) 359.7 382.6 T
(will) 383.84 382.6 T
(cause) 405.32 382.6 T
(long) 434.78 382.6 T
(pauses) 458.93 382.6 T
(in) 493.73 382.6 T
(the) 505.87 382.6 T
(tar-) 523.34 382.6 T
(get process and lead to a potentially v) 72 368.6 T
(ery lar) 252.79 368.6 T
(ge slo) 283.56 368.6 T
(wdo) 311.59 368.6 T
(wn.) 331.96 368.6 T
(T) 90 352.6 T
(o) 96.37 352.6 T
(w) 105.75 352.6 T
(ork) 114.29 352.6 T
(around) 133.67 352.6 T
(this) 170.37 352.6 T
(problem) 191.09 352.6 T
(Stackw) 234.46 352.6 T
(alk) 269.67 352.6 T
(erAPI) 284.21 352.6 T
(pro) 316.25 352.6 T
(vides) 332.06 352.6 T
(a) 360.77 352.6 T
(noti\336cation) 369.48 352.6 T
(\336le) 427.53 352.6 T
(descriptor) 446.24 352.6 T
(.) 493.57 352.6 T
(This) 499.95 352.6 T
(\336le) 524.66 352.6 T
(descriptor) 72 338.6 T
(represents) 122.85 338.6 T
(a) 174.36 338.6 T
(connection) 182.55 338.6 T
(between) 238.07 338.6 T
(the) 280.92 338.6 T
(Stackw) 298.44 338.6 T
(alk) 333.65 338.6 T
(erAPI) 348.2 338.6 T
(library) 379.71 338.6 T
(and) 414.57 338.6 T
(user) 434.76 338.6 T
(code.) 457.61 338.6 T
(Stackw) 486.13 338.6 T
(alk-) 521.34 338.6 T
(erAPI) 72 324.6 T
(will) 103.74 324.6 T
(write) 125.5 324.6 T
(a) 153.24 324.6 T
(single) 161.65 324.6 T
(byte) 193.41 324.6 T
(to) 217.16 324.6 T
(this) 229.58 324.6 T
(\336le) 250 324.6 T
(descriptor) 268.42 324.6 T
(when) 319.49 324.6 T
(a) 348.57 324.6 T
(deb) 356.98 324.6 T
(ug) 374.07 324.6 T
(e) 389.16 324.6 T
(v) 394.18 324.6 T
(ent) 400.01 324.6 T
(occurs,) 417.75 324.6 T
(thus) 455.16 324.6 T
(notifying) 478.25 324.6 T
(the) 525.34 324.6 T
(user) 72 310.6 T
(code) 95.11 310.6 T
(that) 120.89 310.6 T
(it) 142 310.6 T
(needs) 151.79 310.6 T
(to) 182.24 310.6 T
(let) 194.69 310.6 T
(Stackw) 209.81 310.6 T
(alk) 245.02 310.6 T
(erAPI) 259.56 310.6 T
(recei) 291.34 310.6 T
(v) 314.35 310.6 T
(e) 320.17 310.6 T
(and) 328.62 310.6 T
(handle) 349.07 310.6 T
(deb) 384.17 310.6 T
(ug) 401.26 310.6 T
(e) 416.38 310.6 T
(v) 421.41 310.6 T
(ents.) 427.23 310.6 T
(The) 452.68 310.6 T
(user) 474.46 310.6 T
(code) 497.57 310.6 T
(can) 523.34 310.6 T
(use system calls such as) 72 296.6 T
2 10 Q
(select) 190.32 296.6 T
1 12 Q
( to w) 226.32 296.6 T
(atch for e) 250.2 296.6 T
(v) 295.21 296.6 T
(ents on the noti\336cation \336le descriptor) 301.03 296.6 T
(.) 479.36 296.6 T
(The) 90 280.6 T
(follo) 111.62 280.6 T
(wing) 133.99 280.6 T
(e) 160.96 280.6 T
(xample) 166.11 280.6 T
(illustrates) 204.4 280.6 T
(ho) 254.03 280.6 T
(w) 265.73 280.6 T
(to) 277.36 280.6 T
(properly) 289.66 280.6 T
(use) 333.28 280.6 T
(Stackw) 352.24 280.6 T
(alk) 387.45 280.6 T
(erAPI) 401.99 280.6 T
(to) 433.62 280.6 T
(collect) 445.92 280.6 T
(a) 480.87 280.6 T
(stack) 489.17 280.6 T
(w) 516.79 280.6 T
(alk) 525.34 280.6 T
(from) 72 266.6 T
(another) 99.6 266.6 T
(process) 139.86 266.6 T
(at) 180.11 266.6 T
(a) 193.05 266.6 T
(\336) 202.65 266.6 T
(v) 209.02 266.6 T
(e) 214.84 266.6 T
(second) 224.44 266.6 T
(interv) 262.03 266.6 T
(al.) 289.73 266.6 T
(Details) 305.66 266.6 T
(on) 343.93 266.6 T
(the) 360.2 266.6 T
2 10 Q
(ProcDebug) 379.13 266.6 T
1 12 Q
(class,) 437.4 266.6 T
2 10 Q
(getNotifica-) 468 266.6 T
(tionFD) 72 252.6 T
1 12 Q
(method,) 112.2 252.6 T
(and) 155.4 252.6 T
2 10 Q
(handleDebugEvent) 176.92 252.6 T
1 12 Q
(method) 277.12 252.6 T
(can) 317.32 252.6 T
(be) 338.17 252.6 T
(found) 353.7 252.6 T
(in) 385.89 252.6 T
(Section) 399.43 252.6 T
(4.1.1.) 438.43 252.6 T
(See) 469.62 252.6 T
(the) 491.15 252.6 T
(UNIX) 510.01 252.6 T
FMENDPAGE
%%EndPage: "23" 24
%%Page: "24" 25
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 24) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(man) 72 712 T
(pages) 97.46 712 T
(for) 129.57 712 T
(more) 148.36 712 T
(information) 177.81 712 T
(on) 239.27 712 T
(the) 256.06 712 T
2 10 Q
(select) 275.52 712 T
1 12 Q
(system) 316.31 712 T
(call.) 354.44 712 T
(Note) 379.56 712 T
(that) 407.68 712 T
(this) 430.47 712 T
(e) 452.61 712 T
(xample) 457.75 712 T
(does) 497.88 712 T
(not) 524.66 712 T
(include all of the proper error handling and includes that should be present when using) 72 698 T
2 10 Q
(select) 490.93 698 T
1 12 Q
(.) 526.93 698 T
2 10 Q
(Walker *walker = Walker::newWalker\050pid\051;) 108 680.33 T
(ProcDebug *debugger = \050ProcDebug *\051 walker->getProcessState\050\051;) 108 668.33 T
(std::vector<Frame> swalk;) 108 656.33 T
(for \050;;\051 {) 108 639.33 T
(walker->walkStack\050swalk\051;) 144 627.33 T
(struct timeval timeout;) 144 610.33 T
(timeout.tv_sec = 5;) 144 598.33 T
(timeout.tv_usec = 0;) 144 586.33 T
(int max = 1;) 144 569.33 T
(fd_set readfds, writefds, exceptfds;) 144 557.33 T
(FD_ZERO\050&readfds\051; FD_ZERO\050&writefds\051; FD_ZERO\050exceptfds\051;) 144 545.33 T
(FD_SET\050ProcDebug::getNotificationFD\050\051, &readfds\051;) 144 533.33 T
(for \050;;\051 {) 144 516.33 T
(int result = select\050max, &readfds, &writefds, &exceptfds,) 180 504.33 T
( &timeout\051;) 288 492.33 T
(if \050FD_ISSET\050ProcDebug::getNotificationFD\050\051, readfds\051\051 {) 180 480.33 T
(//Debug event) 216 468.33 T
(ProcDebug::handleDebugEvent\050\051;) 216 456.33 T
(}) 180 444.33 T
(if \050result == 0\051 {) 180 427.33 T
(//Timeout) 216 415.33 T
(break;) 216 403.33 T
(}) 180 391.33 T
(}) 144 379.33 T
(}) 108 367.33 T
4 12 Q
(4.1.1 Class Pr) 72 325 T
(ocDeb) 141.78 325 T
(ug) 173.53 325 T
7 F
(Defined In) 72 302 T
2 10 Q
(: procstate.h) 144 302 T
1 12 Q
(Access) 90 283 T
(to) 128.24 283 T
(Stackw) 141.84 283 T
(alk) 177.05 283 T
(erAPI\325) 191.59 283 T
(s) 223.59 283 T
(deb) 232.51 283 T
(ugger) 249.6 283 T
(is) 281.19 283 T
(through) 293.45 283 T
(the) 335.05 283 T
2 10 Q
(ProcDebug) 353.97 283 T
1 12 Q
(class,) 412.23 283 T
(which) 442.82 283 T
(inherits) 476.41 283 T
(from) 516.67 283 T
(the) 72 269 T
2 10 Q
(ProcessState) 90.75 269 T
1 12 Q
(interf) 166.83 269 T
(ace.) 192.7 269 T
(The) 215.77 269 T
(easiest) 238.51 269 T
(w) 274.58 269 T
(ay) 283.13 269 T
(to) 298.54 269 T
(get) 311.96 269 T
(at) 330.7 269 T
(a) 343.45 269 T
2 10 Q
(ProcDebug) 352.86 269 T
1 12 Q
(object) 410.94 269 T
(is) 444.35 269 T
(to) 456.44 269 T
(cast) 469.86 269 T
(the) 492.6 269 T
(return) 511.34 269 T
(v) 72 255 T
(alue) 77.7 255 T
(of) 101.89 255 T
2 10 Q
(Walker::getProcessState\050\051) 116.08 255 T
1 12 Q
(into) 270.28 255 T
(a) 293.15 255 T
2 10 Q
(ProcDebug) 302.68 255 T
1 12 Q
(.) 356.68 255 T
(C++\325) 363.88 255 T
(s) 388.76 255 T
2 10 Q
(dynamic_cast) 397.62 255 T
1 12 Q
(operation) 473.82 255 T
(can) 523.34 255 T
(be used to test if a) 72 241 T
2 10 Q
(Walker) 161.99 241 T
1 12 Q
( uses the) 197.99 241 T
2 10 Q
(ProcDebug) 242.32 241 T
1 12 Q
( interf) 296.32 241 T
(ace:) 325.19 241 T
2 10 Q
(ProcDebug *debugger;) 108 223.33 T
(debugger = dynamic_cast<ProcDebug*>\050walker>getProcessState\050\051\051;) 108 211.33 T
(if \050debugger != NULL\051 {) 108 199.33 T
(//3rd party) 144 187.33 T
(...) 144 175.33 T
(} else {) 108 163.33 T
(//1st party) 144 151.33 T
(...) 144 139.33 T
(}) 108 127.33 T
1 12 Q
(In) 90 109 T
(addition) 102.74 109 T
(to) 144.81 109 T
(the) 156.89 109 T
(handling) 174.29 109 T
(of) 219.03 109 T
(deb) 231.76 109 T
(ug) 248.85 109 T
(e) 263.59 109 T
(v) 268.62 109 T
(ents,) 274.44 109 T
(described) 299.51 109 T
(in) 348.23 109 T
(Section) 360.31 109 T
(4.1,) 399.31 109 T
(the) 420.05 109 T
(ProcDeb) 437.45 109 T
(ug) 479.2 109 T
(class) 493.94 109 T
(pro-) 520.01 109 T
(vides) 72 95 T
(a) 101.19 95 T
(process) 110.38 95 T
(control) 150.23 95 T
(interf) 188.09 95 T
(ace;) 213.96 95 T
(users) 237.14 95 T
(can) 265.67 95 T
(pause) 286.18 95 T
(and) 317.37 95 T
(resume) 338.56 95 T
(process) 377.08 95 T
(or) 416.92 95 T
(threads,) 430.78 95 T
(detach) 472.3 95 T
(from) 507.48 95 T
(a) 534.67 95 T
FMENDPAGE
%%EndPage: "24" 25
%%Page: "25" 26
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 25) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(process,) 72 712 T
(and) 115.07 712 T
(test) 136.49 712 T
(for) 157.24 712 T
(e) 175.32 712 T
(v) 180.35 712 T
(ents) 186.17 712 T
(such) 209.59 712 T
(as) 235.67 712 T
(process) 249.76 712 T
(death.) 289.83 712 T
(As) 322.91 712 T
(an) 340.33 712 T
(implementation) 355.74 712 T
(of) 435.17 712 T
(the) 449.25 712 T
2 10 Q
(ProcessState) 468 712 T
1 12 Q
(class,) 72 698 T
2 10 Q
(ProcDebug) 101.33 698 T
1 12 Q
( also pro) 155.33 698 T
(vides all of the functionality described in Section) 196.48 698 T
(3.5.4.) 435.12 698 T
2 10 Q
(virtual bool pause\050Dyninst::THR_ID tid = NULL_THR_ID\051) 72 673.33 T
1 12 Q
(This) 90 646 T
(method) 115.49 646 T
(pauses) 155.63 646 T
(a) 191.78 646 T
(process) 201.25 646 T
(or) 241.39 646 T
(thread.) 255.54 646 T
(The) 292.67 646 T
(paused) 315.48 646 T
(object) 352.96 646 T
(will) 386.43 646 T
(not) 409.26 646 T
(resume) 428.74 646 T
(e) 467.55 646 T
(x) 472.69 646 T
(ecution) 478.51 646 T
(until) 517.99 646 T
2 10 Q
(ProcDebug::resume) 90 632 T
1 12 Q
(is) 194.85 632 T
(called.) 205.69 632 T
(If) 240.2 632 T
(the) 251.03 632 T
2 10 Q
(tid) 268.54 632 T
1 12 Q
(parameter) 289.39 632 T
(is) 340.21 632 T
(not) 351.06 632 T
2 10 Q
(NULL_THR_ID) 369.24 632 T
1 12 Q
(then) 438.08 632 T
(Stackw) 461.59 632 T
(alk) 496.8 632 T
(erAPI) 511.34 632 T
(will) 90 618 T
(pause) 111.43 618 T
(the) 141.51 618 T
(thread) 158.94 618 T
(speci\336ed) 191.68 618 T
(by) 237.1 618 T
2 10 Q
(tid) 251.86 618 T
1 12 Q
(.) 269.86 618 T
(If) 275.62 618 T
2 10 Q
(tid) 286.37 618 T
1 12 Q
(is) 307.13 618 T
2 10 Q
(NULL_THR_ID) 317.89 618 T
1 12 Q
(then) 386.65 618 T
(Stackw) 410.08 618 T
(alk) 445.29 618 T
(erAPI) 459.83 618 T
(will) 491.24 618 T
(pause) 512.67 618 T
(e) 90 604 T
(v) 95.03 604 T
(ery thread in the process.) 100.85 604 T
(When) 90 576 T
(Stackw) 122.8 576 T
(alk) 158.01 576 T
(erAPI) 172.55 576 T
(collects) 205.35 576 T
(a) 246.15 576 T
(call) 255.62 576 T
(stack) 277.09 576 T
(from) 305.89 576 T
(a) 333.37 576 T
(running) 342.84 576 T
(thread) 384.31 576 T
(it) 418.44 576 T
(\336rst) 429.26 576 T
(pauses) 452.07 576 T
(the) 488.2 576 T
(thread,) 507.01 576 T
(collects) 90 562 T
(the) 131.39 562 T
(stack) 150.77 562 T
(w) 180.16 562 T
(alk,) 188.71 562 T
(and) 211.09 562 T
(then) 233.15 562 T
(resumes) 258.54 562 T
(the) 302.59 562 T
(thread.) 321.98 562 T
(When) 359.69 562 T
(collecting) 393.07 562 T
(a) 445.12 562 T
(call) 455.18 562 T
(stack) 477.23 562 T
(from) 506.62 562 T
(a) 534.67 562 T
(paused) 90 548 T
(thread) 127.21 548 T
(Stackw) 161.09 548 T
(alk) 196.3 548 T
(erAPI) 210.84 548 T
(will) 243.38 548 T
(collect) 265.94 548 T
(the) 301.82 548 T
(stack) 320.38 548 T
(w) 348.92 548 T
(alk) 357.47 548 T
(and) 376.02 548 T
(lea) 397.24 548 T
(v) 410.99 548 T
(e) 416.81 548 T
(the) 426.02 548 T
(thread) 444.58 548 T
(paused.) 478.45 548 T
(This) 518.66 548 T
(method) 90 534 T
(is) 130.48 534 T
(thus) 142.96 534 T
(useful) 167.44 534 T
(for) 201.25 534 T
(pausing) 219.72 534 T
(threads) 261.53 534 T
(before) 300.66 534 T
(stack) 335.79 534 T
(w) 364.93 534 T
(alks) 373.47 534 T
(if) 397.28 534 T
(the) 409.09 534 T
(user) 428.23 534 T
(needs) 452.7 534 T
(to) 484.51 534 T
(k) 498.32 534 T
(eep) 504.2 534 T
(the) 525.34 534 T
(returned stack w) 90 520 T
(alk synchronized with the current state of the thread.) 169.19 520 T
(This method returns) 90 492 T
2 10 Q
(true) 189.66 492 T
1 12 Q
( if successful and) 213.66 492 T
2 10 Q
(false) 299.64 492 T
1 12 Q
( on error) 329.64 492 T
(.) 370.3 492 T
2 10 Q
(virtual bool resume\050Dyninst::THR_ID tid = NULL_THR_ID\051) 72 465.33 T
1 12 Q
(This) 90 438 T
(method) 115.91 438 T
(resumes) 156.48 438 T
(e) 200.37 438 T
(x) 205.52 438 T
(ecution) 211.34 438 T
(on) 251.24 438 T
(a) 267.81 438 T
(paused) 277.71 438 T
(process) 315.61 438 T
(or) 356.17 438 T
(thread.) 370.73 438 T
(This) 408.29 438 T
(method) 434.2 438 T
(only) 474.77 438 T
(resumes) 500.68 438 T
(threads) 90 424 T
(that) 127.9 424 T
(were) 149.15 424 T
(paused) 175.72 424 T
(by) 212.29 424 T
(the) 227.54 424 T
2 10 Q
(ProcDebug::pause) 245.45 424 T
1 12 Q
(call,) 344.7 424 T
(using) 368.28 424 T
(it) 397.53 424 T
(on) 407.45 424 T
(other) 422.7 424 T
(threads) 450.61 424 T
(is) 488.51 424 T
(an) 499.77 424 T
(error) 514.34 424 T
(.) 537 424 T
(If) 90 410 T
(the) 101.56 410 T
2 10 Q
(tid) 119.78 410 T
1 12 Q
(parameter) 141.35 410 T
(is) 192.88 410 T
(not) 204.45 410 T
2 10 Q
(NULL_THR_ID) 223.35 410 T
1 12 Q
(then) 292.91 410 T
(Stackw) 317.14 410 T
(alk) 352.35 410 T
(erAPI) 366.89 410 T
(will) 399.11 410 T
(resume) 421.35 410 T
(the) 459.57 410 T
(thread) 477.79 410 T
(speci-) 511.34 410 T
(\336ed) 90 396 T
(by) 111.2 396 T
2 10 Q
(tid) 126.39 396 T
1 12 Q
(.) 144.39 396 T
(If) 150.59 396 T
(tid) 161.78 396 T
(is) 177.65 396 T
2 10 Q
(NULL_THR_ID) 188.85 396 T
1 12 Q
(then) 258.05 396 T
(Stackw) 281.91 396 T
(alk) 317.11 396 T
(erAPI) 331.66 396 T
(will) 363.51 396 T
(resume) 385.38 396 T
(all) 423.23 396 T
(paused) 438.43 396 T
(threads) 474.95 396 T
(in) 512.8 396 T
(the) 525.34 396 T
(process.) 90 382 T
(This method returns) 90 354 T
2 10 Q
(true) 189.66 354 T
1 12 Q
( if successful and) 213.66 354 T
2 10 Q
(false) 299.64 354 T
1 12 Q
( on error) 329.64 354 T
(.) 370.3 354 T
2 10 Q
(virtual bool detach\050bool leave_stopped = false\051) 72 327.33 T
1 12 Q
(This) 90 300 T
(method) 117.31 300 T
(detaches) 159.29 300 T
(Stackw) 206.58 300 T
(alk) 241.79 300 T
(erAPI) 256.33 300 T
(from) 290.97 300 T
(the) 320.27 300 T
(tar) 340.92 300 T
(get) 353.36 300 T
(process.) 374 300 T
(Stackw) 418.96 300 T
(alk) 454.17 300 T
(erAPI) 468.72 300 T
(will) 503.35 300 T
(no) 528 300 T
(longer) 90 286 T
(recei) 124.71 286 T
(v) 147.73 286 T
(e) 153.55 286 T
(deb) 162.93 286 T
(ug) 180.02 286 T
(e) 196.07 286 T
(v) 201.1 286 T
(ents) 206.92 286 T
(on) 230.3 286 T
(this) 246.35 286 T
(tar) 267.74 286 T
(get) 280.19 286 T
(process) 298.91 286 T
(and) 338.95 286 T
(will) 360.33 286 T
(no) 383.05 286 T
(longer) 399.1 286 T
(be) 433.82 286 T
(able) 449.2 286 T
(to) 473.24 286 T
(collect) 486.63 286 T
(call) 522.67 286 T
(stacks) 90 272 T
(from) 123.52 272 T
(it.) 151.04 272 T
(This) 164.91 272 T
(method) 190.44 272 T
(in) 230.63 272 T
(v) 239.49 272 T
(alidates) 245.19 272 T
(the) 286.04 272 T
(associated) 304.9 272 T
2 10 Q
(Walker) 358.42 272 T
1 12 Q
(and) 398.61 272 T
2 10 Q
(ProcState) 420.13 272 T
1 12 Q
(objects,) 478.33 272 T
(the) 519.52 272 T
(y) 534 272 T
(should) 90 258 T
(be) 124.97 258 T
(cleaned) 139.27 258 T
(using) 178.89 258 T
(C++\325) 207.86 258 T
(s) 232.74 258 T
2 10 Q
(delete) 240.38 258 T
1 12 Q
(operator) 279.35 258 T
(after) 322.3 258 T
(making) 347.26 258 T
(this) 386.23 258 T
(call.) 406.54 258 T
(It) 429.83 258 T
(is) 440.14 258 T
(an) 451.11 258 T
(error) 465.41 258 T
(to) 491.69 258 T
(attempt) 504 258 T
(to do operations on these objects after a detach, and unde\336ned beha) 90 244 T
(vior may result.) 413.69 244 T
(If) 90 216 T
(the) 102.32 216 T
2 10 Q
(leave_stopped) 121.3 216 T
1 12 Q
(parameter) 203.63 216 T
(is) 255.93 216 T
2 10 Q
(true) 268.26 216 T
1 12 Q
(Stackw) 296.58 216 T
(alk) 331.79 216 T
(erAPI) 346.33 216 T
(will) 379.31 216 T
(detach) 402.31 216 T
(from) 437.95 216 T
(the) 465.6 216 T
(process) 484.59 216 T
(b) 524.9 216 T
(ut) 530.66 216 T
(lea) 90 202 T
(v) 103.75 202 T
(e) 109.57 202 T
(it) 118.44 202 T
(in) 128.65 202 T
(a) 141.52 202 T
(paused) 150.39 202 T
(state) 187.25 202 T
(so) 212.79 202 T
(that) 226.99 202 T
(it) 248.53 202 T
(does) 258.74 202 T
(resume) 284.28 202 T
(progress.) 322.47 202 T
(This) 369.67 202 T
(is) 394.54 202 T
(useful) 406.08 202 T
(for) 438.95 202 T
(attaching) 456.48 202 T
(another) 504.01 202 T
(deb) 90 188 T
(ugger) 107.09 188 T
(back) 137.95 188 T
(to) 164.14 188 T
(the) 177.02 188 T
(process) 195.22 188 T
(for) 234.75 188 T
(further) 252.28 188 T
(analysis.) 288.47 188 T
(The) 333.67 188 T
2 10 Q
(leave_stopped) 355.87 188 T
1 12 Q
(parameter) 437.4 188 T
(is) 488.92 188 T
(not) 500.46 188 T
(sup-) 519.34 188 T
(ported on the Linux platform and its v) 90 174 T
(alue will ha) 272.69 174 T
(v) 328.44 174 T
(e no af) 334.26 174 T
(fect on the) 366.61 174 T
2 10 Q
(detach) 420.26 174 T
1 12 Q
( call.) 456.26 174 T
(This method returns) 90 146 T
2 10 Q
(true) 189.66 146 T
1 12 Q
( if successful and) 213.66 146 T
2 10 Q
(false) 299.64 146 T
1 12 Q
( on error) 329.64 146 T
(.) 370.3 146 T
2 10 Q
(virtual bool isTerminated\050\051) 72 119.33 T
1 12 Q
(This) 90 92 T
(method) 114.25 92 T
(returns) 153.16 92 T
(true) 189.4 92 T
(if) 210.97 92 T
(the) 221.21 92 T
(associated) 238.79 92 T
(tar) 291.02 92 T
(get) 303.46 92 T
(process) 321.04 92 T
(has) 359.94 92 T
(terminated) 378.85 92 T
(and) 433.08 92 T
(f) 453.32 92 T
(alse) 457.2 92 T
(otherwise.) 478.77 92 T
(A) 531.34 92 T
(tar) 90 78 T
(get) 102.44 78 T
(process) 119.83 78 T
(may) 158.54 78 T
(terminate) 181.93 78 T
(itself) 229.97 78 T
(by) 256.7 78 T
(calling) 271.42 78 T
(e) 306.8 78 T
(xit,) 311.95 78 T
(returning) 330.35 78 T
(from) 377.06 78 T
(main,) 403.11 78 T
(or) 432.83 78 T
(recei) 445.55 78 T
(ving) 468.57 78 T
(an) 492.62 78 T
(unhan-) 506.67 78 T
FMENDPAGE
%%EndPage: "25" 26
%%Page: "26" 27
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 26) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(dled) 90 712 T
(signal.) 115.06 712 T
(Attempting) 151.13 712 T
(to) 210.2 712 T
(collect) 223.93 712 T
(stack) 260.32 712 T
(w) 289.38 712 T
(alks) 297.93 712 T
(or) 321.66 712 T
(perform) 336.05 712 T
(other) 379.1 712 T
(operations) 408.16 712 T
(on) 462.55 712 T
(a) 478.95 712 T
(terminated) 488.68 712 T
(process is ille) 90 698 T
(g) 155.15 698 T
(al an will lead to unde\336ned beha) 161.09 698 T
(vior) 316.82 698 T
(.) 335.5 698 T
(A) 90 670 T
(process) 102.64 670 T
(termination) 142.61 670 T
(will) 201.92 670 T
(also) 224.57 670 T
(be) 247.88 670 T
(signaled) 263.18 670 T
(through) 307.15 670 T
(the) 348.46 670 T
(not\336cation) 367.11 670 T
(FD.) 422.42 670 T
(Users) 444.73 670 T
(should) 476.03 670 T
(check) 512.02 670 T
(processes for the) 90 656 T
2 10 Q
(isTerminated) 173.64 656 T
1 12 Q
( state after returning from) 245.64 656 T
2 10 Q
(handleDebugEvent) 371.94 656 T
1 12 Q
(.) 467.94 656 T
2 10 Q
(static int getNotificationFD\050\051) 72 629.33 T
1 12 Q
(This) 90 602 T
(method) 114.22 602 T
(returns) 153.1 602 T
(Stackw) 189.31 602 T
(alk) 224.52 602 T
(erAPI\325) 239.06 602 T
(s) 271.05 602 T
(noti\336cation) 278.6 602 T
(FD.) 336.16 602 T
(The) 357.38 602 T
(noti\336cation) 378.92 602 T
(FD) 436.48 602 T
(is) 454.7 602 T
(a) 465.58 602 T
(\336le) 473.79 602 T
(descriptor) 492.01 602 T
(that) 90 588 T
(Stackw) 111.2 588 T
(alk) 146.41 588 T
(erAPI) 160.95 588 T
(will) 192.81 588 T
(write) 214.68 588 T
(a) 242.54 588 T
(byte) 251.07 588 T
(to) 274.94 588 T
(whene) 287.48 588 T
(v) 318.49 588 T
(er) 324.32 588 T
(a) 336.84 588 T
(deb) 345.37 588 T
(ug) 362.46 588 T
(e) 377.66 588 T
(v) 382.69 588 T
(ent) 388.51 588 T
(occurs) 406.37 588 T
(that) 440.89 588 T
(need.) 462.09 588 T
(If) 490.95 588 T
(the) 502.14 588 T
(user) 520.01 588 T
(code) 90 574 T
(sees) 116.39 574 T
(a) 140.12 574 T
(byte) 149.18 574 T
(on) 173.58 574 T
(this) 189.31 574 T
(\336le) 210.39 574 T
(descriptor) 229.46 574 T
(it) 281.18 574 T
(should) 291.59 574 T
(call) 327.33 574 T
2 10 Q
(handleDebugEvent) 348.39 574 T
1 12 Q
(to) 448.12 574 T
(let) 461.19 574 T
(Stackw) 476.93 574 T
(alk) 512.14 574 T
(er-) 526.68 574 T
(API) 90 560 T
(handle) 116.2 560 T
(the) 155.06 560 T
(deb) 176.6 560 T
(ug) 193.69 560 T
(e) 212.56 560 T
(v) 217.58 560 T
(ent.) 223.4 560 T
(Example) 247.94 560 T
(code) 297.47 560 T
(using) 326.99 560 T
(getNoti\336cationFD) 359.87 560 T
(can) 454.07 560 T
(be) 477.6 560 T
(found) 495.8 560 T
(in) 530.66 560 T
(Section) 90 546 T
(4.1.) 129 546 T
(If) 90 514.8 T
(Stackw) 101.8 514.8 T
(alk) 137.01 514.8 T
(erAPI) 151.55 514.8 T
(will) 184.01 514.8 T
(only) 206.49 514.8 T
(create) 231.63 514.8 T
(one) 264.09 514.8 T
(noti\336cation) 285.22 514.8 T
(FD,) 343.7 514.8 T
(e) 365.84 514.8 T
(v) 370.87 514.8 T
(en) 376.69 514.8 T
(if) 391.83 514.8 T
(it) 402.96 514.8 T
(is) 413.44 514.8 T
(attached) 425.26 514.8 T
(to) 469.05 514.8 T
(multiple) 482.19 514.8 T
(3) 526 514.8 T
1 9.6 Q
(rd) 532 519.6 T
1 12 Q
(party tar) 90 500.8 T
(get processes.) 130.1 500.8 T
2 10 Q
(static bool handleDebugEvent\050bool block = false\051) 72 474.13 T
1 12 Q
(When) 90 446.8 T
(this) 121.8 446.8 T
(method) 142.28 446.8 T
(is) 181.42 446.8 T
(called) 192.57 446.8 T
(Stackw) 224.37 446.8 T
(alk) 259.58 446.8 T
(erAPI) 274.12 446.8 T
(will) 305.92 446.8 T
(recei) 327.73 446.8 T
(v) 350.75 446.8 T
(e) 356.57 446.8 T
(and) 365.04 446.8 T
(handle) 385.51 446.8 T
(all) 420.64 446.8 T
(pending) 435.78 446.8 T
(deb) 477.59 446.8 T
(ug) 494.68 446.8 T
(e) 509.82 446.8 T
(v) 514.85 446.8 T
(ents) 520.67 446.8 T
(from) 90 429.6 T
(each) 117.25 429.6 T
(3) 143.15 429.6 T
1 9.6 Q
(rd) 149.15 434.4 T
1 12 Q
(party) 160.29 429.6 T
(tar) 188.87 429.6 T
(get) 201.31 429.6 T
(process) 219.9 429.6 T
(to) 259.81 429.6 T
(which) 273.07 429.6 T
(it) 306.32 429.6 T
(is) 316.91 429.6 T
(attached.) 328.84 429.6 T
(After) 375.74 429.6 T
(handling) 404.98 429.6 T
(deb) 450.9 429.6 T
(ug) 467.99 429.6 T
(e) 483.91 429.6 T
(v) 488.94 429.6 T
(ents) 494.76 429.6 T
(each) 518.02 429.6 T
(tar) 90 415.6 T
(get) 102.44 415.6 T
(process) 120.88 415.6 T
(will) 160.63 415.6 T
(be) 183.07 415.6 T
(continued) 198.17 415.6 T
(\050unless) 249.26 415.6 T
(it) 287.03 415.6 T
(w) 297.47 415.6 T
(as) 306.01 415.6 T
(e) 319.78 415.6 T
(xplicitly) 324.92 415.6 T
(stopped) 368.7 415.6 T
(by) 409.8 415.6 T
(the) 425.57 415.6 T
2 10 Q
(ProcDebug::pause) 444 415.6 T
1 12 Q
(method\051) 90 401.6 T
(and) 134.36 401.6 T
(an) 156.05 401.6 T
(y) 167.2 401.6 T
(bytes) 177.56 401.6 T
(on) 207.25 401.6 T
(the) 223.61 401.6 T
(noti\336cation) 242.64 401.6 T
(FD) 301.67 401.6 T
(will) 321.37 401.6 T
(be) 344.4 401.6 T
(cleared.) 360.09 401.6 T
(It) 402.1 401.6 T
(is) 413.79 401.6 T
(generally) 426.16 401.6 T
(e) 475.17 401.6 T
(xpected) 480.32 401.6 T
(that) 522 401.6 T
(users) 90 387.6 T
(will) 119.26 387.6 T
(call) 142.53 387.6 T
(this) 164.45 387.6 T
(method) 186.39 387.6 T
(when) 226.99 387.6 T
(a) 257.58 387.6 T
(e) 267.51 387.6 T
(v) 272.54 387.6 T
(ent) 278.36 387.6 T
(is) 297.62 387.6 T
(sent) 310.22 387.6 T
(to) 334.15 387.6 T
(the) 348.08 387.6 T
(noti\336cation) 367.35 387.6 T
(FD,) 426.61 387.6 T
(although) 449.55 387.6 T
(it) 496.15 387.6 T
(can) 507.42 387.6 T
(be) 528.67 387.6 T
(le) 90 373.6 T
(g) 98.48 373.6 T
(ally called at an) 104.42 373.6 T
(y time.) 179.89 373.6 T
(If) 90 345.6 T
(the) 102.3 345.6 T
2 10 Q
(block) 121.28 345.6 T
1 12 Q
(parameter) 155.59 345.6 T
(is) 207.88 345.6 T
(true,) 220.2 345.6 T
(then) 246.17 345.6 T
2 10 Q
(handleDebugEvents) 271.15 345.6 T
1 12 Q
(will) 377.46 345.6 T
(block) 400.44 345.6 T
(until) 431.42 345.6 T
(it) 457.74 345.6 T
(has) 468.72 345.6 T
(handled) 489.03 345.6 T
(at) 531.34 345.6 T
(least) 90 331.6 T
(one) 115.18 331.6 T
(deb) 135.7 331.6 T
(ug) 152.79 331.6 T
(e) 167.98 331.6 T
(v) 173.01 331.6 T
(ent.) 178.82 331.6 T
(If) 199.68 331.6 T
(the) 210.86 331.6 T
(block) 228.71 331.6 T
(parameter) 258.56 331.6 T
(is) 309.73 331.6 T
2 10 Q
(false) 320.92 331.6 T
1 12 Q
(,) 350.92 331.6 T
(then) 357.11 331.6 T
2 10 Q
(handleDebugEvents) 380.96 331.6 T
1 12 Q
(will) 486.15 331.6 T
(handle) 508.01 331.6 T
(an) 90 317.6 T
(y currently pending deb) 101.15 317.6 T
(ug e) 215.22 317.6 T
(v) 235.25 317.6 T
(ents or immediately return if none are a) 241.07 317.6 T
(v) 430.45 317.6 T
(ailable.) 436.15 317.6 T
(Stackw) 90 289.6 T
(alk) 125.21 289.6 T
(erAPI) 139.75 289.6 T
(may) 172.77 289.6 T
(recei) 197.79 289.6 T
(v) 220.8 289.6 T
(e) 226.62 289.6 T
(process) 236.31 289.6 T
(e) 276.66 289.6 T
(xit) 281.8 289.6 T
(e) 298.83 289.6 T
(v) 303.86 289.6 T
(ents) 309.68 289.6 T
(for) 333.37 289.6 T
(tar) 351.72 289.6 T
(get) 364.17 289.6 T
(processes) 383.19 289.6 T
(while) 433.53 289.6 T
(handling) 464.55 289.6 T
(deb) 510.91 289.6 T
(ug) 528 289.6 T
(e) 90 275.6 T
(v) 95.03 275.6 T
(ents.) 100.85 275.6 T
(The) 128.02 275.6 T
(user) 151.52 275.6 T
(should) 176.35 275.6 T
(check) 213.2 275.6 T
(for) 246.02 275.6 T
(an) 264.85 275.6 T
(y) 276 275.6 T
(e) 286.84 275.6 T
(xited) 291.99 275.6 T
(processes) 320.83 275.6 T
(by) 371.65 275.6 T
(calling) 388.49 275.6 T
2 10 Q
(ProcDebug::isTermi-) 426 275.6 T
(nated) 90 261.6 T
1 12 Q
(after handling deb) 126 261.6 T
(ug e) 213.07 261.6 T
(v) 233.1 261.6 T
(ents.) 238.92 261.6 T
(This method returns) 90 233.6 T
2 10 Q
(true) 189.66 233.6 T
1 12 Q
( if it handled at least one deb) 213.66 233.6 T
(ug e) 351.73 233.6 T
(v) 371.76 233.6 T
(ents and) 377.58 233.6 T
2 10 Q
(false) 420.24 233.6 T
1 12 Q
( otherwise.) 450.24 233.6 T
4 14 Q
(4.2 FrameSteppers) 72 204.27 T
7 12 Q
(Defined In) 72 179.6 T
2 10 Q
(: framestepper.h) 144 179.6 T
1 12 Q
(Stackw) 90 160.6 T
(alk) 125.21 160.6 T
(erAPI) 139.75 160.6 T
(ships) 172.61 160.6 T
(with) 201.49 160.6 T
(numerous) 227.03 160.6 T
(def) 278.57 160.6 T
(ault) 293.77 160.6 T
(implementations) 315.98 160.6 T
(of) 400.19 160.6 T
(the) 414.39 160.6 T
2 10 Q
(FrameStepper) 433.26 160.6 T
1 12 Q
(class.) 513.67 160.6 T
(Each) 72 146.6 T
(of) 101.55 146.6 T
(these) 117.1 146.6 T
2 10 Q
(FrameStepper) 147.32 146.6 T
1 12 Q
(implementations) 224.88 146.6 T
(allo) 310.45 146.6 T
(w) 328.15 146.6 T
(Stackw) 342.37 146.6 T
(alk) 377.58 146.6 T
(erAPI) 392.12 146.6 T
(to) 426.34 146.6 T
(w) 441.24 146.6 T
(alk) 449.78 146.6 T
(a) 470 146.6 T
(type) 480.89 146.6 T
(of) 507.12 146.6 T
(call) 522.67 146.6 T
(frames.) 72 132.6 T
(Section) 112.61 132.6 T
(3.5.1) 151.61 132.6 T
(describes) 180.56 132.6 T
(which) 230.17 132.6 T
2 10 Q
(FrameStepper) 264.46 132.6 T
1 12 Q
(implementations) 341.41 132.6 T
(are) 426.37 132.6 T
(a) 445.98 132.6 T
(v) 451.07 132.6 T
(ailable) 456.77 132.6 T
(on) 493.72 132.6 T
(which) 510.67 132.6 T
(platforms.) 72 118.6 T
(This) 125.56 118.6 T
(sections) 151.46 118.6 T
(gi) 194.69 118.6 T
(v) 203.72 118.6 T
(es) 209.54 118.6 T
(a) 224.1 118.6 T
(brief) 233.99 118.6 T
(description) 261.21 118.6 T
(of) 319.1 118.6 T
(what) 333.66 118.6 T
(each) 361.55 118.6 T
2 10 Q
(FrameStepper) 388.1 118.6 T
1 12 Q
(implementation) 464.66 118.6 T
(does.) 72 104.6 T
(Each) 103.8 104.6 T
(of) 134.59 104.6 T
(the) 151.38 104.6 T
(follo) 172.85 104.6 T
(wing) 195.22 104.6 T
(classes) 226.02 104.6 T
(implements) 266.15 104.6 T
(the) 328.95 104.6 T
2 10 Q
(FrameStepper) 350.42 104.6 T
1 12 Q
(interf) 429.22 104.6 T
(ace) 455.09 104.6 T
(described) 477.88 104.6 T
(in) 530.66 104.6 T
(Section) 72 90.6 T
(3.5.2, so we do not repeat the API description for the classes here.) 111 90.6 T
FMENDPAGE
%%EndPage: "26" 27
%%Page: "27" 28
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 27) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
1 12 Q
(Se) 90 712 T
(v) 101.7 712 T
(eral) 107.52 712 T
(of) 129.91 712 T
(the) 144.3 712 T
2 10 Q
(FrameSteppers) 163.37 712 T
1 12 Q
(use) 245.77 712 T
(helper) 266.17 712 T
(classes) 300.56 712 T
(\050see) 338.28 712 T
2 10 Q
(FrameFuncStepper) 362 712 T
1 12 Q
(as) 462.4 712 T
(an) 476.8 712 T
(e) 492.53 712 T
(xample\051.) 497.68 712 T
(Users) 72 698 T
(can) 102.21 698 T
(further) 121.74 698 T
(customize) 157.28 698 T
(the) 208.82 698 T
(beha) 226.37 698 T
(vior) 248.78 698 T
(of) 270.99 698 T
(a) 283.87 698 T
2 10 Q
(FrameStepper) 292.08 698 T
1 12 Q
(by) 366.96 698 T
(pro) 381.85 698 T
(viding) 397.66 698 T
(their) 431.22 698 T
(o) 456.09 698 T
(wn) 461.79 698 T
(implementa-) 479.34 698 T
(tion of these helper classes.) 72 684 T
4 F
(4.2.1 Class FrameFuncStepper) 72 658 T
1 F
(This) 90 640 T
(class) 114.87 640 T
(implements) 141.74 640 T
(stack) 201.28 640 T
(w) 229.47 640 T
(alking) 238.02 640 T
(through) 271.55 640 T
(a) 312.42 640 T
(call) 321.29 640 T
(frame) 342.15 640 T
(that) 373.67 640 T
(is) 395.21 640 T
(setup) 406.75 640 T
(with) 435.62 640 T
(the) 460.49 640 T
(architectures) 478.69 640 T
(standard) 72 626 T
(stack) 115.71 626 T
(frame.) 143.43 626 T
(F) 177.47 626 T
(or) 183.96 626 T
(e) 197.02 626 T
(xample,) 202.17 626 T
(on) 243.55 626 T
(x86) 258.61 626 T
(this) 279.67 626 T
2 10 Q
(FrameStepper) 300.07 626 T
1 12 Q
(will) 375.12 626 T
(be) 396.85 626 T
(used) 411.24 626 T
(to) 436.29 626 T
(w) 448.68 626 T
(alk) 457.23 626 T
(through) 474.95 626 T
(stack) 515.34 626 T
(frames that are setup with a) 72 612 T
2 10 Q
(push %ebp/mov %esp,%ebp) 207.3 612 T
1 12 Q
(prolog.) 351.3 612 T
4 11 Q
(4.2.1.1 Class FrameFuncHelper) 72 587.67 T
2 10 Q
(FrameFuncStepper) 90 574 T
1 12 Q
(uses) 189.8 574 T
(a) 214.27 574 T
(helper) 223.4 574 T
(class,) 257.2 574 T
2 10 Q
(FrameFuncHelper) 287.33 574 T
1 12 Q
(,) 376.85 574 T
(to) 383.65 574 T
(get) 396.79 574 T
(information) 415.26 574 T
(on) 475.73 574 T
(what) 491.53 574 T
(kind) 518.66 574 T
(of) 72 560 T
(stack) 85.11 560 T
(frame) 112.89 560 T
(it\325) 143.99 560 T
(s) 154 560 T
(w) 161.78 560 T
(alking) 170.32 560 T
(through.) 203.44 560 T
(The) 246.89 560 T
2 10 Q
(FrameFuncHelper) 268.67 560 T
1 12 Q
(will) 361.78 560 T
(generally) 383.57 560 T
(use) 431.34 560 T
(techniques) 450.45 560 T
(such) 504.89 560 T
(as) 530 560 T
(binary) 72 546 T
(analysis) 105.52 546 T
(to) 147.04 546 T
(determine) 159.24 546 T
(what) 210.09 546 T
(type) 236.27 546 T
(of) 259.8 546 T
(stack) 272.65 546 T
(frame) 300.17 546 T
(the) 331.02 546 T
2 10 Q
(FrameFuncStepper) 348.54 546 T
1 12 Q
(is) 447.4 546 T
(w) 458.26 546 T
(alking) 466.81 546 T
(through.) 499.67 546 T
(Users) 72 532 T
(can) 102.03 532 T
(ha) 121.4 532 T
(v) 132.49 532 T
(e) 138.31 532 T
(Stackw) 146.34 532 T
(alk) 181.55 532 T
(erAPI) 196.1 532 T
(use) 227.46 532 T
(their) 246.17 532 T
(o) 270.87 532 T
(wn) 276.57 532 T
(binary) 293.94 532 T
(analysis) 327.31 532 T
(mechanisms) 368.69 532 T
(by) 430.72 532 T
(pro) 445.43 532 T
(viding) 461.25 532 T
(an) 494.63 532 T
(imple-) 508.67 532 T
(mentation of this) 72 518 T
2 10 Q
(FrameFuncHelper) 156.34 518 T
1 12 Q
(.) 245.68 518 T
(There are tw) 90 502 T
(o important types used by) 150.52 502 T
2 10 Q
(FrameFuncHelper) 277.51 502 T
1 12 Q
( and one important function:) 367.51 502 T
2 10 Q
(typedef enum {) 72 477.33 T
(unknown_t=0,) 108 465.33 T
(no_frame,) 108 453.33 T
(standard_frame,) 108 441.33 T
(savefp_only_frame,) 108 429.33 T
(} frame_type;) 72 417.33 T
1 12 Q
(The) 90 390 T
2 10 Q
(frame_type) 112.64 390 T
1 12 Q
(describes) 176.63 390 T
(what) 225.27 390 T
(kind) 252.58 390 T
(of) 277.9 390 T
(stack) 291.88 390 T
(frame) 320.52 390 T
(a) 352.49 390 T
(function) 361.81 390 T
(uses.) 405.79 390 T
(If) 433.43 390 T
(it) 445.41 390 T
(does) 456.07 390 T
(not) 482.05 390 T
(set) 501.37 390 T
(up) 518.69 390 T
(a) 534.67 390 T
(stack) 90 376 T
(frame) 120.59 376 T
(then) 154.51 376 T
2 10 Q
(frame_type) 181.11 376 T
1 12 Q
(should) 247.04 376 T
(be) 284.98 376 T
2 10 Q
(no_frame) 302.24 376 T
1 12 Q
(.) 350.24 376 T
(If) 359.17 376 T
(it) 373.1 376 T
(sets) 385.7 376 T
(up) 409.64 376 T
(a) 427.57 376 T
(standard) 438.83 376 T
(frame) 485.42 376 T
(then) 519.34 376 T
2 10 Q
(frame_type) 90 362 T
1 12 Q
(should) 153.63 362 T
(be) 189.26 362 T
2 10 Q
(standard_frame) 204.22 362 T
1 12 Q
(.) 288.22 362 T
(The) 294.85 362 T
2 10 Q
(savefp_only_frame) 317.14 362 T
1 12 Q
(v) 422.77 362 T
(alue) 428.47 362 T
(currently) 452.09 362 T
(only) 499.04 362 T
(has) 524 362 T
(meaning) 90 348 T
(on) 134.48 348 T
(the) 149.63 348 T
(x86) 167.44 348 T
(f) 188.6 348 T
(amily) 192.47 348 T
(of) 222.96 348 T
(systems,) 236.1 348 T
(and) 280.26 348 T
(means) 300.74 348 T
(that) 334.55 348 T
(a) 355.7 348 T
(function) 364.18 348 T
(sa) 407.33 348 T
(v) 417.08 348 T
(es) 422.9 348 T
(the) 436.05 348 T
(old) 453.86 348 T
(frame) 472.35 348 T
(pointer) 503.48 348 T
(,) 537 348 T
(b) 90 334 T
(ut) 95.76 334 T
(does) 111.32 334 T
(not) 139.54 334 T
(setup) 161.1 334 T
(a) 192.66 334 T
(ne) 204.21 334 T
(w) 215.24 334 T
(frame) 230.13 334 T
(pointer) 264.33 334 T
(\050it) 304.55 334 T
(has) 321.45 334 T
(a) 343.67 334 T
2 10 Q
(push) 355.22 334 T
(%ebp) 391.67 334 T
1 12 Q
(instruction,) 421.89 334 T
(b) 482.45 334 T
(ut) 488.21 334 T
(no) 503.77 334 T
2 10 Q
(mov) 522 334 T
(%esp,%ebp) 90 320 T
1 12 Q
(\051.) 144 320 T
(If) 155.36 320 T
(the) 167.72 320 T
2 10 Q
(FrameFuncHelper) 186.75 320 T
1 12 Q
(cannot) 281.12 320 T
(determine) 317.48 320 T
(the) 369.83 320 T
2 10 Q
(frame_type) 388.86 320 T
1 12 Q
(,) 448.86 320 T
(then) 456.23 320 T
(it) 481.26 320 T
(should) 492.3 320 T
(be) 528.67 320 T
(assigned the v) 90 306 T
(alue) 157.69 306 T
2 10 Q
(unknown_t) 180.68 306 T
1 12 Q
(.) 234.68 306 T
2 10 Q
(typedef enum {) 72 279.33 T
(unknown_s=0,) 108 267.33 T
(unset_frame,) 108 255.33 T
(halfset_frame,) 108 243.33 T
(set_frame) 108 231.33 T
(} frame_state;) 72 219.33 T
1 12 Q
(The) 90 192 T
2 10 Q
(frame_state) 112.81 192 T
1 12 Q
(type) 182.96 192 T
(determines) 207.77 192 T
(the) 264.57 192 T
(current) 283.39 192 T
(state) 321.52 192 T
(of) 347.66 192 T
(function) 361.81 192 T
(with) 405.95 192 T
(a) 431.44 192 T
(stack) 440.91 192 T
(frame) 469.72 192 T
(at) 501.86 192 T
(some) 514.67 192 T
(point) 90 178 T
(of) 119.12 178 T
(e) 133.57 178 T
(x) 138.72 178 T
(ecution.) 144.54 178 T
(F) 187.32 178 T
(or) 193.81 178 T
(e) 208.26 178 T
(xample,) 213.41 178 T
(a) 256.19 178 T
(function) 265.97 178 T
(may) 310.42 178 T
(set) 335.53 178 T
(up) 353.32 178 T
(a) 369.77 178 T
(standard) 379.55 178 T
(stack) 424.66 178 T
(frame) 453.77 178 T
(and) 486.2 178 T
(ha) 507.98 178 T
(v) 519.07 178 T
(e) 524.89 178 T
(a) 534.67 178 T
2 10 Q
(frame_type) 90 164 T
1 12 Q
(of) 153.25 164 T
2 10 Q
(standard_frame) 166.5 164 T
1 12 Q
(,) 250.5 164 T
(b) 256.76 164 T
(ut) 262.52 164 T
(e) 275.1 164 T
(x) 280.25 164 T
(ecution) 286.07 164 T
(may) 324.65 164 T
(be) 348.57 164 T
(at) 363.15 164 T
(the) 375.07 164 T
(\336rst) 392.98 164 T
(instruction) 414.91 164 T
(in) 469.5 164 T
(the) 482.09 164 T
(function) 500 164 T
(and the frame is not yet setup, in which case the) 90 150 T
2 10 Q
(frame_state) 323.29 150 T
1 12 Q
( will be) 389.29 150 T
2 10 Q
(unset_frame) 428.29 150 T
1 12 Q
(.) 494.29 150 T
(If) 90 122 T
(the) 101.31 122 T
(function) 119.3 122 T
(sets) 162.61 122 T
(up) 183.93 122 T
(a) 199.25 122 T
(standard) 207.9 122 T
(stack) 251.88 122 T
(frame) 279.86 122 T
(and) 311.16 122 T
(the) 331.81 122 T
(e) 349.8 122 T
(x) 354.94 122 T
(ecution) 360.76 122 T
(point) 399.41 122 T
(is) 427.4 122 T
(someplace) 438.73 122 T
(where) 492.7 122 T
(the) 525.34 122 T
(frame) 90 108 T
(is) 120.7 108 T
(completely) 131.42 108 T
(setup,) 187.47 108 T
(then) 218.52 108 T
(the) 241.9 108 T
2 10 Q
(frame_state) 259.28 108 T
1 12 Q
(should) 328 108 T
(be) 362.72 108 T
2 10 Q
(set_frame) 376.76 108 T
1 12 Q
(.) 430.76 108 T
(If) 436.48 108 T
(the) 447.19 108 T
(function) 464.57 108 T
(sets) 507.28 108 T
(up) 528 108 T
(a) 90 94 T
(standard) 98.17 94 T
(frame) 141.66 94 T
(and) 172.49 94 T
(the) 192.66 94 T
(e) 210.16 94 T
(x) 215.31 94 T
(ecution) 221.13 94 T
(point) 259.3 94 T
(is) 286.81 94 T
(at) 297.65 94 T
(a) 309.16 94 T
(point) 317.33 94 T
(where) 344.84 94 T
(the) 376.99 94 T
(frame) 394.5 94 T
(does) 425.32 94 T
(not) 450.16 94 T
(yet) 468.33 94 T
(e) 485.84 94 T
(xist) 490.99 94 T
(or) 511.17 94 T
(has) 524 94 T
(been) 90 80 T
(torn) 118.47 80 T
(do) 143.63 80 T
(wn,) 155.33 80 T
(then) 178.81 80 T
(frame_state) 205.29 80 T
(should) 267.09 80 T
(be) 304.91 80 T
(unset_frame.) 322.06 80 T
(The) 390.2 80 T
2 10 Q
(halfset_frame) 414.67 80 T
1 12 Q
(v) 498.49 80 T
(alue) 504.19 80 T
(of) 530 80 T
FMENDPAGE
%%EndPage: "27" 28
%%Page: "28" 29
%%ViewingOrientation: 1 0 0 1
612 792 0 FMBEGINPAGE
0 FrameSetSepColors
FrameNoSep
-45 -45 657 837 C
false FmCB
0 0 0 1 0 0 0 1 K
1 10 Q
0 X
(Page 28) 508.06 749.33 T
3 F
(StackwalkerAPI Programmer\325s Guide) 72 36 T
(December 2009) 274.2 36 T
(Release 1.1) 493.9 36 T
2 F
(frame_state) 90 712 T
1 12 Q
(is) 158.85 712 T
(currently) 169.7 712 T
(only) 215.86 712 T
(meaningful) 240.04 712 T
(on) 297.55 712 T
(the) 312.39 712 T
(x86) 329.9 712 T
(f) 350.75 712 T
(amily) 354.63 712 T
(of) 384.81 712 T
(architecture,) 397.65 712 T
(and) 460.14 712 T
(should) 480.31 712 T
(if) 515.16 712 T
(the) 525.34 712 T
(function has sa) 90 698 T
(v) 161.75 698 T
(ed the old frame pointer) 167.57 698 T
(, b) 282.4 698 T
(ut not yet set up a ne) 294.16 698 T
(w frame pointer) 393.18 698 T
(.) 469.16 698 T
2 10 Q
(typedef std::pair<frame_type, frame_state> alloc_frame_t;) 72 671.33 T
(virtual alloc_frame_t allocatesFrame\050Address addr\051 = 0;) 72 659.33 T
1 12 Q
(The) 90 632 T
2 10 Q
(allocatesFrame) 111.78 632 T
1 12 Q
(function) 198.89 632 T
(of) 242 632 T
2 10 Q
(FrameFuncHelper) 255.12 632 T
1 12 Q
(returns) 348.23 632 T
(a) 384.67 632 T
2 10 Q
(alloc_frame_t) 393.12 632 T
1 12 Q
(that) 474.23 632 T
(describes) 495.35 632 T
(the) 90 618 T
2 10 Q
(frame_type) 107.74 618 T
1 12 Q
(of) 170.82 618 T
(the) 183.89 618 T
(function) 201.63 618 T
(at) 244.71 618 T
2 10 Q
(addr) 256.45 618 T
1 12 Q
(and) 283.52 618 T
(the) 303.93 618 T
2 10 Q
(frame_state) 321.67 618 T
1 12 Q
(of) 390.75 618 T
(the) 403.82 618 T
(function) 421.56 618 T
(when) 464.64 618 T
(e) 493.7 618 T
(x) 498.85 618 T
(ecution) 504.67 618 T
(reached) 90 604 T
2 10 Q
(addr) 130.31 604 T
1 12 Q
(.) 153.65 604 T
(If) 90 576 T
2 10 Q
(addr) 113.38 576 T
1 12 Q
(is) 152.76 576 T
(in) 176.14 576 T
(v) 185 576 T
(alid) 190.7 576 T
(or) 224.08 576 T
(an) 249.46 576 T
(error) 276.17 576 T
(occurs,) 314.87 576 T
2 10 Q
(allocatedFrame) 364.57 576 T
1 12 Q
(should) 463.96 576 T
(return) 511.34 576 T
2 10 Q
(alloc_frame_t\050unknown_t, unknown_s\051.) 90 563.33 T
4 12 Q
(4.2.2 Class Deb) 72 536 T
(ugStepper) 149.76 536 T
1 F
(This) 90 518 T
(class) 114.34 518 T
(uses) 140.68 518 T
(deb) 164.35 518 T
(ug) 181.43 518 T
(information) 196.44 518 T
(found) 256.11 518 T
(in) 287.11 518 T
(a) 299.45 518 T
(binary) 307.79 518 T
(to) 341.45 518 T
(w) 353.8 518 T
(alk) 362.34 518 T
(through) 380.01 518 T
(a) 420.35 518 T
(stack) 428.68 518 T
(frame.) 456.35 518 T
(It) 490.34 518 T
(depends) 500.68 518 T
(on) 72 504 T
(SymtabAPI) 87.01 504 T
(to) 146.02 504 T
(read) 158.36 504 T
(deb) 182.02 504 T
(ug) 199.11 504 T
(information) 214.11 504 T
(from) 273.78 504 T
(a) 300.12 504 T
(binary) 308.45 504 T
(,) 338.33 504 T
(then) 344.34 504 T
(uses) 368.01 504 T
(that) 391.68 504 T
(deb) 412.68 504 T
(ug) 429.77 504 T
(information) 444.78 504 T
(to) 504.45 504 T
(w) 516.79 504 T
(alk) 525.34 504 T
(through a call frame.) 72 490 T
(Most) 90 474 T
(binaries) 118.63 474 T
(must) 160.59 474 T
(be) 187.89 474 T
(b) 203.18 474 T
(uilt) 208.94 474 T
(with) 228.91 474 T
(deb) 254.21 474 T
(ug) 271.29 474 T
(information) 287.26 474 T
(\050-g) 347.88 474 T
(with) 365.83 474 T
(gcc\051) 391.13 474 T
(in) 415.74 474 T
(order) 429.04 474 T
(to) 458.32 474 T
(include) 471.62 474 T
(deb) 510.91 474 T
(ug) 528 474 T
(information) 72 460 T
(that) 132.74 460 T
(this) 154.81 460 T
2 10 Q
(FrameStepper) 176.23 460 T
1 12 Q
(uses.) 252.3 460 T
(Some) 280.04 460 T
(languages,) 311.45 460 T
(such) 366.51 460 T
(as) 392.58 460 T
(C++,) 406.65 460 T
(automatically) 435.27 460 T
(include) 504.67 460 T
(stackw) 72 446 T
(alking) 105.2 446 T
(deb) 138.96 446 T
(ug) 156.05 446 T
(information) 171.8 446 T
(for) 232.22 446 T
(use) 249.96 446 T
(by) 269.71 446 T
(e) 285.47 446 T
(xceptions.) 290.62 446 T
(The) 343.37 446 T
2 10 Q
(DebugStepper) 365.78 446 T
1 12 Q
(class) 441.53 446 T
(will) 468.62 446 T
(also) 491.04 446 T
(mak) 514.13 446 T
(e) 534.67 446 T
(use of this kind of e) 72 432 T
(xception stacking information if it is a) 166.81 432 T
(v) 349.9 432 T
(ailable.) 355.6 432 T
4 F
(4.2.3 Class SigHandlerStepper) 72 406 T
1 F
(The) 90 388 T
2 10 Q
(SigHandlerStepper) 112.1 388 T
1 12 Q
(is) 217.54 388 T
(used) 228.99 388 T
(to) 254.42 388 T
(w) 267.2 388 T
(alk) 275.74 388 T
(through) 293.85 388 T
(UNIX) 334.62 388 T
(signal) 368.05 388 T
(handlers) 400.16 388 T
(as) 444.25 388 T
(found) 457.69 388 T
(on) 489.13 388 T
(the) 504.57 388 T
(call) 522.67 388 T
(stack.) 72 374 T
(On) 103.6 374 T
(some) 122.21 374 T
(systems) 151.49 374 T
(a) 193.43 374 T
(signal) 202.71 374 T
(handler) 235.32 374 T
(generates) 275.25 374 T
(a) 324.5 374 T
(special) 333.77 374 T
(kind) 371.04 374 T
(of) 396.32 374 T
(stack) 410.26 374 T
(frame) 438.86 374 T
(that) 470.79 374 T
(cannot) 492.74 374 T
(be) 528.67 374 T
(w) 72 360 T
(alk) 80.54 360 T
(ed through using normal stack w) 95.09 360 T
(alking techniques.) 251.95 360 T
4 F
(4.2.4 Class BottomOfStackStepper) 72 334 T
1 F
(The) 90 316 T
2 10 Q
(BottomOfStackStepper) 112.01 316 T
1 12 Q
(doesn\325) 235.37 316 T
(t) 267.14 316 T
(actually) 273.83 316 T
(w) 315.18 316 T
(alk) 323.72 316 T
(through) 341.74 316 T
(an) 382.43 316 T
(y) 393.58 316 T
(type) 402.93 316 T
(of) 426.95 316 T
(call) 440.3 316 T
(frame.) 460.98 316 T
(Instead) 495.32 316 T
(it) 533.33 316 T
(attempts) 72 302 T
(to) 116.05 302 T
(detect) 128.77 302 T
(whether) 160.81 302 T
(the) 202.85 302 T
(bottom) 220.89 302 T
(of) 258.28 302 T
(the) 271.66 302 T
(call) 289.71 302 T
(stack) 310.42 302 T
(has) 338.46 302 T
(been) 357.84 302 T
(reached.) 383.88 302 T
(If) 427.57 302 T
(so,) 438.95 302 T
2 10 Q
(BottomOfStack-) 456 302 T
(Stepper) 72 288 T
1 12 Q
(will) 119.63 288 T
(report) 143.94 288 T
2 10 Q
(gcf_stackbottom) 178.23 288 T
1 12 Q
(from) 273.86 288 T
(its) 302.83 288 T
2 10 Q
(getCallerFrame) 319.8 288 T
1 12 Q
(method.) 409.43 288 T
(Otherwise) 454.07 288 T
(it) 509.02 288 T
(will) 521.33 288 T
(report) 72 274 T
2 10 Q
(gcf_not_me) 104.64 274 T
1 12 Q
(.) 164.65 274 T
2 10 Q
(BottomOfStackStepper) 171.63 274 T
1 12 Q
(runs) 295.62 274 T
(with) 320.28 274 T
(a) 345.6 274 T
(higher) 354.92 274 T
(priority) 389.57 274 T
(than) 429.56 274 T
(an) 454.21 274 T
(y) 465.36 274 T
(other) 475.35 274 T
2 10 Q
(Frame-) 504 274 T
(Stepper) 72 260 T
1 12 Q
( class.) 114 260 T
FMENDPAGE
%%EndPage: "28" 29
%%Trailer
FMENDDOCUMENT
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 29
%%DocumentFonts: Helvetica
%%+ Times-Roman
%%+ Courier
%%+ Times-Italic
%%+ Times-Bold
%%+ MinionPro-Regular
%%+ Courier-Oblique
%%+ Courier-Bold
%%+ Symbol
%%DocumentNeedsFonts: Helvetica
%%+ Times-Roman
%%+ Courier
%%+ Times-Italic
%%+ Times-Bold
%%+ Courier-Oblique
%%+ Courier-Bold
%%+ Symbol
%%DocumentSuppliedFonts:%%+ MinionPro-Regular
%%EOF
